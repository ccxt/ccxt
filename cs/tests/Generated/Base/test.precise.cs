using ccxt;
namespace Tests;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

public partial class BaseTest
{
        public void testPrecise()
        {
            object w = "-1.123e-6";
            object x = "0.00000002";
            object y = "69696900000";
            object z = "0";
            object a = "1e8";
            Assert(isEqual(Precise.stringMul(x, y), "1393.938"));
            Assert(isEqual(Precise.stringMul(y, x), "1393.938"));
            Assert(isEqual(Precise.stringAdd(x, y), "69696900000.00000002"));
            Assert(isEqual(Precise.stringAdd(y, x), "69696900000.00000002"));
            Assert(isEqual(Precise.stringSub(x, y), "-69696899999.99999998"));
            Assert(isEqual(Precise.stringSub(y, x), "69696899999.99999998"));
            Assert(isEqual(Precise.stringDiv(x, y, 1), "0"));
            Assert(isEqual(Precise.stringDiv(x, y), "0"));
            Assert(isEqual(Precise.stringDiv(x, y, 19), "0.0000000000000000002"));
            Assert(isEqual(Precise.stringDiv(x, y, 20), "0.00000000000000000028"));
            Assert(isEqual(Precise.stringDiv(x, y, 21), "0.000000000000000000286"));
            Assert(isEqual(Precise.stringDiv(x, y, 22), "0.0000000000000000002869"));
            Assert(isEqual(Precise.stringDiv(y, x), "3484845000000000000"));
            Assert(isEqual(Precise.stringMul(x, w), "-0.00000000000002246"));
            Assert(isEqual(Precise.stringMul(w, x), "-0.00000000000002246"));
            Assert(isEqual(Precise.stringAdd(x, w), "-0.000001103"));
            Assert(isEqual(Precise.stringAdd(w, x), "-0.000001103"));
            Assert(isEqual(Precise.stringSub(x, w), "0.000001143"));
            Assert(isEqual(Precise.stringSub(w, x), "-0.000001143"));
            Assert(isEqual(Precise.stringDiv(x, w), "-0.017809439002671415"));
            Assert(isEqual(Precise.stringDiv(w, x), "-56.15"));
            Assert(isEqual(Precise.stringMul(z, w), "0"));
            Assert(isEqual(Precise.stringMul(z, x), "0"));
            Assert(isEqual(Precise.stringMul(z, y), "0"));
            Assert(isEqual(Precise.stringMul(w, z), "0"));
            Assert(isEqual(Precise.stringMul(x, z), "0"));
            Assert(isEqual(Precise.stringMul(y, z), "0"));
            Assert(isEqual(Precise.stringAdd(z, w), "-0.000001123"));
            Assert(isEqual(Precise.stringAdd(z, x), "0.00000002"));
            Assert(isEqual(Precise.stringAdd(z, y), "69696900000"));
            Assert(isEqual(Precise.stringAdd(w, z), "-0.000001123"));
            Assert(isEqual(Precise.stringAdd(x, z), "0.00000002"));
            Assert(isEqual(Precise.stringAdd(y, z), "69696900000"));
            Assert(isEqual(Precise.stringMul(x, a), "2"));
            Assert(isEqual(Precise.stringMul(a, x), "2"));
            Assert(isEqual(Precise.stringMul(y, a), "6969690000000000000"));
            Assert(isEqual(Precise.stringMul(a, y), "6969690000000000000"));
            Assert(isEqual(Precise.stringDiv(y, a), "696.969"));
            Assert(isEqual(Precise.stringDiv(y, a, -1), "690"));
            Assert(isEqual(Precise.stringDiv(y, a, 0), "696"));
            Assert(isEqual(Precise.stringDiv(y, a, 1), "696.9"));
            Assert(isEqual(Precise.stringDiv(y, a, 2), "696.96"));
            Assert(isEqual(Precise.stringDiv(a, y), "0.001434784043479695"));
            Assert(isEqual(Precise.stringAbs("0"), "0"));
            Assert(isEqual(Precise.stringAbs("-0"), "0"));
            Assert(isEqual(Precise.stringAbs("-500.1"), "500.1"));
            Assert(isEqual(Precise.stringAbs("213"), "213"));
            Assert(isEqual(Precise.stringNeg("0"), "0"));
            Assert(isEqual(Precise.stringNeg("-0"), "0"));
            Assert(isEqual(Precise.stringNeg("-500.1"), "500.1"));
            Assert(isEqual(Precise.stringNeg("213"), "-213"));
            Assert(isEqual(Precise.stringMod("57.123", "10"), "7.123"));
            Assert(isEqual(Precise.stringMod("18", "6"), "0"));
            Assert(isEqual(Precise.stringMod("10.1", "0.5"), "0.1"));
            Assert(isEqual(Precise.stringMod("10000000", "5555"), "1000"));
            Assert(isEqual(Precise.stringMod("5550", "120"), "30"));
            Assert(Precise.stringEquals("1.0000", "1"));
            Assert(Precise.stringEquals("-0.0", "0"));
            Assert(Precise.stringEquals("-0.0", "0.0"));
            Assert(Precise.stringEquals("5.534000", "5.5340"));
            Assert(isEqual(Precise.stringMin("1.0000", "2"), "1"));
            Assert(isEqual(Precise.stringMin("2", "1.2345"), "1.2345"));
            Assert(isEqual(Precise.stringMin("3.1415", "-2"), "-2"));
            Assert(isEqual(Precise.stringMin("-3.1415", "-2"), "-3.1415"));
            Assert(isEqual(Precise.stringMin("0.000", "-0.0"), "0"));
            Assert(isEqual(Precise.stringMax("1.0000", "2"), "2"));
            Assert(isEqual(Precise.stringMax("2", "1.2345"), "2"));
            Assert(isEqual(Precise.stringMax("3.1415", "-2"), "3.1415"));
            Assert(isEqual(Precise.stringMax("-3.1415", "-2"), "-2"));
            Assert(isEqual(Precise.stringMax("0.000", "-0.0"), "0"));
            Assert(!isTrue(Precise.stringGt("1.0000", "2")));
            Assert(Precise.stringGt("2", "1.2345"));
            Assert(Precise.stringGt("3.1415", "-2"));
            Assert(!isTrue(Precise.stringGt("-3.1415", "-2")));
            Assert(!isTrue(Precise.stringGt("3.1415", "3.1415")));
            Assert(Precise.stringGt("3.14150000000000000000001", "3.1415"));
            Assert(!isTrue(Precise.stringGe("1.0000", "2")));
            Assert(Precise.stringGe("2", "1.2345"));
            Assert(Precise.stringGe("3.1415", "-2"));
            Assert(!isTrue(Precise.stringGe("-3.1415", "-2")));
            Assert(Precise.stringGe("3.1415", "3.1415"));
            Assert(Precise.stringGe("3.14150000000000000000001", "3.1415"));
            Assert(Precise.stringLt("1.0000", "2"));
            Assert(!isTrue(Precise.stringLt("2", "1.2345")));
            Assert(!isTrue(Precise.stringLt("3.1415", "-2")));
            Assert(Precise.stringLt("-3.1415", "-2"));
            Assert(!isTrue(Precise.stringLt("3.1415", "3.1415")));
            Assert(Precise.stringLt("3.1415", "3.14150000000000000000001"));
            Assert(Precise.stringLe("1.0000", "2"));
            Assert(!isTrue(Precise.stringLe("2", "1.2345")));
            Assert(!isTrue(Precise.stringLe("3.1415", "-2")));
            Assert(Precise.stringLe("-3.1415", "-2"));
            Assert(Precise.stringLe("3.1415", "3.1415"));
            Assert(Precise.stringLe("3.1415", "3.14150000000000000000001"));
        }
}