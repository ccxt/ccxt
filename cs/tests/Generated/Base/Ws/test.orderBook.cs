using ccxt.pro;
namespace Tests;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

public partial class BaseTest
{
        public void testWsOrderBook()
        {
            object orderBookInput = new Dictionary<string, object>() {
                { "bids", new List<object>() {new List<object>() {10, 10}, new List<object>() {9.1, 11}, new List<object>() {8.2, 12}, new List<object>() {7.3, 13}, new List<object>() {6.4, 14}, new List<object>() {4.5, 13}, new List<object>() {4.5, 0}} },
                { "asks", new List<object>() {new List<object>() {16.6, 10}, new List<object>() {15.5, 11}, new List<object>() {14.4, 12}, new List<object>() {13.3, 13}, new List<object>() {12.2, 14}, new List<object>() {11.1, 13}} },
                { "timestamp", 1574827239000 },
                { "nonce", 69 },
                { "symbol", null },
            };
            object orderBookTarget = new Dictionary<string, object>() {
                { "bids", new List<object>() {new List<object>() {10, 10}, new List<object>() {9.1, 11}, new List<object>() {8.2, 12}, new List<object>() {7.3, 13}, new List<object>() {6.4, 14}} },
                { "asks", new List<object>() {new List<object>() {11.1, 13}, new List<object>() {12.2, 14}, new List<object>() {13.3, 13}, new List<object>() {14.4, 12}, new List<object>() {15.5, 11}, new List<object>() {16.6, 10}} },
                { "timestamp", 1574827239000 },
                { "datetime", "2019-11-27T04:00:39.000Z" },
                { "nonce", 69 },
                { "symbol", null },
            };
            object storeBid = new Dictionary<string, object>() {
                { "bids", new List<object>() {new List<object>() {10, 10}, new List<object>() {9.1, 11}, new List<object>() {8.2, 12}, new List<object>() {7.3, 13}, new List<object>() {6.4, 14}, new List<object>() {3, 4}} },
                { "asks", new List<object>() {new List<object>() {11.1, 13}, new List<object>() {12.2, 14}, new List<object>() {13.3, 13}, new List<object>() {14.4, 12}, new List<object>() {15.5, 11}, new List<object>() {16.6, 10}} },
                { "timestamp", 1574827239000 },
                { "datetime", "2019-11-27T04:00:39.000Z" },
                { "nonce", 69 },
                { "symbol", null },
            };
            object limitedOrderBookTarget = new Dictionary<string, object>() {
                { "bids", new List<object>() {new List<object>() {10, 10}, new List<object>() {9.1, 11}, new List<object>() {8.2, 12}, new List<object>() {7.3, 13}, new List<object>() {6.4, 14}} },
                { "asks", new List<object>() {new List<object>() {11.1, 13}, new List<object>() {12.2, 14}, new List<object>() {13.3, 13}, new List<object>() {14.4, 12}, new List<object>() {15.5, 11}} },
                { "timestamp", 1574827239000 },
                { "datetime", "2019-11-27T04:00:39.000Z" },
                { "nonce", 69 },
                { "symbol", null },
            };
            object limitedDeletedOrderBookTarget = new Dictionary<string, object>() {
                { "bids", new List<object>() {new List<object>() {10, 10}, new List<object>() {9.1, 11}, new List<object>() {8.2, 12}, new List<object>() {7.3, 13}, new List<object>() {6.4, 14}} },
                { "asks", new List<object>() {new List<object>() {11.1, 13}, new List<object>() {12.2, 14}, new List<object>() {13.3, 13}, new List<object>() {14.4, 12}} },
                { "timestamp", 1574827239000 },
                { "datetime", "2019-11-27T04:00:39.000Z" },
                { "nonce", 69 },
                { "symbol", null },
            };
            object indexedOrderBookInput = new Dictionary<string, object>() {
                { "bids", new List<object>() {new List<object>() {10, 10, "1234"}, new List<object>() {9.1, 11, "1235"}, new List<object>() {8.2, 12, "1236"}, new List<object>() {7.3, 13, "1237"}, new List<object>() {6.4, 14, "1238"}, new List<object>() {4.5, 13, "1239"}} },
                { "asks", new List<object>() {new List<object>() {16.6, 10, "1240"}, new List<object>() {15.5, 11, "1241"}, new List<object>() {14.4, 12, "1242"}, new List<object>() {13.3, 13, "1243"}, new List<object>() {12.2, 14, "1244"}, new List<object>() {11.1, 13, "1244"}} },
                { "timestamp", 1574827239000 },
                { "nonce", 69 },
                { "symbol", null },
            };
            object indexedOrderBookTarget = new Dictionary<string, object>() {
                { "bids", new List<object>() {new List<object>() {10, 10, "1234"}, new List<object>() {9.1, 11, "1235"}, new List<object>() {8.2, 12, "1236"}, new List<object>() {7.3, 13, "1237"}, new List<object>() {6.4, 14, "1238"}, new List<object>() {4.5, 13, "1239"}} },
                { "asks", new List<object>() {new List<object>() {11.1, 13, "1244"}, new List<object>() {13.3, 13, "1243"}, new List<object>() {14.4, 12, "1242"}, new List<object>() {15.5, 11, "1241"}, new List<object>() {16.6, 10, "1240"}} },
                { "timestamp", 1574827239000 },
                { "datetime", "2019-11-27T04:00:39.000Z" },
                { "nonce", 69 },
                { "symbol", null },
            };
            object limitedIndexedOrderBookTarget = new Dictionary<string, object>() {
                { "bids", new List<object>() {new List<object>() {10, 10, "1234"}, new List<object>() {9.1, 11, "1235"}, new List<object>() {8.2, 12, "1236"}, new List<object>() {7.3, 13, "1237"}, new List<object>() {6.4, 14, "1238"}} },
                { "asks", new List<object>() {new List<object>() {11.1, 13, "1244"}, new List<object>() {13.3, 13, "1243"}, new List<object>() {14.4, 12, "1242"}, new List<object>() {15.5, 11, "1241"}, new List<object>() {16.6, 10, "1240"}} },
                { "timestamp", 1574827239000 },
                { "datetime", "2019-11-27T04:00:39.000Z" },
                { "nonce", 69 },
                { "symbol", null },
            };
            // const incrementalIndexedOrderBookTarget = {
            //     'bids': [ [ 10.0, 10, '1234' ], [ 9.1, 11, '1235' ], [ 8.2, 12, '1236' ], [ 7.3, 13, '1237' ], [ 6.4, 14, '1238' ], [ 4.5, 13, '1239' ] ],
            //     'asks': [ [ 11.1, 27, '1244' ], [ 13.3, 13, '1243' ], [ 14.4, 12, '1242' ], [ 15.5, 11, '1241' ], [ 16.6, 10, '1240' ] ],
            //     'timestamp': 1574827239000,
            //     'datetime': '2019-11-27T04:00:39.000Z',
            //     'nonce': 69,
            //     'symbol': undefined,
            // };
            // const incrementalIndexedOrderBookDeletedTarget = {
            //     'bids': [ [ 9.1, 11, '1235' ], [ 8.2, 12, '1236' ], [ 7.3, 13, '1237' ], [ 6.4, 14, '1238' ], [ 4.5, 13, '1239' ] ],
            //     'asks': [ [ 11.1, 27, '1244' ], [ 13.3, 13, '1243' ], [ 14.4, 12, '1242' ], [ 15.5, 11, '1241' ], [ 16.6, 10, '1240' ] ],
            //     'timestamp': 1574827239000,
            //     'datetime': '2019-11-27T04:00:39.000Z',
            //     'nonce': 69,
            //     'symbol': undefined,
            // };
            // const limitedIncrementalIndexedOrderBookTarget = {
            //     'bids': [ [ 10.0, 10, '1234' ], [ 9.1, 11, '1235' ], [ 8.2, 12, '1236' ], [ 7.3, 13, '1237' ], [ 6.4, 14, '1238' ] ],
            //     'asks': [ [ 11.1, 27, '1244' ], [ 13.3, 13, '1243' ], [ 14.4, 12, '1242' ], [ 15.5, 11, '1241' ], [ 16.6, 10, '1240' ] ],
            //     'timestamp': 1574827239000,
            //     'datetime': '2019-11-27T04:00:39.000Z',
            //     'nonce': 69,
            //     'symbol': undefined,
            // };
            // const storedIncrementalIndexedOrderBookTarget = {
            //     'bids': [ [ 10.0, 13, '1234' ], [ 9.1, 11, '1235' ], [ 8.2, 12, '1236' ], [ 7.3, 13, '1237' ], [ 6.4, 14, '1238' ], [ 4.5, 13, '1239' ] ],
            //     'asks': [ [ 11.1, 27, '1244' ], [ 13.3, 13, '1243' ], [ 14.4, 12, '1242' ], [ 15.5, 11, '1241' ], [ 16.6, 10, '1240' ] ],
            //     'timestamp': 1574827239000,
            //     'datetime': '2019-11-27T04:00:39.000Z',
            //     'nonce': 69,
            //     'symbol': undefined,
            // };
            // const anotherStoredIncrementalIndexedOrderBookTarget = {
            //     'bids': [ [ 10.2, 13, '1234' ], [ 9.1, 11, '1235' ], [ 8.2, 12, '1236' ], [ 7.3, 13, '1237' ], [ 6.4, 14, '1238' ], [ 4.5, 13, '1239' ] ],
            //     'asks': [ [ 11.1, 27, '1244' ], [ 13.3, 13, '1243' ], [ 14.4, 12, '1242' ], [ 15.5, 11, '1241' ], [ 16.6, 10, '1240' ] ],
            //     'timestamp': 1574827239000,
            //     'datetime': '2019-11-27T04:00:39.000Z',
            //     'nonce': 69,
            //     'symbol': undefined,
            // };
            object overwrite1234 = new Dictionary<string, object>() {
                { "bids", new List<object>() {new List<object>() {9.1, 11, "1235"}, new List<object>() {9, 3, "1231"}, new List<object>() {9, 1, "1232"}, new List<object>() {8.2, 12, "1236"}, new List<object>() {7.3, 13, "1237"}, new List<object>() {6.4, 14, "1238"}, new List<object>() {4.5, 13, "1239"}, new List<object>() {4, 2, "12399"}} },
                { "asks", new List<object>() {new List<object>() {11.1, 13, "1244"}, new List<object>() {13.3, 13, "1243"}, new List<object>() {14.4, 12, "1242"}, new List<object>() {15.5, 11, "1241"}, new List<object>() {16.6, 10, "1240"}} },
                { "timestamp", 1574827239000 },
                { "datetime", "2019-11-27T04:00:39.000Z" },
                { "nonce", 69 },
                { "symbol", null },
            };
            object overwrite1244 = new Dictionary<string, object>() {
                { "bids", new List<object>() {new List<object>() {10, 10, "1234"}, new List<object>() {9.1, 11, "1235"}, new List<object>() {8.2, 12, "1236"}, new List<object>() {7.3, 13, "1237"}, new List<object>() {6.4, 14, "1238"}, new List<object>() {4.5, 13, "1239"}} },
                { "asks", new List<object>() {new List<object>() {13.3, 13, "1243"}, new List<object>() {13.5, 13, "1244"}, new List<object>() {14.4, 12, "1242"}, new List<object>() {15.5, 11, "1241"}, new List<object>() {16.6, 10, "1240"}} },
                { "timestamp", 1574827239000 },
                { "datetime", "2019-11-27T04:00:39.000Z" },
                { "nonce", 69 },
                { "symbol", null },
            };
            object countedOrderBookInput = new Dictionary<string, object>() {
                { "bids", new List<object>() {new List<object>() {10, 10, 1}, new List<object>() {9.1, 11, 1}, new List<object>() {8.2, 12, 1}, new List<object>() {7.3, 13, 1}, new List<object>() {7.3, 0, 1}, new List<object>() {6.4, 14, 5}, new List<object>() {4.5, 13, 5}, new List<object>() {4.5, 13, 1}, new List<object>() {4.5, 13, 0}} },
                { "asks", new List<object>() {new List<object>() {16.6, 10, 1}, new List<object>() {15.5, 11, 1}, new List<object>() {14.4, 12, 1}, new List<object>() {13.3, 13, 3}, new List<object>() {12.2, 14, 3}, new List<object>() {11.1, 13, 3}, new List<object>() {11.1, 13, 12}} },
                { "timestamp", 1574827239000 },
                { "nonce", 69 },
                { "symbol", null },
            };
            object countedOrderBookTarget = new Dictionary<string, object>() {
                { "bids", new List<object>() {new List<object>() {10, 10, 1}, new List<object>() {9.1, 11, 1}, new List<object>() {8.2, 12, 1}, new List<object>() {6.4, 14, 5}} },
                { "asks", new List<object>() {new List<object>() {11.1, 13, 12}, new List<object>() {12.2, 14, 3}, new List<object>() {13.3, 13, 3}, new List<object>() {14.4, 12, 1}, new List<object>() {15.5, 11, 1}, new List<object>() {16.6, 10, 1}} },
                { "timestamp", 1574827239000 },
                { "datetime", "2019-11-27T04:00:39.000Z" },
                { "nonce", 69 },
                { "symbol", null },
            };
            object storedCountedOrderbookTarget = new Dictionary<string, object>() {
                { "bids", new List<object>() {new List<object>() {10, 10, 1}, new List<object>() {9.1, 11, 1}, new List<object>() {8.2, 12, 1}, new List<object>() {6.4, 14, 5}, new List<object>() {1, 1, 6}} },
                { "asks", new List<object>() {new List<object>() {11.1, 13, 12}, new List<object>() {12.2, 14, 3}, new List<object>() {13.3, 13, 3}, new List<object>() {14.4, 12, 1}, new List<object>() {15.5, 11, 1}, new List<object>() {16.6, 10, 1}} },
                { "timestamp", 1574827239000 },
                { "datetime", "2019-11-27T04:00:39.000Z" },
                { "nonce", 69 },
                { "symbol", null },
            };
            object limitedCountedOrderBookTarget = new Dictionary<string, object>() {
                { "bids", new List<object>() {new List<object>() {10, 10, 1}, new List<object>() {9.1, 11, 1}, new List<object>() {8.2, 12, 1}, new List<object>() {6.4, 14, 5}} },
                { "asks", new List<object>() {new List<object>() {11.1, 13, 12}, new List<object>() {12.2, 14, 3}, new List<object>() {13.3, 13, 3}, new List<object>() {14.4, 12, 1}, new List<object>() {15.5, 11, 1}} },
                { "timestamp", 1574827239000 },
                { "datetime", "2019-11-27T04:00:39.000Z" },
                { "nonce", 69 },
                { "symbol", null },
            };
            // const incrementalOrderBookInput = {
            //     'bids': [ [ 10.0, 1 ], [ 10.0, 2 ], [ 9.1, 0 ], [ 8.2, 1 ], [ 7.3, 1 ], [ 6.4, 1 ] ],
            //     'asks': [ [ 11.1, 5 ], [ 11.1, -6 ], [ 11.1, 2 ], [ 12.2, 10 ], [ 12.2, -9.875 ], [ 12.2, 0 ], [ 13.3, 3 ], [ 14.4, 4 ], [ 15.5, 1 ], [ 16.6, 3 ] ],
            //     'timestamp': 1574827239000,
            //     'nonce': 69,
            //     'symbol': undefined,
            // };
            // const incremetalOrderBookTarget = {
            //     'bids': [ [ 10.0, 3 ], [ 8.2, 1 ], [ 7.3, 1 ], [ 6.4, 1 ] ],
            //     'asks': [ [ 11.1, 2 ], [ 12.2, 0.125 ], [ 13.3, 3 ], [ 14.4, 4 ], [ 15.5, 1 ], [ 16.6, 3 ] ],
            //     'timestamp': 1574827239000,
            //     'datetime': '2019-11-27T04:00:39.000Z',
            //     'nonce': 69,
            //     'symbol': undefined,
            // };
            // const limitedIncremetalOrderBookTarget = {
            //     'bids': [ [ 10.0, 3 ], [ 8.2, 1 ], [ 7.3, 1 ], [ 6.4, 1 ] ],
            //     'asks': [ [ 11.1, 2 ], [ 12.2, 0.125 ], [ 13.3, 3 ], [ 14.4, 4 ], [ 15.5, 1 ] ],
            //     'timestamp': 1574827239000,
            //     'datetime': '2019-11-27T04:00:39.000Z',
            //     'nonce': 69,
            //     'symbol': undefined,
            // };
            // const storedIncremetalOrderBookTarget = {
            //     'bids': [ [ 10.0, 3 ], [ 8.2, 1 ], [ 7.3, 1 ], [ 6.4, 1 ], [ 3, 3 ] ],
            //     'asks': [ [ 11.1, 2 ], [ 12.2, 0.125 ], [ 13.3, 3 ], [ 14.4, 4 ], [ 15.5, 1 ], [ 16.6, 3 ] ],
            //     'timestamp': 1574827239000,
            //     'datetime': '2019-11-27T04:00:39.000Z',
            //     'nonce': 69,
            //     'symbol': undefined,
            // };
            // const doubleStoredIncremetalOrderBookTarget = {
            //     'bids': [ [ 10.0, 3 ], [ 8.2, 1 ], [ 7.3, 1 ], [ 6.4, 1 ], [ 3, 10 ] ],
            //     'asks': [ [ 11.1, 2 ], [ 12.2, 0.125 ], [ 13.3, 3 ], [ 14.4, 4 ], [ 15.5, 1 ], [ 16.6, 3 ] ],
            //     'timestamp': 1574827239000,
            //     'datetime': '2019-11-27T04:00:39.000Z',
            //     'nonce': 69,
            //     'symbol': undefined,
            // };
            // const negativeStoredIncremetalOrderBookTarget = {
            //     'bids': [ [ 10.0, 3 ], [ 8.2, 1 ], [ 7.3, 1 ], [ 6.4, 1 ] ],
            //     'asks': [ [ 11.1, 2 ], [ 12.2, 0.125 ], [ 13.3, 3 ], [ 14.4, 4 ], [ 16.6, 3 ] ],
            //     'timestamp': 1574827239000,
            //     'datetime': '2019-11-27T04:00:39.000Z',
            //     'nonce': 69,
            //     'symbol': undefined,
            // };
            
        // --------------------------------------------------------------------------------------------------------------------
        
            var orderBook = new OrderBook(orderBookInput);
            var limited = new OrderBook(orderBookInput, 5);
            orderBook.limit();
            Assert(equals(orderBook, orderBookTarget));
            limited.limit();
            Assert(equals(limited, limitedOrderBookTarget));
            orderBook.limit();
            Assert(equals(orderBook, orderBookTarget));
            var bids = orderBook.bids;
            bids.store(1000, 0);
            orderBook.limit();
            Assert(equals(orderBook, orderBookTarget));
            bids.store(3, 4);
            orderBook.limit();
            Assert(equals(orderBook, storeBid));
            bids.store(3, 0);
            orderBook.limit();
            Assert(equals(orderBook, orderBookTarget));
            var asks = limited.asks;
            asks.store(15.5, 0);
            limited.limit();
            Assert(equals(limited, limitedDeletedOrderBookTarget));
            
        // --------------------------------------------------------------------------------------------------------------------
        
            var indexedOrderBook = new IndexedOrderBook(indexedOrderBookInput);
            var limitedIndexedOrderBook = new IndexedOrderBook(indexedOrderBookInput, 5);
            indexedOrderBook.limit();
            Assert(equals(indexedOrderBook, indexedOrderBookTarget));
            limitedIndexedOrderBook.limit();
            Assert(equals(limitedIndexedOrderBook, limitedIndexedOrderBookTarget));
            indexedOrderBook.limit();
            Assert(equals(indexedOrderBook, indexedOrderBookTarget));
            var indexedBids = indexedOrderBook.bids;
            indexedBids.storeArray(new List<object>() {1000, 0, "12345"});
            Assert(equals(indexedOrderBook, indexedOrderBookTarget));
            indexedBids.storeArray(new List<object>() {10, 0, "1234"});
            indexedBids.storeArray(new List<object>() {10, 2, "1231"});
            indexedBids.storeArray(new List<object>() {10, 1, "1232"});
            indexedBids.storeArray(new List<object>() {4, 2, "12399"});
            indexedBids.storeArray(new List<object>() {9, 2, "1231"});
            indexedBids.storeArray(new List<object>() {9, 3, "1231"});
            indexedBids.storeArray(new List<object>() {9, 1, "1232"});
            indexedOrderBook.limit();
            Assert(equals(indexedOrderBook, overwrite1234));
            indexedOrderBook = new IndexedOrderBook(indexedOrderBookInput);
            var indexedAsks = indexedOrderBook.asks;
            indexedAsks.storeArray(new List<object>() {13.5, 13, "1244"});
            indexedOrderBook.limit();
            Assert(equals(indexedOrderBook, overwrite1244));
            
        // --------------------------------------------------------------------------------------------------------------------
        
            var countedOrderBook = new CountedOrderBook(countedOrderBookInput);
            var limitedCountedOrderBook = new CountedOrderBook(countedOrderBookInput, 5);
            countedOrderBook.limit();
            Assert(equals(countedOrderBook, countedOrderBookTarget));
            limitedCountedOrderBook.limit();
            Assert(equals(limitedCountedOrderBook, limitedCountedOrderBookTarget));
            countedOrderBook.limit();
            Assert(equals(countedOrderBook, countedOrderBookTarget));
            var countedBids = countedOrderBook.bids;
            countedBids.storeArray(new List<object>() {5, 0, 6});
            countedOrderBook.limit();
            Assert(equals(countedOrderBook, countedOrderBookTarget));
            countedBids.storeArray(new List<object>() {1, 1, 6});
            countedOrderBook.limit();
            Assert(equals(countedOrderBook, storedCountedOrderbookTarget));
            
        // --------------------------------------------------------------------------------------------------------------------
        
            // let incrementalOrderBook = new IncrementalOrderBook (incrementalOrderBookInput);
            // const limitedIncrementalOrderBook = new IncrementalOrderBook (incrementalOrderBookInput, 5);
            // incrementalOrderBook.limit ();
            // Assert (equals (incrementalOrderBook, incremetalOrderBookTarget));
            // incrementalOrderBook.limit (5);
            // limitedIncrementalOrderBook.limit ();
            // Assert (equals (incrementalOrderBook, limitedIncremetalOrderBookTarget));
            // Assert (equals (limitedIncrementalOrderBook, limitedIncremetalOrderBookTarget));
            // incrementalOrderBook.limit ();
            // Assert (equals (incrementalOrderBook, incremetalOrderBookTarget));
            // bids = incrementalOrderBook['bids'];
            // bids.store (3, 3);
            // incrementalOrderBook.limit ();
            // Assert (equals (incrementalOrderBook, storedIncremetalOrderBookTarget));
            // bids.store (3, 7);
            // incrementalOrderBook.limit ();
            // Assert (equals (incrementalOrderBook, doubleStoredIncremetalOrderBookTarget));
            // bids.store (17, 0);
            // Assert (equals (incrementalOrderBook, doubleStoredIncremetalOrderBookTarget));
            // incrementalOrderBook = new IncrementalOrderBook (incrementalOrderBookInput);
            // asks = incrementalOrderBook['asks'];
            // asks.store (15.5, -10);
            // incrementalOrderBook.limit ();
            // Assert (equals (incrementalOrderBook, negativeStoredIncremetalOrderBookTarget));
            
        // --------------------------------------------------------------------------------------------------------------------
        
            // let incrementalIndexedOrderBook = new IncrementalIndexedOrderBook (indexedOrderBookInput);
            // const limitedIncrementalIndexedOrderBook = new IncrementalIndexedOrderBook (indexedOrderBookInput, 5);
            // incrementalIndexedOrderBook.limit ();
            // Assert (equals (incrementalIndexedOrderBook, incrementalIndexedOrderBookTarget));
            // incrementalIndexedOrderBook.limit (5);
            // limitedIncrementalIndexedOrderBook.limit ();
            // Assert (equals (incrementalIndexedOrderBook, limitedIncrementalIndexedOrderBookTarget));
            // Assert (equals (limitedIncrementalIndexedOrderBook, limitedIncrementalIndexedOrderBookTarget));
            // incrementalIndexedOrderBook.limit ();
            // Assert (equals (incrementalIndexedOrderBook, incrementalIndexedOrderBookTarget));
            // bids = incrementalIndexedOrderBook['bids'];
            // bids.store (5, 0, 'xxyy');
            // incrementalIndexedOrderBook.limit ();
            // Assert (equals (incrementalIndexedOrderBook, incrementalIndexedOrderBookTarget));
            // bids.store (10.0, 3, '1234');  // price does match merge size
            // incrementalIndexedOrderBook.limit ();
            // Assert (equals (incrementalIndexedOrderBook, storedIncrementalIndexedOrderBookTarget));
            // bids.store (0, 0, '1234');
            // incrementalIndexedOrderBook.limit ();
            // Assert (equals (incrementalIndexedOrderBook, incrementalIndexedOrderBookDeletedTarget));
            // incrementalIndexedOrderBook = new IncrementalIndexedOrderBook (indexedOrderBookInput);
            // bids = incrementalIndexedOrderBook['bids'];
            // bids.store (10.2, 3, '1234');  // price does not match merge size
            // incrementalIndexedOrderBook.limit ();
            // Assert (equals (incrementalIndexedOrderBook, anotherStoredIncrementalIndexedOrderBookTarget));
            
        // --------------------------------------------------------------------------------------------------------------------
        
            var resetBook = new OrderBook(storeBid);
            resetBook.limit();
            resetBook.reset(orderBookInput);
            resetBook.limit();
            Assert(equals(resetBook, orderBookTarget));
        }
}