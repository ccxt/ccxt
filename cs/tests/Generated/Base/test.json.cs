using ccxt;
namespace Tests;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

public partial class BaseTest
{
        public void testJsonInner()
        {
            var exchange = new ccxt.Exchange(new Dictionary<string, object>() {
                { "id", "regirock" },
            });
            // Test: object
            object obj = new Dictionary<string, object>() {
                { "k", "v" },
            };
            object objJson = exchange.json(obj);
            Assert(isEqual(objJson, "{\"k\":\"v\"}"));
            // Test: list
            object list = new List<object>() {1, 2};
            object listJson = exchange.json(list);
            Assert(isEqual(listJson, "[1,2]"));
            try
            {
                throw new BadRequest ((string)"some error") ;
            } catch(Exception e)
            {
                object errString = exchange.json(e);
                Assert(isEqual(errString, "{\"name\":\"BadRequest\"}"));
            }
            // Test: json a string
            object str = "ccxt, rocks!";
            object serializedString = exchange.json(str);
            Assert(isEqual(serializedString, "\"ccxt, rocks!\""));
        }
        public void testJson()
        {
            testJsonInner();
        }
        public void testJson2()
        {
            try
            {
                testJsonInner();
            } catch(Exception exc)
            {
                // todo: the reason this tests was commented in `base/test.init.ts` is that as it needs fix of ast-tranpsiler - it adds extra backslashes in PHP double-quoted json which are read as literal chars in PHP
                object message = ((object)exc).ToString();
                // transpiler trick
                if (!isTrue((((object)(add(message, ""))).ToString()).Contains("json.php")))
                {
                    throw exc;
                }
            }
        }
}