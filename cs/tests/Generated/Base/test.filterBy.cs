using ccxt;
namespace Tests;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

public partial class BaseTest
{
        public void testFilterBy()
        {
            var exchange = new ccxt.Exchange(new Dictionary<string, object>() {
                { "id", "sampleexchange" },
            });
            object sampleArray = new List<object>() {new Dictionary<string, object>() {
            { "foo", "a" },
        }, new Dictionary<string, object>() {
            { "foo", null },
        }, new Dictionary<string, object>() {
            { "foo", "b" },
        }, new Dictionary<string, object>() {
            { "foo", "a" },
            { "bar", "b" },
        }, new Dictionary<string, object>() {
            { "foo", "c" },
        }, new Dictionary<string, object>() {
            { "foo", "d" },
        }, new Dictionary<string, object>() {
            { "foo", "b" },
        }, new Dictionary<string, object>() {
            { "foo", "c" },
        }, new Dictionary<string, object>() {
            { "foo", "c" },
        }};
            try
            {
                object currentValue = exchange.filterBy(sampleArray, "foo", "a");
                object storedValue = new List<object>() {new Dictionary<string, object>() {
            { "foo", "a" },
        }, new Dictionary<string, object>() {
            { "foo", "a" },
            { "bar", "b" },
        }};
                AssertDeepEqual(exchange, null, "testFilterBy", currentValue, storedValue);
            } catch(Exception e)
            {
                // skip c# , todo
                if (isTrue(isTrue(isTrue((((object)e).ToString()).Contains("BaseTest.Assert")) || isTrue((((object)e).ToString()).Contains("at System."))) || isTrue((((object)e).ToString()).Contains("at ccxt.Exchange."))))
                {
                    return;
                } else
                {
                    throw e;
                }
            }
        }
}