using ccxt;
namespace Tests;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


public partial class testMainClass : BaseTest
{
    async static public Task testFetchCurrencies(Exchange exchange, object skippedProperties)
    {
        object method = "fetchCurrencies";
        // const isNative = exchange.has['fetchCurrencies'] && exchange.has['fetchCurrencies'] !== 'emulated';
        object currencies = await exchange.fetchCurrencies();
        // todo: try to invent something to avoid undefined undefined, i.e. maybe move into private and force it to have a value
        if (isTrue(!isEqual(currencies, null)))
        {
            object values = new List<object>(((IDictionary<string,object>)currencies).Values);
            testSharedMethods.assertNonEmtpyArray(exchange, skippedProperties, method, values);
            for (object i = 0; isLessThan(i, getArrayLength(values)); postFixIncrement(ref i))
            {
                testCurrency(exchange, skippedProperties, method, getValue(values, i));
            }
        }
    }

}