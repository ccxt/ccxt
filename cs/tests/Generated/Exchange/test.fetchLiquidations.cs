using ccxt;
namespace Tests;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


public partial class testMainClass : BaseTest
{
    async static public Task testFetchLiquidations(Exchange exchange, object skippedProperties, object code)
    {
        object method = "fetchLiquidations";
        if (!isTrue(getValue(exchange.has, "fetchLiquidations")))
        {
            return;
        }
        object items = await exchange.fetchLiquidations(code);
        assert(((items is IList<object>) || (items.GetType().IsGenericType && items.GetType().GetGenericTypeDefinition().IsAssignableFrom(typeof(List<>)))), add(add(add(add(add(add(exchange.id, " "), method), " "), code), " must return an array. "), exchange.json(items)));
        object now = exchange.milliseconds();
        for (object i = 0; isLessThan(i, getArrayLength(items)); postFixIncrement(ref i))
        {
            testLiquidation(exchange, skippedProperties, method, getValue(items, i), code);
        }
        testSharedMethods.assertTimestampOrder(exchange, method, code, items);
    }

}