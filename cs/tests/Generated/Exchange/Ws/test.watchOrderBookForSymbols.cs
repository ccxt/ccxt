using ccxt;
using ccxt.pro;
namespace Tests;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


public partial class testMainClass : BaseTest
{
    async static public Task testWatchOrderBookForSymbols(Exchange exchange, object skippedProperties, object symbols)
    {
        object method = "watchOrderBookForSymbols";
        object now = exchange.milliseconds();
        object ends = add(now, 15000);
        while (isLessThan(now, ends))
        {
            object response = null;
            try
            {
                response = ((IOrderBook)(await exchange.watchOrderBookForSymbols(symbols))).Copy();
            } catch(Exception e)
            {
                // temporary fix for InvalidNonce for c#
                if (isTrue(!isTrue(testSharedMethods.isTemporaryFailure(e)) && !isTrue((e is InvalidNonce))))
                {
                    throw e;
                }
                now = exchange.milliseconds();
                continue;
            }
            // [ response, skippedProperties ] = fixPhpObjectArray (exchange, response, skippedProperties);
            assert((response is IDictionary<string, object>), add(add(add(add(add(add(exchange.id, " "), method), " "), exchange.json(symbols)), " must return an object. "), exchange.json(response)));
            now = exchange.milliseconds();
            testSharedMethods.assertInArray(exchange, skippedProperties, method, response, "symbol", symbols);
            testOrderBook(exchange, skippedProperties, method, response, null);
        }
    }

}