using ccxt;
namespace Tests;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


public partial class testMainClass : BaseTest
{
    async static public Task testFetchLastPrices(Exchange exchange, object skippedProperties, object symbol)
    {
        object method = "fetchLastprices";
        // log ('fetching all tickers at once...')
        object response = null;
        object checkedSymbol = null;
        try
        {
            response = await exchange.fetchLastPrices();
        } catch(Exception e)
        {
            response = await exchange.fetchLastPrices(new List<object>() {symbol});
            checkedSymbol = symbol;
        }
        assert((response is IDictionary<string, object>), add(add(add(add(add(add(exchange.id, " "), method), " "), checkedSymbol), " must return an object. "), exchange.json(response)));
        object values = new List<object>(((IDictionary<string,object>)response).Values);
        testSharedMethods.assertNonEmtpyArray(exchange, skippedProperties, method, values, checkedSymbol);
        for (object i = 0; isLessThan(i, getArrayLength(values)); postFixIncrement(ref i))
        {
            // todo: symbol check here
            testLastPrice(exchange, skippedProperties, method, getValue(values, i), checkedSymbol);
        }
    }

}