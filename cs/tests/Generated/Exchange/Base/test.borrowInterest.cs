using ccxt;
namespace Tests;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


public partial class testMainClass : BaseTest
{
    public static void testBorrowInterest(Exchange exchange, object skippedProperties, object method, object entry, object requestedCode, object requestedSymbol)
    {
        object format = new Dictionary<string, object>() {
            { "info", new Dictionary<string, object>() {} },
            { "account", "BTC/USDT" },
            { "currency", "USDT" },
            { "interest", exchange.parseNumber("0.1444") },
            { "interestRate", exchange.parseNumber("0.0006") },
            { "amountBorrowed", exchange.parseNumber("30.0") },
            { "timestamp", 1638230400000 },
            { "datetime", "2021-11-30T00:00:00.000Z" },
        };
        object emptyAllowedFor = new List<object>() {"account"};
        testSharedMethods.assertStructure(exchange, skippedProperties, method, entry, format, emptyAllowedFor);
        testSharedMethods.assertTimestampAndDatetime(exchange, skippedProperties, method, entry);
        testSharedMethods.assertCurrencyCode(exchange, skippedProperties, method, entry, getValue(entry, "currency"), requestedCode);
        testSharedMethods.assertSymbol(exchange, skippedProperties, method, entry, getValue(entry, "account"), requestedSymbol);
        testSharedMethods.assertGreater(exchange, skippedProperties, method, entry, "interest", "0");
        testSharedMethods.assertGreater(exchange, skippedProperties, method, entry, "interestRate", "0");
        testSharedMethods.assertGreater(exchange, skippedProperties, method, entry, "amountBorrowed", "0");
    }

}