using ccxt;
namespace Tests;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


public partial class testMainClass : BaseTest
{
    public static void testLedgerEntry(Exchange exchange, object skippedProperties, object method, object entry, object requestedCode, object now)
    {
        object format = new Dictionary<string, object>() {
            { "info", new Dictionary<string, object>() {} },
            { "id", "x1234" },
            { "currency", "BTC" },
            { "account", "spot" },
            { "referenceId", "foo" },
            { "referenceAccount", "bar" },
            { "status", "ok" },
            { "amount", exchange.parseNumber("22") },
            { "before", exchange.parseNumber("111") },
            { "after", exchange.parseNumber("133") },
            { "fee", new Dictionary<string, object>() {} },
            { "direction", "in" },
            { "timestamp", 1638230400000 },
            { "datetime", "2021-11-30T00:00:00.000Z" },
            { "type", "deposit" },
        };
        object emptyAllowedFor = new List<object>() {"referenceId", "referenceAccount", "id"};
        testSharedMethods.assertStructure(exchange, skippedProperties, method, entry, format, emptyAllowedFor);
        testSharedMethods.assertTimestampAndDatetime(exchange, skippedProperties, method, entry, now);
        testSharedMethods.assertCurrencyCode(exchange, skippedProperties, method, entry, getValue(entry, "currency"), requestedCode);
        //
        testSharedMethods.assertInArray(exchange, skippedProperties, method, entry, "direction", new List<object>() {"in", "out"});
        testSharedMethods.assertInArray(exchange, skippedProperties, method, entry, "type", new List<object>() {"trade", "transaction", "margin", "cashback", "referral", "transfer", "fee"});
        // testSharedMethods.assertInArray (exchange, skippedProperties, method, entry, 'account', ['spot', 'swap', .. ]); // todo
        testSharedMethods.assertGreaterOrEqual(exchange, skippedProperties, method, entry, "amount", "0");
        testSharedMethods.assertGreaterOrEqual(exchange, skippedProperties, method, entry, "before", "0");
        testSharedMethods.assertGreaterOrEqual(exchange, skippedProperties, method, entry, "after", "0");
    }

}