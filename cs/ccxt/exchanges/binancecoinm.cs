namespace ccxt;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

public partial class binancecoinm : binance
{
    public override object describe()
    {
        return this.deepExtend(base.describe(), new Dictionary<string, object>() {
            { "id", "binancecoinm" },
            { "name", "Binance COIN-M" },
            { "urls", new Dictionary<string, object>() {
                { "logo", "https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg" },
                { "doc", new List<object>() {"https://binance-docs.github.io/apidocs/delivery/en/", "https://binance-docs.github.io/apidocs/spot/en"} },
            } },
            { "has", new Dictionary<string, object>() {
                { "CORS", null },
                { "spot", false },
                { "margin", false },
                { "swap", true },
                { "future", true },
                { "option", null },
                { "createStopMarketOrder", true },
            } },
            { "options", new Dictionary<string, object>() {
                { "fetchMarkets", new List<object>() {"inverse"} },
                { "defaultSubType", "inverse" },
                { "leverageBrackets", null },
            } },
        });
    }

    public async virtual Task<object> transferIn(object code, object amount, object parameters = null)
    {
        // transfer from spot wallet to coinm futures wallet
        parameters ??= new Dictionary<string, object>();
        return await this.futuresTransfer(code, amount, 3, parameters);
    }

    public async virtual Task<object> transferOut(object code, object amount, object parameters = null)
    {
        // transfer from coinm futures wallet to spot wallet
        parameters ??= new Dictionary<string, object>();
        return await this.futuresTransfer(code, amount, 4, parameters);
    }
}
