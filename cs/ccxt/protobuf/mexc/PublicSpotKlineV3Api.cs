// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PublicSpotKlineV3Api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from PublicSpotKlineV3Api.proto</summary>
public static partial class PublicSpotKlineV3ApiReflection {

  #region Descriptor
  /// <summary>File descriptor for PublicSpotKlineV3Api.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PublicSpotKlineV3ApiReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChpQdWJsaWNTcG90S2xpbmVWM0FwaS5wcm90byLHAQoUUHVibGljU3BvdEts",
          "aW5lVjNBcGkSEAoIaW50ZXJ2YWwYASABKAkSEwoLd2luZG93U3RhcnQYAiAB",
          "KAMSFAoMb3BlbmluZ1ByaWNlGAMgASgJEhQKDGNsb3NpbmdQcmljZRgEIAEo",
          "CRIUCgxoaWdoZXN0UHJpY2UYBSABKAkSEwoLbG93ZXN0UHJpY2UYBiABKAkS",
          "DgoGdm9sdW1lGAcgASgJEg4KBmFtb3VudBgIIAEoCRIRCgl3aW5kb3dFbmQY",
          "CSABKANCPQocY29tLm14Yy5wdXNoLmNvbW1vbi5wcm90b2J1ZkIZUHVibGlj",
          "U3BvdEtsaW5lVjNBcGlQcm90b0gBUAFiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::PublicSpotKlineV3Api), global::PublicSpotKlineV3Api.Parser, new[]{ "Interval", "WindowStart", "OpeningPrice", "ClosingPrice", "HighestPrice", "LowestPrice", "Volume", "Amount", "WindowEnd" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class PublicSpotKlineV3Api : pb::IMessage<PublicSpotKlineV3Api>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PublicSpotKlineV3Api> _parser = new pb::MessageParser<PublicSpotKlineV3Api>(() => new PublicSpotKlineV3Api());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<PublicSpotKlineV3Api> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PublicSpotKlineV3ApiReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PublicSpotKlineV3Api() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PublicSpotKlineV3Api(PublicSpotKlineV3Api other) : this() {
    interval_ = other.interval_;
    windowStart_ = other.windowStart_;
    openingPrice_ = other.openingPrice_;
    closingPrice_ = other.closingPrice_;
    highestPrice_ = other.highestPrice_;
    lowestPrice_ = other.lowestPrice_;
    volume_ = other.volume_;
    amount_ = other.amount_;
    windowEnd_ = other.windowEnd_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PublicSpotKlineV3Api Clone() {
    return new PublicSpotKlineV3Api(this);
  }

  /// <summary>Field number for the "interval" field.</summary>
  public const int IntervalFieldNumber = 1;
  private string interval_ = "";
  /// <summary>
  ///K线周期(Min1,Min5,Min15,Min30,Min60,Hour4,Hour8,Day1,Week1,Month1)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Interval {
    get { return interval_; }
    set {
      interval_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "windowStart" field.</summary>
  public const int WindowStartFieldNumber = 2;
  private long windowStart_;
  /// <summary>
  /// 窗口开始时间戳(秒时间戳)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long WindowStart {
    get { return windowStart_; }
    set {
      windowStart_ = value;
    }
  }

  /// <summary>Field number for the "openingPrice" field.</summary>
  public const int OpeningPriceFieldNumber = 3;
  private string openingPrice_ = "";
  /// <summary>
  /// 开盘价
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string OpeningPrice {
    get { return openingPrice_; }
    set {
      openingPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "closingPrice" field.</summary>
  public const int ClosingPriceFieldNumber = 4;
  private string closingPrice_ = "";
  /// <summary>
  /// 收盘价
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string ClosingPrice {
    get { return closingPrice_; }
    set {
      closingPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "highestPrice" field.</summary>
  public const int HighestPriceFieldNumber = 5;
  private string highestPrice_ = "";
  /// <summary>
  /// 最高价
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string HighestPrice {
    get { return highestPrice_; }
    set {
      highestPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "lowestPrice" field.</summary>
  public const int LowestPriceFieldNumber = 6;
  private string lowestPrice_ = "";
  /// <summary>
  /// 最低价
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string LowestPrice {
    get { return lowestPrice_; }
    set {
      lowestPrice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "volume" field.</summary>
  public const int VolumeFieldNumber = 7;
  private string volume_ = "";
  /// <summary>
  /// 成交量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Volume {
    get { return volume_; }
    set {
      volume_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "amount" field.</summary>
  public const int AmountFieldNumber = 8;
  private string amount_ = "";
  /// <summary>
  /// 成交额
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Amount {
    get { return amount_; }
    set {
      amount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "windowEnd" field.</summary>
  public const int WindowEndFieldNumber = 9;
  private long windowEnd_;
  /// <summary>
  /// 窗口结束时间戳(秒时间戳)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long WindowEnd {
    get { return windowEnd_; }
    set {
      windowEnd_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as PublicSpotKlineV3Api);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(PublicSpotKlineV3Api other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Interval != other.Interval) return false;
    if (WindowStart != other.WindowStart) return false;
    if (OpeningPrice != other.OpeningPrice) return false;
    if (ClosingPrice != other.ClosingPrice) return false;
    if (HighestPrice != other.HighestPrice) return false;
    if (LowestPrice != other.LowestPrice) return false;
    if (Volume != other.Volume) return false;
    if (Amount != other.Amount) return false;
    if (WindowEnd != other.WindowEnd) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Interval.Length != 0) hash ^= Interval.GetHashCode();
    if (WindowStart != 0L) hash ^= WindowStart.GetHashCode();
    if (OpeningPrice.Length != 0) hash ^= OpeningPrice.GetHashCode();
    if (ClosingPrice.Length != 0) hash ^= ClosingPrice.GetHashCode();
    if (HighestPrice.Length != 0) hash ^= HighestPrice.GetHashCode();
    if (LowestPrice.Length != 0) hash ^= LowestPrice.GetHashCode();
    if (Volume.Length != 0) hash ^= Volume.GetHashCode();
    if (Amount.Length != 0) hash ^= Amount.GetHashCode();
    if (WindowEnd != 0L) hash ^= WindowEnd.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Interval.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Interval);
    }
    if (WindowStart != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(WindowStart);
    }
    if (OpeningPrice.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(OpeningPrice);
    }
    if (ClosingPrice.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(ClosingPrice);
    }
    if (HighestPrice.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(HighestPrice);
    }
    if (LowestPrice.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(LowestPrice);
    }
    if (Volume.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Volume);
    }
    if (Amount.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(Amount);
    }
    if (WindowEnd != 0L) {
      output.WriteRawTag(72);
      output.WriteInt64(WindowEnd);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Interval.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Interval);
    }
    if (WindowStart != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(WindowStart);
    }
    if (OpeningPrice.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(OpeningPrice);
    }
    if (ClosingPrice.Length != 0) {
      output.WriteRawTag(34);
      output.WriteString(ClosingPrice);
    }
    if (HighestPrice.Length != 0) {
      output.WriteRawTag(42);
      output.WriteString(HighestPrice);
    }
    if (LowestPrice.Length != 0) {
      output.WriteRawTag(50);
      output.WriteString(LowestPrice);
    }
    if (Volume.Length != 0) {
      output.WriteRawTag(58);
      output.WriteString(Volume);
    }
    if (Amount.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(Amount);
    }
    if (WindowEnd != 0L) {
      output.WriteRawTag(72);
      output.WriteInt64(WindowEnd);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Interval.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Interval);
    }
    if (WindowStart != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(WindowStart);
    }
    if (OpeningPrice.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(OpeningPrice);
    }
    if (ClosingPrice.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ClosingPrice);
    }
    if (HighestPrice.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(HighestPrice);
    }
    if (LowestPrice.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(LowestPrice);
    }
    if (Volume.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Volume);
    }
    if (Amount.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Amount);
    }
    if (WindowEnd != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(WindowEnd);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(PublicSpotKlineV3Api other) {
    if (other == null) {
      return;
    }
    if (other.Interval.Length != 0) {
      Interval = other.Interval;
    }
    if (other.WindowStart != 0L) {
      WindowStart = other.WindowStart;
    }
    if (other.OpeningPrice.Length != 0) {
      OpeningPrice = other.OpeningPrice;
    }
    if (other.ClosingPrice.Length != 0) {
      ClosingPrice = other.ClosingPrice;
    }
    if (other.HighestPrice.Length != 0) {
      HighestPrice = other.HighestPrice;
    }
    if (other.LowestPrice.Length != 0) {
      LowestPrice = other.LowestPrice;
    }
    if (other.Volume.Length != 0) {
      Volume = other.Volume;
    }
    if (other.Amount.Length != 0) {
      Amount = other.Amount;
    }
    if (other.WindowEnd != 0L) {
      WindowEnd = other.WindowEnd;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Interval = input.ReadString();
          break;
        }
        case 16: {
          WindowStart = input.ReadInt64();
          break;
        }
        case 26: {
          OpeningPrice = input.ReadString();
          break;
        }
        case 34: {
          ClosingPrice = input.ReadString();
          break;
        }
        case 42: {
          HighestPrice = input.ReadString();
          break;
        }
        case 50: {
          LowestPrice = input.ReadString();
          break;
        }
        case 58: {
          Volume = input.ReadString();
          break;
        }
        case 66: {
          Amount = input.ReadString();
          break;
        }
        case 72: {
          WindowEnd = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Interval = input.ReadString();
          break;
        }
        case 16: {
          WindowStart = input.ReadInt64();
          break;
        }
        case 26: {
          OpeningPrice = input.ReadString();
          break;
        }
        case 34: {
          ClosingPrice = input.ReadString();
          break;
        }
        case 42: {
          HighestPrice = input.ReadString();
          break;
        }
        case 50: {
          LowestPrice = input.ReadString();
          break;
        }
        case 58: {
          Volume = input.ReadString();
          break;
        }
        case 66: {
          Amount = input.ReadString();
          break;
        }
        case 72: {
          WindowEnd = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
