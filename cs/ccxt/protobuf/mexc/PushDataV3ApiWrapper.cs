// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PushDataV3ApiWrapper.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from PushDataV3ApiWrapper.proto</summary>
public static partial class PushDataV3ApiWrapperReflection {

  #region Descriptor
  /// <summary>File descriptor for PushDataV3ApiWrapper.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static PushDataV3ApiWrapperReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChpQdXNoRGF0YVYzQXBpV3JhcHBlci5wcm90bxoWUHVibGljRGVhbHNWM0Fw",
          "aS5wcm90bxofUHVibGljSW5jcmVhc2VEZXB0aHNWM0FwaS5wcm90bxocUHVi",
          "bGljTGltaXREZXB0aHNWM0FwaS5wcm90bxoYUHJpdmF0ZU9yZGVyc1YzQXBp",
          "LnByb3RvGhtQdWJsaWNCb29rVGlja2VyVjNBcGkucHJvdG8aF1ByaXZhdGVE",
          "ZWFsc1YzQXBpLnByb3RvGhlQcml2YXRlQWNjb3VudFYzQXBpLnByb3RvGhpQ",
          "dWJsaWNTcG90S2xpbmVWM0FwaS5wcm90bxobUHVibGljTWluaVRpY2tlclYz",
          "QXBpLnByb3RvGhxQdWJsaWNNaW5pVGlja2Vyc1YzQXBpLnByb3RvGiBQdWJs",
          "aWNCb29rVGlja2VyQmF0Y2hWM0FwaS5wcm90bxokUHVibGljSW5jcmVhc2VE",
          "ZXB0aHNCYXRjaFYzQXBpLnByb3RvGhxQdWJsaWNBZ2dyZURlcHRoc1YzQXBp",
          "LnByb3RvGhtQdWJsaWNBZ2dyZURlYWxzVjNBcGkucHJvdG8aIFB1YmxpY0Fn",
          "Z3JlQm9va1RpY2tlclYzQXBpLnByb3RvIvAHChRQdXNoRGF0YVYzQXBpV3Jh",
          "cHBlchIPCgdjaGFubmVsGAEgASgJEikKC3B1YmxpY0RlYWxzGK0CIAEoCzIR",
          "LlB1YmxpY0RlYWxzVjNBcGlIABI7ChRwdWJsaWNJbmNyZWFzZURlcHRocxiu",
          "AiABKAsyGi5QdWJsaWNJbmNyZWFzZURlcHRoc1YzQXBpSAASNQoRcHVibGlj",
          "TGltaXREZXB0aHMYrwIgASgLMhcuUHVibGljTGltaXREZXB0aHNWM0FwaUgA",
          "Ei0KDXByaXZhdGVPcmRlcnMYsAIgASgLMhMuUHJpdmF0ZU9yZGVyc1YzQXBp",
          "SAASMwoQcHVibGljQm9va1RpY2tlchixAiABKAsyFi5QdWJsaWNCb29rVGlj",
          "a2VyVjNBcGlIABIrCgxwcml2YXRlRGVhbHMYsgIgASgLMhIuUHJpdmF0ZURl",
          "YWxzVjNBcGlIABIvCg5wcml2YXRlQWNjb3VudBizAiABKAsyFC5Qcml2YXRl",
          "QWNjb3VudFYzQXBpSAASMQoPcHVibGljU3BvdEtsaW5lGLQCIAEoCzIVLlB1",
          "YmxpY1Nwb3RLbGluZVYzQXBpSAASMwoQcHVibGljTWluaVRpY2tlchi1AiAB",
          "KAsyFi5QdWJsaWNNaW5pVGlja2VyVjNBcGlIABI1ChFwdWJsaWNNaW5pVGlj",
          "a2Vycxi2AiABKAsyFy5QdWJsaWNNaW5pVGlja2Vyc1YzQXBpSAASPQoVcHVi",
          "bGljQm9va1RpY2tlckJhdGNoGLcCIAEoCzIbLlB1YmxpY0Jvb2tUaWNrZXJC",
          "YXRjaFYzQXBpSAASRQoZcHVibGljSW5jcmVhc2VEZXB0aHNCYXRjaBi4AiAB",
          "KAsyHy5QdWJsaWNJbmNyZWFzZURlcHRoc0JhdGNoVjNBcGlIABI1ChFwdWJs",
          "aWNBZ2dyZURlcHRocxi5AiABKAsyFy5QdWJsaWNBZ2dyZURlcHRoc1YzQXBp",
          "SAASMwoQcHVibGljQWdncmVEZWFscxi6AiABKAsyFi5QdWJsaWNBZ2dyZURl",
          "YWxzVjNBcGlIABI9ChVwdWJsaWNBZ2dyZUJvb2tUaWNrZXIYuwIgASgLMhsu",
          "UHVibGljQWdncmVCb29rVGlja2VyVjNBcGlIABITCgZzeW1ib2wYAyABKAlI",
          "AYgBARIVCghzeW1ib2xJZBgEIAEoCUgCiAEBEhcKCmNyZWF0ZVRpbWUYBSAB",
          "KANIA4gBARIVCghzZW5kVGltZRgGIAEoA0gEiAEBQgYKBGJvZHlCCQoHX3N5",
          "bWJvbEILCglfc3ltYm9sSWRCDQoLX2NyZWF0ZVRpbWVCCwoJX3NlbmRUaW1l",
          "Qj0KHGNvbS5teGMucHVzaC5jb21tb24ucHJvdG9idWZCGVB1c2hEYXRhVjNB",
          "cGlXcmFwcGVyUHJvdG9IAVABYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::PublicDealsV3ApiReflection.Descriptor, global::PublicIncreaseDepthsV3ApiReflection.Descriptor, global::PublicLimitDepthsV3ApiReflection.Descriptor, global::PrivateOrdersV3ApiReflection.Descriptor, global::PublicBookTickerV3ApiReflection.Descriptor, global::PrivateDealsV3ApiReflection.Descriptor, global::PrivateAccountV3ApiReflection.Descriptor, global::PublicSpotKlineV3ApiReflection.Descriptor, global::PublicMiniTickerV3ApiReflection.Descriptor, global::PublicMiniTickersV3ApiReflection.Descriptor, global::PublicBookTickerBatchV3ApiReflection.Descriptor, global::PublicIncreaseDepthsBatchV3ApiReflection.Descriptor, global::PublicAggreDepthsV3ApiReflection.Descriptor, global::PublicAggreDealsV3ApiReflection.Descriptor, global::PublicAggreBookTickerV3ApiReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::PushDataV3ApiWrapper), global::PushDataV3ApiWrapper.Parser, new[]{ "Channel", "PublicDeals", "PublicIncreaseDepths", "PublicLimitDepths", "PrivateOrders", "PublicBookTicker", "PrivateDeals", "PrivateAccount", "PublicSpotKline", "PublicMiniTicker", "PublicMiniTickers", "PublicBookTickerBatch", "PublicIncreaseDepthsBatch", "PublicAggreDepths", "PublicAggreDeals", "PublicAggreBookTicker", "Symbol", "SymbolId", "CreateTime", "SendTime" }, new[]{ "Body", "Symbol", "SymbolId", "CreateTime", "SendTime" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
[global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
public sealed partial class PushDataV3ApiWrapper : pb::IMessage<PushDataV3ApiWrapper>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<PushDataV3ApiWrapper> _parser = new pb::MessageParser<PushDataV3ApiWrapper>(() => new PushDataV3ApiWrapper());
  private pb::UnknownFieldSet _unknownFields;
  private int _hasBits0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pb::MessageParser<PushDataV3ApiWrapper> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::PushDataV3ApiWrapperReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PushDataV3ApiWrapper() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PushDataV3ApiWrapper(PushDataV3ApiWrapper other) : this() {
    _hasBits0 = other._hasBits0;
    channel_ = other.channel_;
    symbol_ = other.symbol_;
    symbolId_ = other.symbolId_;
    createTime_ = other.createTime_;
    sendTime_ = other.sendTime_;
    switch (other.BodyCase) {
      case BodyOneofCase.PublicDeals:
        PublicDeals = other.PublicDeals.Clone();
        break;
      case BodyOneofCase.PublicIncreaseDepths:
        PublicIncreaseDepths = other.PublicIncreaseDepths.Clone();
        break;
      case BodyOneofCase.PublicLimitDepths:
        PublicLimitDepths = other.PublicLimitDepths.Clone();
        break;
      case BodyOneofCase.PrivateOrders:
        PrivateOrders = other.PrivateOrders.Clone();
        break;
      case BodyOneofCase.PublicBookTicker:
        PublicBookTicker = other.PublicBookTicker.Clone();
        break;
      case BodyOneofCase.PrivateDeals:
        PrivateDeals = other.PrivateDeals.Clone();
        break;
      case BodyOneofCase.PrivateAccount:
        PrivateAccount = other.PrivateAccount.Clone();
        break;
      case BodyOneofCase.PublicSpotKline:
        PublicSpotKline = other.PublicSpotKline.Clone();
        break;
      case BodyOneofCase.PublicMiniTicker:
        PublicMiniTicker = other.PublicMiniTicker.Clone();
        break;
      case BodyOneofCase.PublicMiniTickers:
        PublicMiniTickers = other.PublicMiniTickers.Clone();
        break;
      case BodyOneofCase.PublicBookTickerBatch:
        PublicBookTickerBatch = other.PublicBookTickerBatch.Clone();
        break;
      case BodyOneofCase.PublicIncreaseDepthsBatch:
        PublicIncreaseDepthsBatch = other.PublicIncreaseDepthsBatch.Clone();
        break;
      case BodyOneofCase.PublicAggreDepths:
        PublicAggreDepths = other.PublicAggreDepths.Clone();
        break;
      case BodyOneofCase.PublicAggreDeals:
        PublicAggreDeals = other.PublicAggreDeals.Clone();
        break;
      case BodyOneofCase.PublicAggreBookTicker:
        PublicAggreBookTicker = other.PublicAggreBookTicker.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public PushDataV3ApiWrapper Clone() {
    return new PushDataV3ApiWrapper(this);
  }

  /// <summary>Field number for the "channel" field.</summary>
  public const int ChannelFieldNumber = 1;
  private string channel_ = "";
  /// <summary>
  ///*
  /// 频道
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Channel {
    get { return channel_; }
    set {
      channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "publicDeals" field.</summary>
  public const int PublicDealsFieldNumber = 301;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PublicDealsV3Api PublicDeals {
    get { return bodyCase_ == BodyOneofCase.PublicDeals ? (global::PublicDealsV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PublicDeals;
    }
  }

  /// <summary>Field number for the "publicIncreaseDepths" field.</summary>
  public const int PublicIncreaseDepthsFieldNumber = 302;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PublicIncreaseDepthsV3Api PublicIncreaseDepths {
    get { return bodyCase_ == BodyOneofCase.PublicIncreaseDepths ? (global::PublicIncreaseDepthsV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PublicIncreaseDepths;
    }
  }

  /// <summary>Field number for the "publicLimitDepths" field.</summary>
  public const int PublicLimitDepthsFieldNumber = 303;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PublicLimitDepthsV3Api PublicLimitDepths {
    get { return bodyCase_ == BodyOneofCase.PublicLimitDepths ? (global::PublicLimitDepthsV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PublicLimitDepths;
    }
  }

  /// <summary>Field number for the "privateOrders" field.</summary>
  public const int PrivateOrdersFieldNumber = 304;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PrivateOrdersV3Api PrivateOrders {
    get { return bodyCase_ == BodyOneofCase.PrivateOrders ? (global::PrivateOrdersV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PrivateOrders;
    }
  }

  /// <summary>Field number for the "publicBookTicker" field.</summary>
  public const int PublicBookTickerFieldNumber = 305;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PublicBookTickerV3Api PublicBookTicker {
    get { return bodyCase_ == BodyOneofCase.PublicBookTicker ? (global::PublicBookTickerV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PublicBookTicker;
    }
  }

  /// <summary>Field number for the "privateDeals" field.</summary>
  public const int PrivateDealsFieldNumber = 306;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PrivateDealsV3Api PrivateDeals {
    get { return bodyCase_ == BodyOneofCase.PrivateDeals ? (global::PrivateDealsV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PrivateDeals;
    }
  }

  /// <summary>Field number for the "privateAccount" field.</summary>
  public const int PrivateAccountFieldNumber = 307;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PrivateAccountV3Api PrivateAccount {
    get { return bodyCase_ == BodyOneofCase.PrivateAccount ? (global::PrivateAccountV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PrivateAccount;
    }
  }

  /// <summary>Field number for the "publicSpotKline" field.</summary>
  public const int PublicSpotKlineFieldNumber = 308;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PublicSpotKlineV3Api PublicSpotKline {
    get { return bodyCase_ == BodyOneofCase.PublicSpotKline ? (global::PublicSpotKlineV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PublicSpotKline;
    }
  }

  /// <summary>Field number for the "publicMiniTicker" field.</summary>
  public const int PublicMiniTickerFieldNumber = 309;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PublicMiniTickerV3Api PublicMiniTicker {
    get { return bodyCase_ == BodyOneofCase.PublicMiniTicker ? (global::PublicMiniTickerV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PublicMiniTicker;
    }
  }

  /// <summary>Field number for the "publicMiniTickers" field.</summary>
  public const int PublicMiniTickersFieldNumber = 310;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PublicMiniTickersV3Api PublicMiniTickers {
    get { return bodyCase_ == BodyOneofCase.PublicMiniTickers ? (global::PublicMiniTickersV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PublicMiniTickers;
    }
  }

  /// <summary>Field number for the "publicBookTickerBatch" field.</summary>
  public const int PublicBookTickerBatchFieldNumber = 311;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PublicBookTickerBatchV3Api PublicBookTickerBatch {
    get { return bodyCase_ == BodyOneofCase.PublicBookTickerBatch ? (global::PublicBookTickerBatchV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PublicBookTickerBatch;
    }
  }

  /// <summary>Field number for the "publicIncreaseDepthsBatch" field.</summary>
  public const int PublicIncreaseDepthsBatchFieldNumber = 312;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PublicIncreaseDepthsBatchV3Api PublicIncreaseDepthsBatch {
    get { return bodyCase_ == BodyOneofCase.PublicIncreaseDepthsBatch ? (global::PublicIncreaseDepthsBatchV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PublicIncreaseDepthsBatch;
    }
  }

  /// <summary>Field number for the "publicAggreDepths" field.</summary>
  public const int PublicAggreDepthsFieldNumber = 313;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PublicAggreDepthsV3Api PublicAggreDepths {
    get { return bodyCase_ == BodyOneofCase.PublicAggreDepths ? (global::PublicAggreDepthsV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PublicAggreDepths;
    }
  }

  /// <summary>Field number for the "publicAggreDeals" field.</summary>
  public const int PublicAggreDealsFieldNumber = 314;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PublicAggreDealsV3Api PublicAggreDeals {
    get { return bodyCase_ == BodyOneofCase.PublicAggreDeals ? (global::PublicAggreDealsV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PublicAggreDeals;
    }
  }

  /// <summary>Field number for the "publicAggreBookTicker" field.</summary>
  public const int PublicAggreBookTickerFieldNumber = 315;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public global::PublicAggreBookTickerV3Api PublicAggreBookTicker {
    get { return bodyCase_ == BodyOneofCase.PublicAggreBookTicker ? (global::PublicAggreBookTickerV3Api) body_ : null; }
    set {
      body_ = value;
      bodyCase_ = value == null ? BodyOneofCase.None : BodyOneofCase.PublicAggreBookTicker;
    }
  }

  /// <summary>Field number for the "symbol" field.</summary>
  public const int SymbolFieldNumber = 3;
  private readonly static string SymbolDefaultValue = "";

  private string symbol_;
  /// <summary>
  ///*
  /// 交易对
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string Symbol {
    get { return symbol_ ?? SymbolDefaultValue; }
    set {
      symbol_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "symbol" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSymbol {
    get { return symbol_ != null; }
  }
  /// <summary>Clears the value of the "symbol" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSymbol() {
    symbol_ = null;
  }

  /// <summary>Field number for the "symbolId" field.</summary>
  public const int SymbolIdFieldNumber = 4;
  private readonly static string SymbolIdDefaultValue = "";

  private string symbolId_;
  /// <summary>
  ///*
  /// 交易对ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public string SymbolId {
    get { return symbolId_ ?? SymbolIdDefaultValue; }
    set {
      symbolId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }
  /// <summary>Gets whether the "symbolId" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSymbolId {
    get { return symbolId_ != null; }
  }
  /// <summary>Clears the value of the "symbolId" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSymbolId() {
    symbolId_ = null;
  }

  /// <summary>Field number for the "createTime" field.</summary>
  public const int CreateTimeFieldNumber = 5;
  private readonly static long CreateTimeDefaultValue = 0L;

  private long createTime_;
  /// <summary>
  ///*
  /// 消息生成时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long CreateTime {
    get { if ((_hasBits0 & 1) != 0) { return createTime_; } else { return CreateTimeDefaultValue; } }
    set {
      _hasBits0 |= 1;
      createTime_ = value;
    }
  }
  /// <summary>Gets whether the "createTime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasCreateTime {
    get { return (_hasBits0 & 1) != 0; }
  }
  /// <summary>Clears the value of the "createTime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearCreateTime() {
    _hasBits0 &= ~1;
  }

  /// <summary>Field number for the "sendTime" field.</summary>
  public const int SendTimeFieldNumber = 6;
  private readonly static long SendTimeDefaultValue = 0L;

  private long sendTime_;
  /// <summary>
  ///*
  /// 消息推送时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public long SendTime {
    get { if ((_hasBits0 & 2) != 0) { return sendTime_; } else { return SendTimeDefaultValue; } }
    set {
      _hasBits0 |= 2;
      sendTime_ = value;
    }
  }
  /// <summary>Gets whether the "sendTime" field is set</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool HasSendTime {
    get { return (_hasBits0 & 2) != 0; }
  }
  /// <summary>Clears the value of the "sendTime" field</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearSendTime() {
    _hasBits0 &= ~2;
  }

  private object body_;
  /// <summary>Enum of possible cases for the "body" oneof.</summary>
  public enum BodyOneofCase {
    None = 0,
    PublicDeals = 301,
    PublicIncreaseDepths = 302,
    PublicLimitDepths = 303,
    PrivateOrders = 304,
    PublicBookTicker = 305,
    PrivateDeals = 306,
    PrivateAccount = 307,
    PublicSpotKline = 308,
    PublicMiniTicker = 309,
    PublicMiniTickers = 310,
    PublicBookTickerBatch = 311,
    PublicIncreaseDepthsBatch = 312,
    PublicAggreDepths = 313,
    PublicAggreDeals = 314,
    PublicAggreBookTicker = 315,
  }
  private BodyOneofCase bodyCase_ = BodyOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public BodyOneofCase BodyCase {
    get { return bodyCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void ClearBody() {
    bodyCase_ = BodyOneofCase.None;
    body_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override bool Equals(object other) {
    return Equals(other as PushDataV3ApiWrapper);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public bool Equals(PushDataV3ApiWrapper other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Channel != other.Channel) return false;
    if (!object.Equals(PublicDeals, other.PublicDeals)) return false;
    if (!object.Equals(PublicIncreaseDepths, other.PublicIncreaseDepths)) return false;
    if (!object.Equals(PublicLimitDepths, other.PublicLimitDepths)) return false;
    if (!object.Equals(PrivateOrders, other.PrivateOrders)) return false;
    if (!object.Equals(PublicBookTicker, other.PublicBookTicker)) return false;
    if (!object.Equals(PrivateDeals, other.PrivateDeals)) return false;
    if (!object.Equals(PrivateAccount, other.PrivateAccount)) return false;
    if (!object.Equals(PublicSpotKline, other.PublicSpotKline)) return false;
    if (!object.Equals(PublicMiniTicker, other.PublicMiniTicker)) return false;
    if (!object.Equals(PublicMiniTickers, other.PublicMiniTickers)) return false;
    if (!object.Equals(PublicBookTickerBatch, other.PublicBookTickerBatch)) return false;
    if (!object.Equals(PublicIncreaseDepthsBatch, other.PublicIncreaseDepthsBatch)) return false;
    if (!object.Equals(PublicAggreDepths, other.PublicAggreDepths)) return false;
    if (!object.Equals(PublicAggreDeals, other.PublicAggreDeals)) return false;
    if (!object.Equals(PublicAggreBookTicker, other.PublicAggreBookTicker)) return false;
    if (Symbol != other.Symbol) return false;
    if (SymbolId != other.SymbolId) return false;
    if (CreateTime != other.CreateTime) return false;
    if (SendTime != other.SendTime) return false;
    if (BodyCase != other.BodyCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override int GetHashCode() {
    int hash = 1;
    if (Channel.Length != 0) hash ^= Channel.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PublicDeals) hash ^= PublicDeals.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PublicIncreaseDepths) hash ^= PublicIncreaseDepths.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PublicLimitDepths) hash ^= PublicLimitDepths.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PrivateOrders) hash ^= PrivateOrders.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PublicBookTicker) hash ^= PublicBookTicker.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PrivateDeals) hash ^= PrivateDeals.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PrivateAccount) hash ^= PrivateAccount.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PublicSpotKline) hash ^= PublicSpotKline.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PublicMiniTicker) hash ^= PublicMiniTicker.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PublicMiniTickers) hash ^= PublicMiniTickers.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PublicBookTickerBatch) hash ^= PublicBookTickerBatch.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PublicIncreaseDepthsBatch) hash ^= PublicIncreaseDepthsBatch.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PublicAggreDepths) hash ^= PublicAggreDepths.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PublicAggreDeals) hash ^= PublicAggreDeals.GetHashCode();
    if (bodyCase_ == BodyOneofCase.PublicAggreBookTicker) hash ^= PublicAggreBookTicker.GetHashCode();
    if (HasSymbol) hash ^= Symbol.GetHashCode();
    if (HasSymbolId) hash ^= SymbolId.GetHashCode();
    if (HasCreateTime) hash ^= CreateTime.GetHashCode();
    if (HasSendTime) hash ^= SendTime.GetHashCode();
    hash ^= (int) bodyCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Channel.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Channel);
    }
    if (HasSymbol) {
      output.WriteRawTag(26);
      output.WriteString(Symbol);
    }
    if (HasSymbolId) {
      output.WriteRawTag(34);
      output.WriteString(SymbolId);
    }
    if (HasCreateTime) {
      output.WriteRawTag(40);
      output.WriteInt64(CreateTime);
    }
    if (HasSendTime) {
      output.WriteRawTag(48);
      output.WriteInt64(SendTime);
    }
    if (bodyCase_ == BodyOneofCase.PublicDeals) {
      output.WriteRawTag(234, 18);
      output.WriteMessage(PublicDeals);
    }
    if (bodyCase_ == BodyOneofCase.PublicIncreaseDepths) {
      output.WriteRawTag(242, 18);
      output.WriteMessage(PublicIncreaseDepths);
    }
    if (bodyCase_ == BodyOneofCase.PublicLimitDepths) {
      output.WriteRawTag(250, 18);
      output.WriteMessage(PublicLimitDepths);
    }
    if (bodyCase_ == BodyOneofCase.PrivateOrders) {
      output.WriteRawTag(130, 19);
      output.WriteMessage(PrivateOrders);
    }
    if (bodyCase_ == BodyOneofCase.PublicBookTicker) {
      output.WriteRawTag(138, 19);
      output.WriteMessage(PublicBookTicker);
    }
    if (bodyCase_ == BodyOneofCase.PrivateDeals) {
      output.WriteRawTag(146, 19);
      output.WriteMessage(PrivateDeals);
    }
    if (bodyCase_ == BodyOneofCase.PrivateAccount) {
      output.WriteRawTag(154, 19);
      output.WriteMessage(PrivateAccount);
    }
    if (bodyCase_ == BodyOneofCase.PublicSpotKline) {
      output.WriteRawTag(162, 19);
      output.WriteMessage(PublicSpotKline);
    }
    if (bodyCase_ == BodyOneofCase.PublicMiniTicker) {
      output.WriteRawTag(170, 19);
      output.WriteMessage(PublicMiniTicker);
    }
    if (bodyCase_ == BodyOneofCase.PublicMiniTickers) {
      output.WriteRawTag(178, 19);
      output.WriteMessage(PublicMiniTickers);
    }
    if (bodyCase_ == BodyOneofCase.PublicBookTickerBatch) {
      output.WriteRawTag(186, 19);
      output.WriteMessage(PublicBookTickerBatch);
    }
    if (bodyCase_ == BodyOneofCase.PublicIncreaseDepthsBatch) {
      output.WriteRawTag(194, 19);
      output.WriteMessage(PublicIncreaseDepthsBatch);
    }
    if (bodyCase_ == BodyOneofCase.PublicAggreDepths) {
      output.WriteRawTag(202, 19);
      output.WriteMessage(PublicAggreDepths);
    }
    if (bodyCase_ == BodyOneofCase.PublicAggreDeals) {
      output.WriteRawTag(210, 19);
      output.WriteMessage(PublicAggreDeals);
    }
    if (bodyCase_ == BodyOneofCase.PublicAggreBookTicker) {
      output.WriteRawTag(218, 19);
      output.WriteMessage(PublicAggreBookTicker);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Channel.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Channel);
    }
    if (HasSymbol) {
      output.WriteRawTag(26);
      output.WriteString(Symbol);
    }
    if (HasSymbolId) {
      output.WriteRawTag(34);
      output.WriteString(SymbolId);
    }
    if (HasCreateTime) {
      output.WriteRawTag(40);
      output.WriteInt64(CreateTime);
    }
    if (HasSendTime) {
      output.WriteRawTag(48);
      output.WriteInt64(SendTime);
    }
    if (bodyCase_ == BodyOneofCase.PublicDeals) {
      output.WriteRawTag(234, 18);
      output.WriteMessage(PublicDeals);
    }
    if (bodyCase_ == BodyOneofCase.PublicIncreaseDepths) {
      output.WriteRawTag(242, 18);
      output.WriteMessage(PublicIncreaseDepths);
    }
    if (bodyCase_ == BodyOneofCase.PublicLimitDepths) {
      output.WriteRawTag(250, 18);
      output.WriteMessage(PublicLimitDepths);
    }
    if (bodyCase_ == BodyOneofCase.PrivateOrders) {
      output.WriteRawTag(130, 19);
      output.WriteMessage(PrivateOrders);
    }
    if (bodyCase_ == BodyOneofCase.PublicBookTicker) {
      output.WriteRawTag(138, 19);
      output.WriteMessage(PublicBookTicker);
    }
    if (bodyCase_ == BodyOneofCase.PrivateDeals) {
      output.WriteRawTag(146, 19);
      output.WriteMessage(PrivateDeals);
    }
    if (bodyCase_ == BodyOneofCase.PrivateAccount) {
      output.WriteRawTag(154, 19);
      output.WriteMessage(PrivateAccount);
    }
    if (bodyCase_ == BodyOneofCase.PublicSpotKline) {
      output.WriteRawTag(162, 19);
      output.WriteMessage(PublicSpotKline);
    }
    if (bodyCase_ == BodyOneofCase.PublicMiniTicker) {
      output.WriteRawTag(170, 19);
      output.WriteMessage(PublicMiniTicker);
    }
    if (bodyCase_ == BodyOneofCase.PublicMiniTickers) {
      output.WriteRawTag(178, 19);
      output.WriteMessage(PublicMiniTickers);
    }
    if (bodyCase_ == BodyOneofCase.PublicBookTickerBatch) {
      output.WriteRawTag(186, 19);
      output.WriteMessage(PublicBookTickerBatch);
    }
    if (bodyCase_ == BodyOneofCase.PublicIncreaseDepthsBatch) {
      output.WriteRawTag(194, 19);
      output.WriteMessage(PublicIncreaseDepthsBatch);
    }
    if (bodyCase_ == BodyOneofCase.PublicAggreDepths) {
      output.WriteRawTag(202, 19);
      output.WriteMessage(PublicAggreDepths);
    }
    if (bodyCase_ == BodyOneofCase.PublicAggreDeals) {
      output.WriteRawTag(210, 19);
      output.WriteMessage(PublicAggreDeals);
    }
    if (bodyCase_ == BodyOneofCase.PublicAggreBookTicker) {
      output.WriteRawTag(218, 19);
      output.WriteMessage(PublicAggreBookTicker);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public int CalculateSize() {
    int size = 0;
    if (Channel.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
    }
    if (bodyCase_ == BodyOneofCase.PublicDeals) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublicDeals);
    }
    if (bodyCase_ == BodyOneofCase.PublicIncreaseDepths) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublicIncreaseDepths);
    }
    if (bodyCase_ == BodyOneofCase.PublicLimitDepths) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublicLimitDepths);
    }
    if (bodyCase_ == BodyOneofCase.PrivateOrders) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PrivateOrders);
    }
    if (bodyCase_ == BodyOneofCase.PublicBookTicker) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublicBookTicker);
    }
    if (bodyCase_ == BodyOneofCase.PrivateDeals) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PrivateDeals);
    }
    if (bodyCase_ == BodyOneofCase.PrivateAccount) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PrivateAccount);
    }
    if (bodyCase_ == BodyOneofCase.PublicSpotKline) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublicSpotKline);
    }
    if (bodyCase_ == BodyOneofCase.PublicMiniTicker) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublicMiniTicker);
    }
    if (bodyCase_ == BodyOneofCase.PublicMiniTickers) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublicMiniTickers);
    }
    if (bodyCase_ == BodyOneofCase.PublicBookTickerBatch) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublicBookTickerBatch);
    }
    if (bodyCase_ == BodyOneofCase.PublicIncreaseDepthsBatch) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublicIncreaseDepthsBatch);
    }
    if (bodyCase_ == BodyOneofCase.PublicAggreDepths) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublicAggreDepths);
    }
    if (bodyCase_ == BodyOneofCase.PublicAggreDeals) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublicAggreDeals);
    }
    if (bodyCase_ == BodyOneofCase.PublicAggreBookTicker) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(PublicAggreBookTicker);
    }
    if (HasSymbol) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Symbol);
    }
    if (HasSymbolId) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(SymbolId);
    }
    if (HasCreateTime) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
    }
    if (HasSendTime) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(SendTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(PushDataV3ApiWrapper other) {
    if (other == null) {
      return;
    }
    if (other.Channel.Length != 0) {
      Channel = other.Channel;
    }
    if (other.HasSymbol) {
      Symbol = other.Symbol;
    }
    if (other.HasSymbolId) {
      SymbolId = other.SymbolId;
    }
    if (other.HasCreateTime) {
      CreateTime = other.CreateTime;
    }
    if (other.HasSendTime) {
      SendTime = other.SendTime;
    }
    switch (other.BodyCase) {
      case BodyOneofCase.PublicDeals:
        if (PublicDeals == null) {
          PublicDeals = new global::PublicDealsV3Api();
        }
        PublicDeals.MergeFrom(other.PublicDeals);
        break;
      case BodyOneofCase.PublicIncreaseDepths:
        if (PublicIncreaseDepths == null) {
          PublicIncreaseDepths = new global::PublicIncreaseDepthsV3Api();
        }
        PublicIncreaseDepths.MergeFrom(other.PublicIncreaseDepths);
        break;
      case BodyOneofCase.PublicLimitDepths:
        if (PublicLimitDepths == null) {
          PublicLimitDepths = new global::PublicLimitDepthsV3Api();
        }
        PublicLimitDepths.MergeFrom(other.PublicLimitDepths);
        break;
      case BodyOneofCase.PrivateOrders:
        if (PrivateOrders == null) {
          PrivateOrders = new global::PrivateOrdersV3Api();
        }
        PrivateOrders.MergeFrom(other.PrivateOrders);
        break;
      case BodyOneofCase.PublicBookTicker:
        if (PublicBookTicker == null) {
          PublicBookTicker = new global::PublicBookTickerV3Api();
        }
        PublicBookTicker.MergeFrom(other.PublicBookTicker);
        break;
      case BodyOneofCase.PrivateDeals:
        if (PrivateDeals == null) {
          PrivateDeals = new global::PrivateDealsV3Api();
        }
        PrivateDeals.MergeFrom(other.PrivateDeals);
        break;
      case BodyOneofCase.PrivateAccount:
        if (PrivateAccount == null) {
          PrivateAccount = new global::PrivateAccountV3Api();
        }
        PrivateAccount.MergeFrom(other.PrivateAccount);
        break;
      case BodyOneofCase.PublicSpotKline:
        if (PublicSpotKline == null) {
          PublicSpotKline = new global::PublicSpotKlineV3Api();
        }
        PublicSpotKline.MergeFrom(other.PublicSpotKline);
        break;
      case BodyOneofCase.PublicMiniTicker:
        if (PublicMiniTicker == null) {
          PublicMiniTicker = new global::PublicMiniTickerV3Api();
        }
        PublicMiniTicker.MergeFrom(other.PublicMiniTicker);
        break;
      case BodyOneofCase.PublicMiniTickers:
        if (PublicMiniTickers == null) {
          PublicMiniTickers = new global::PublicMiniTickersV3Api();
        }
        PublicMiniTickers.MergeFrom(other.PublicMiniTickers);
        break;
      case BodyOneofCase.PublicBookTickerBatch:
        if (PublicBookTickerBatch == null) {
          PublicBookTickerBatch = new global::PublicBookTickerBatchV3Api();
        }
        PublicBookTickerBatch.MergeFrom(other.PublicBookTickerBatch);
        break;
      case BodyOneofCase.PublicIncreaseDepthsBatch:
        if (PublicIncreaseDepthsBatch == null) {
          PublicIncreaseDepthsBatch = new global::PublicIncreaseDepthsBatchV3Api();
        }
        PublicIncreaseDepthsBatch.MergeFrom(other.PublicIncreaseDepthsBatch);
        break;
      case BodyOneofCase.PublicAggreDepths:
        if (PublicAggreDepths == null) {
          PublicAggreDepths = new global::PublicAggreDepthsV3Api();
        }
        PublicAggreDepths.MergeFrom(other.PublicAggreDepths);
        break;
      case BodyOneofCase.PublicAggreDeals:
        if (PublicAggreDeals == null) {
          PublicAggreDeals = new global::PublicAggreDealsV3Api();
        }
        PublicAggreDeals.MergeFrom(other.PublicAggreDeals);
        break;
      case BodyOneofCase.PublicAggreBookTicker:
        if (PublicAggreBookTicker == null) {
          PublicAggreBookTicker = new global::PublicAggreBookTickerV3Api();
        }
        PublicAggreBookTicker.MergeFrom(other.PublicAggreBookTicker);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Channel = input.ReadString();
          break;
        }
        case 26: {
          Symbol = input.ReadString();
          break;
        }
        case 34: {
          SymbolId = input.ReadString();
          break;
        }
        case 40: {
          CreateTime = input.ReadInt64();
          break;
        }
        case 48: {
          SendTime = input.ReadInt64();
          break;
        }
        case 2410: {
          global::PublicDealsV3Api subBuilder = new global::PublicDealsV3Api();
          if (bodyCase_ == BodyOneofCase.PublicDeals) {
            subBuilder.MergeFrom(PublicDeals);
          }
          input.ReadMessage(subBuilder);
          PublicDeals = subBuilder;
          break;
        }
        case 2418: {
          global::PublicIncreaseDepthsV3Api subBuilder = new global::PublicIncreaseDepthsV3Api();
          if (bodyCase_ == BodyOneofCase.PublicIncreaseDepths) {
            subBuilder.MergeFrom(PublicIncreaseDepths);
          }
          input.ReadMessage(subBuilder);
          PublicIncreaseDepths = subBuilder;
          break;
        }
        case 2426: {
          global::PublicLimitDepthsV3Api subBuilder = new global::PublicLimitDepthsV3Api();
          if (bodyCase_ == BodyOneofCase.PublicLimitDepths) {
            subBuilder.MergeFrom(PublicLimitDepths);
          }
          input.ReadMessage(subBuilder);
          PublicLimitDepths = subBuilder;
          break;
        }
        case 2434: {
          global::PrivateOrdersV3Api subBuilder = new global::PrivateOrdersV3Api();
          if (bodyCase_ == BodyOneofCase.PrivateOrders) {
            subBuilder.MergeFrom(PrivateOrders);
          }
          input.ReadMessage(subBuilder);
          PrivateOrders = subBuilder;
          break;
        }
        case 2442: {
          global::PublicBookTickerV3Api subBuilder = new global::PublicBookTickerV3Api();
          if (bodyCase_ == BodyOneofCase.PublicBookTicker) {
            subBuilder.MergeFrom(PublicBookTicker);
          }
          input.ReadMessage(subBuilder);
          PublicBookTicker = subBuilder;
          break;
        }
        case 2450: {
          global::PrivateDealsV3Api subBuilder = new global::PrivateDealsV3Api();
          if (bodyCase_ == BodyOneofCase.PrivateDeals) {
            subBuilder.MergeFrom(PrivateDeals);
          }
          input.ReadMessage(subBuilder);
          PrivateDeals = subBuilder;
          break;
        }
        case 2458: {
          global::PrivateAccountV3Api subBuilder = new global::PrivateAccountV3Api();
          if (bodyCase_ == BodyOneofCase.PrivateAccount) {
            subBuilder.MergeFrom(PrivateAccount);
          }
          input.ReadMessage(subBuilder);
          PrivateAccount = subBuilder;
          break;
        }
        case 2466: {
          global::PublicSpotKlineV3Api subBuilder = new global::PublicSpotKlineV3Api();
          if (bodyCase_ == BodyOneofCase.PublicSpotKline) {
            subBuilder.MergeFrom(PublicSpotKline);
          }
          input.ReadMessage(subBuilder);
          PublicSpotKline = subBuilder;
          break;
        }
        case 2474: {
          global::PublicMiniTickerV3Api subBuilder = new global::PublicMiniTickerV3Api();
          if (bodyCase_ == BodyOneofCase.PublicMiniTicker) {
            subBuilder.MergeFrom(PublicMiniTicker);
          }
          input.ReadMessage(subBuilder);
          PublicMiniTicker = subBuilder;
          break;
        }
        case 2482: {
          global::PublicMiniTickersV3Api subBuilder = new global::PublicMiniTickersV3Api();
          if (bodyCase_ == BodyOneofCase.PublicMiniTickers) {
            subBuilder.MergeFrom(PublicMiniTickers);
          }
          input.ReadMessage(subBuilder);
          PublicMiniTickers = subBuilder;
          break;
        }
        case 2490: {
          global::PublicBookTickerBatchV3Api subBuilder = new global::PublicBookTickerBatchV3Api();
          if (bodyCase_ == BodyOneofCase.PublicBookTickerBatch) {
            subBuilder.MergeFrom(PublicBookTickerBatch);
          }
          input.ReadMessage(subBuilder);
          PublicBookTickerBatch = subBuilder;
          break;
        }
        case 2498: {
          global::PublicIncreaseDepthsBatchV3Api subBuilder = new global::PublicIncreaseDepthsBatchV3Api();
          if (bodyCase_ == BodyOneofCase.PublicIncreaseDepthsBatch) {
            subBuilder.MergeFrom(PublicIncreaseDepthsBatch);
          }
          input.ReadMessage(subBuilder);
          PublicIncreaseDepthsBatch = subBuilder;
          break;
        }
        case 2506: {
          global::PublicAggreDepthsV3Api subBuilder = new global::PublicAggreDepthsV3Api();
          if (bodyCase_ == BodyOneofCase.PublicAggreDepths) {
            subBuilder.MergeFrom(PublicAggreDepths);
          }
          input.ReadMessage(subBuilder);
          PublicAggreDepths = subBuilder;
          break;
        }
        case 2514: {
          global::PublicAggreDealsV3Api subBuilder = new global::PublicAggreDealsV3Api();
          if (bodyCase_ == BodyOneofCase.PublicAggreDeals) {
            subBuilder.MergeFrom(PublicAggreDeals);
          }
          input.ReadMessage(subBuilder);
          PublicAggreDeals = subBuilder;
          break;
        }
        case 2522: {
          global::PublicAggreBookTickerV3Api subBuilder = new global::PublicAggreBookTickerV3Api();
          if (bodyCase_ == BodyOneofCase.PublicAggreBookTicker) {
            subBuilder.MergeFrom(PublicAggreBookTicker);
          }
          input.ReadMessage(subBuilder);
          PublicAggreBookTicker = subBuilder;
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
    if ((tag & 7) == 4) {
      // Abort on any end group tag.
      return;
    }
    switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          Channel = input.ReadString();
          break;
        }
        case 26: {
          Symbol = input.ReadString();
          break;
        }
        case 34: {
          SymbolId = input.ReadString();
          break;
        }
        case 40: {
          CreateTime = input.ReadInt64();
          break;
        }
        case 48: {
          SendTime = input.ReadInt64();
          break;
        }
        case 2410: {
          global::PublicDealsV3Api subBuilder = new global::PublicDealsV3Api();
          if (bodyCase_ == BodyOneofCase.PublicDeals) {
            subBuilder.MergeFrom(PublicDeals);
          }
          input.ReadMessage(subBuilder);
          PublicDeals = subBuilder;
          break;
        }
        case 2418: {
          global::PublicIncreaseDepthsV3Api subBuilder = new global::PublicIncreaseDepthsV3Api();
          if (bodyCase_ == BodyOneofCase.PublicIncreaseDepths) {
            subBuilder.MergeFrom(PublicIncreaseDepths);
          }
          input.ReadMessage(subBuilder);
          PublicIncreaseDepths = subBuilder;
          break;
        }
        case 2426: {
          global::PublicLimitDepthsV3Api subBuilder = new global::PublicLimitDepthsV3Api();
          if (bodyCase_ == BodyOneofCase.PublicLimitDepths) {
            subBuilder.MergeFrom(PublicLimitDepths);
          }
          input.ReadMessage(subBuilder);
          PublicLimitDepths = subBuilder;
          break;
        }
        case 2434: {
          global::PrivateOrdersV3Api subBuilder = new global::PrivateOrdersV3Api();
          if (bodyCase_ == BodyOneofCase.PrivateOrders) {
            subBuilder.MergeFrom(PrivateOrders);
          }
          input.ReadMessage(subBuilder);
          PrivateOrders = subBuilder;
          break;
        }
        case 2442: {
          global::PublicBookTickerV3Api subBuilder = new global::PublicBookTickerV3Api();
          if (bodyCase_ == BodyOneofCase.PublicBookTicker) {
            subBuilder.MergeFrom(PublicBookTicker);
          }
          input.ReadMessage(subBuilder);
          PublicBookTicker = subBuilder;
          break;
        }
        case 2450: {
          global::PrivateDealsV3Api subBuilder = new global::PrivateDealsV3Api();
          if (bodyCase_ == BodyOneofCase.PrivateDeals) {
            subBuilder.MergeFrom(PrivateDeals);
          }
          input.ReadMessage(subBuilder);
          PrivateDeals = subBuilder;
          break;
        }
        case 2458: {
          global::PrivateAccountV3Api subBuilder = new global::PrivateAccountV3Api();
          if (bodyCase_ == BodyOneofCase.PrivateAccount) {
            subBuilder.MergeFrom(PrivateAccount);
          }
          input.ReadMessage(subBuilder);
          PrivateAccount = subBuilder;
          break;
        }
        case 2466: {
          global::PublicSpotKlineV3Api subBuilder = new global::PublicSpotKlineV3Api();
          if (bodyCase_ == BodyOneofCase.PublicSpotKline) {
            subBuilder.MergeFrom(PublicSpotKline);
          }
          input.ReadMessage(subBuilder);
          PublicSpotKline = subBuilder;
          break;
        }
        case 2474: {
          global::PublicMiniTickerV3Api subBuilder = new global::PublicMiniTickerV3Api();
          if (bodyCase_ == BodyOneofCase.PublicMiniTicker) {
            subBuilder.MergeFrom(PublicMiniTicker);
          }
          input.ReadMessage(subBuilder);
          PublicMiniTicker = subBuilder;
          break;
        }
        case 2482: {
          global::PublicMiniTickersV3Api subBuilder = new global::PublicMiniTickersV3Api();
          if (bodyCase_ == BodyOneofCase.PublicMiniTickers) {
            subBuilder.MergeFrom(PublicMiniTickers);
          }
          input.ReadMessage(subBuilder);
          PublicMiniTickers = subBuilder;
          break;
        }
        case 2490: {
          global::PublicBookTickerBatchV3Api subBuilder = new global::PublicBookTickerBatchV3Api();
          if (bodyCase_ == BodyOneofCase.PublicBookTickerBatch) {
            subBuilder.MergeFrom(PublicBookTickerBatch);
          }
          input.ReadMessage(subBuilder);
          PublicBookTickerBatch = subBuilder;
          break;
        }
        case 2498: {
          global::PublicIncreaseDepthsBatchV3Api subBuilder = new global::PublicIncreaseDepthsBatchV3Api();
          if (bodyCase_ == BodyOneofCase.PublicIncreaseDepthsBatch) {
            subBuilder.MergeFrom(PublicIncreaseDepthsBatch);
          }
          input.ReadMessage(subBuilder);
          PublicIncreaseDepthsBatch = subBuilder;
          break;
        }
        case 2506: {
          global::PublicAggreDepthsV3Api subBuilder = new global::PublicAggreDepthsV3Api();
          if (bodyCase_ == BodyOneofCase.PublicAggreDepths) {
            subBuilder.MergeFrom(PublicAggreDepths);
          }
          input.ReadMessage(subBuilder);
          PublicAggreDepths = subBuilder;
          break;
        }
        case 2514: {
          global::PublicAggreDealsV3Api subBuilder = new global::PublicAggreDealsV3Api();
          if (bodyCase_ == BodyOneofCase.PublicAggreDeals) {
            subBuilder.MergeFrom(PublicAggreDeals);
          }
          input.ReadMessage(subBuilder);
          PublicAggreDeals = subBuilder;
          break;
        }
        case 2522: {
          global::PublicAggreBookTickerV3Api subBuilder = new global::PublicAggreBookTickerV3Api();
          if (bodyCase_ == BodyOneofCase.PublicAggreBookTicker) {
            subBuilder.MergeFrom(PublicAggreBookTicker);
          }
          input.ReadMessage(subBuilder);
          PublicAggreBookTicker = subBuilder;
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
