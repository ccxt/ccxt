// -------------------------------------------------------------------------------

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

// -------------------------------------------------------------------------------

package ccxt

func (this *CoinbaseadvancedCore) V2PublicGetCurrencies(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PublicGetCurrencies", args...)
}

func (this *CoinbaseadvancedCore) V2PublicGetCurrenciesCrypto(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PublicGetCurrenciesCrypto", args...)
}

func (this *CoinbaseadvancedCore) V2PublicGetTime(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PublicGetTime", args...)
}

func (this *CoinbaseadvancedCore) V2PublicGetExchangeRates(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PublicGetExchangeRates", args...)
}

func (this *CoinbaseadvancedCore) V2PublicGetUsersUserId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PublicGetUsersUserId", args...)
}

func (this *CoinbaseadvancedCore) V2PublicGetPricesSymbolBuy(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PublicGetPricesSymbolBuy", args...)
}

func (this *CoinbaseadvancedCore) V2PublicGetPricesSymbolSell(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PublicGetPricesSymbolSell", args...)
}

func (this *CoinbaseadvancedCore) V2PublicGetPricesSymbolSpot(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PublicGetPricesSymbolSpot", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccounts(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccounts", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccountsAccountId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccountsAccountId", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccountsAccountIdAddresses(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccountsAccountIdAddresses", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccountsAccountIdAddressesAddressId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccountsAccountIdAddressesAddressId", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccountsAccountIdAddressesAddressIdTransactions(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccountsAccountIdAddressesAddressIdTransactions", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccountsAccountIdTransactions(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccountsAccountIdTransactions", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccountsAccountIdTransactionsTransactionId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccountsAccountIdTransactionsTransactionId", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccountsAccountIdBuys(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccountsAccountIdBuys", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccountsAccountIdBuysBuyId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccountsAccountIdBuysBuyId", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccountsAccountIdSells(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccountsAccountIdSells", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccountsAccountIdSellsSellId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccountsAccountIdSellsSellId", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccountsAccountIdDeposits(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccountsAccountIdDeposits", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccountsAccountIdDepositsDepositId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccountsAccountIdDepositsDepositId", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccountsAccountIdWithdrawals(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccountsAccountIdWithdrawals", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetAccountsAccountIdWithdrawalsWithdrawalId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetAccountsAccountIdWithdrawalsWithdrawalId", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetPaymentMethods(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetPaymentMethods", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetPaymentMethodsPaymentMethodId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetPaymentMethodsPaymentMethodId", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetUser(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetUser", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateGetUserAuth(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateGetUserAuth", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePostAccounts(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePostAccounts", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePostAccountsAccountIdPrimary(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePostAccountsAccountIdPrimary", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePostAccountsAccountIdAddresses(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePostAccountsAccountIdAddresses", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePostAccountsAccountIdTransactions(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePostAccountsAccountIdTransactions", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePostAccountsAccountIdTransactionsTransactionIdComplete(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePostAccountsAccountIdTransactionsTransactionIdComplete", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePostAccountsAccountIdTransactionsTransactionIdResend(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePostAccountsAccountIdTransactionsTransactionIdResend", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePostAccountsAccountIdBuys(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePostAccountsAccountIdBuys", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePostAccountsAccountIdBuysBuyIdCommit(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePostAccountsAccountIdBuysBuyIdCommit", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePostAccountsAccountIdSells(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePostAccountsAccountIdSells", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePostAccountsAccountIdSellsSellIdCommit(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePostAccountsAccountIdSellsSellIdCommit", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePostAccountsAccountIdDeposits(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePostAccountsAccountIdDeposits", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePostAccountsAccountIdDepositsDepositIdCommit(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePostAccountsAccountIdDepositsDepositIdCommit", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePostAccountsAccountIdWithdrawals(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePostAccountsAccountIdWithdrawals", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePostAccountsAccountIdWithdrawalsWithdrawalIdCommit(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePostAccountsAccountIdWithdrawalsWithdrawalIdCommit", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePutAccountsAccountId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePutAccountsAccountId", args...)
}

func (this *CoinbaseadvancedCore) V2PrivatePutUser(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivatePutUser", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateDeleteAccountsId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateDeleteAccountsId", args...)
}

func (this *CoinbaseadvancedCore) V2PrivateDeleteAccountsAccountIdTransactionsTransactionId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v2PrivateDeleteAccountsAccountIdTransactionsTransactionId", args...)
}

func (this *CoinbaseadvancedCore) V3PublicGetBrokerageTime(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PublicGetBrokerageTime", args...)
}

func (this *CoinbaseadvancedCore) V3PublicGetBrokerageMarketProductBook(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PublicGetBrokerageMarketProductBook", args...)
}

func (this *CoinbaseadvancedCore) V3PublicGetBrokerageMarketProducts(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PublicGetBrokerageMarketProducts", args...)
}

func (this *CoinbaseadvancedCore) V3PublicGetBrokerageMarketProductsProductId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PublicGetBrokerageMarketProductsProductId", args...)
}

func (this *CoinbaseadvancedCore) V3PublicGetBrokerageMarketProductsProductIdCandles(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PublicGetBrokerageMarketProductsProductIdCandles", args...)
}

func (this *CoinbaseadvancedCore) V3PublicGetBrokerageMarketProductsProductIdTicker(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PublicGetBrokerageMarketProductsProductIdTicker", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageAccounts(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageAccounts", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageAccountsAccountUuid(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageAccountsAccountUuid", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageOrdersHistoricalBatch(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageOrdersHistoricalBatch", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageOrdersHistoricalFills(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageOrdersHistoricalFills", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageOrdersHistoricalOrderId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageOrdersHistoricalOrderId", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageProducts(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageProducts", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageProductsProductId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageProductsProductId", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageProductsProductIdCandles(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageProductsProductIdCandles", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageProductsProductIdTicker(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageProductsProductIdTicker", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageBestBidAsk(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageBestBidAsk", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageProductBook(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageProductBook", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageTransactionSummary(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageTransactionSummary", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokeragePortfolios(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokeragePortfolios", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokeragePortfoliosPortfolioUuid(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokeragePortfoliosPortfolioUuid", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageConvertTradeTradeId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageConvertTradeTradeId", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageCfmBalanceSummary(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageCfmBalanceSummary", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageCfmPositions(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageCfmPositions", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageCfmPositionsProductId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageCfmPositionsProductId", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageCfmSweeps(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageCfmSweeps", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageIntxPortfolioPortfolioUuid(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageIntxPortfolioPortfolioUuid", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageIntxPositionsPortfolioUuid(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageIntxPositionsPortfolioUuid", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageIntxPositionsPortfolioUuidSymbol(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageIntxPositionsPortfolioUuidSymbol", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokeragePaymentMethods(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokeragePaymentMethods", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokeragePaymentMethodsPaymentMethodId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokeragePaymentMethodsPaymentMethodId", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateGetBrokerageKeyPermissions(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateGetBrokerageKeyPermissions", args...)
}

func (this *CoinbaseadvancedCore) V3PrivatePostBrokerageOrders(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivatePostBrokerageOrders", args...)
}

func (this *CoinbaseadvancedCore) V3PrivatePostBrokerageOrdersBatchCancel(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivatePostBrokerageOrdersBatchCancel", args...)
}

func (this *CoinbaseadvancedCore) V3PrivatePostBrokerageOrdersEdit(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivatePostBrokerageOrdersEdit", args...)
}

func (this *CoinbaseadvancedCore) V3PrivatePostBrokerageOrdersEditPreview(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivatePostBrokerageOrdersEditPreview", args...)
}

func (this *CoinbaseadvancedCore) V3PrivatePostBrokerageOrdersPreview(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivatePostBrokerageOrdersPreview", args...)
}

func (this *CoinbaseadvancedCore) V3PrivatePostBrokeragePortfolios(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivatePostBrokeragePortfolios", args...)
}

func (this *CoinbaseadvancedCore) V3PrivatePostBrokeragePortfoliosMoveFunds(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivatePostBrokeragePortfoliosMoveFunds", args...)
}

func (this *CoinbaseadvancedCore) V3PrivatePostBrokerageConvertQuote(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivatePostBrokerageConvertQuote", args...)
}

func (this *CoinbaseadvancedCore) V3PrivatePostBrokerageConvertTradeTradeId(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivatePostBrokerageConvertTradeTradeId", args...)
}

func (this *CoinbaseadvancedCore) V3PrivatePostBrokerageCfmSweepsSchedule(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivatePostBrokerageCfmSweepsSchedule", args...)
}

func (this *CoinbaseadvancedCore) V3PrivatePostBrokerageIntxAllocate(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivatePostBrokerageIntxAllocate", args...)
}

func (this *CoinbaseadvancedCore) V3PrivatePostBrokerageOrdersClosePosition(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivatePostBrokerageOrdersClosePosition", args...)
}

func (this *CoinbaseadvancedCore) V3PrivatePutBrokeragePortfoliosPortfolioUuid(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivatePutBrokeragePortfoliosPortfolioUuid", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateDeleteBrokeragePortfoliosPortfolioUuid(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateDeleteBrokeragePortfoliosPortfolioUuid", args...)
}

func (this *CoinbaseadvancedCore) V3PrivateDeleteBrokerageCfmSweeps(args ...interface{}) <-chan interface{} {
	return this.callEndpointAsync("v3PrivateDeleteBrokerageCfmSweeps", args...)
}
