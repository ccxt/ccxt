package ccxtpro
import ccxt "github.com/ccxt/ccxt/go/v4"

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

type BinanceusCore struct {
	*BinanceCore
	base *BinanceCore
}

func NewBinanceusCore() *BinanceusCore {
    p := &BinanceusCore{}
	base := NewBinanceCore()
	p.base = base
	p.BinanceCore = base
    ccxt.SetDefaults(p)
    return p
}

func  (this *BinanceusCore) Describe() interface{}  {
    // eslint-disable-next-line new-cap
    restInstance := ccxt.NewBinanceus(nil)
    var restDescribe interface{} = restInstance.Describe()
    var parentWsDescribe interface{} = this.base.DescribeData()
    var extended interface{} = this.DeepExtend(restDescribe, parentWsDescribe)
    return this.DeepExtend(extended, map[string]interface{} {
        "id": "binanceus",
        "name": "Binance US",
        "countries": []interface{}{"US"},
        "certified": false,
        "urls": map[string]interface{} {
            "logo": "https://user-images.githubusercontent.com/1294454/65177307-217b7c80-da5f-11e9-876e-0b748ba0a358.jpg",
            "api": map[string]interface{} {
                "ws": map[string]interface{} {
                    "spot": "wss://stream.binance.us:9443/ws",
                },
                "web": "https://www.binance.us",
                "sapi": "https://api.binance.us/sapi/v1",
                "wapi": "https://api.binance.us/wapi/v3",
                "public": "https://api.binance.us/api/v3",
                "private": "https://api.binance.us/api/v3",
                "v3": "https://api.binance.us/api/v3",
                "v1": "https://api.binance.us/api/v1",
            },
            "www": "https://www.binance.us",
            "referral": "https://www.binance.us/?ref=35005074",
            "doc": "https://github.com/binance-us/binance-official-api-docs",
            "fees": "https://www.binance.us/en/fee/schedule",
        },
        "options": map[string]interface{} {
            "fetchCurrencies": false,
            "quoteOrderQty": false,
            "defaultType": "spot",
            "fetchMarkets": map[string]interface{} {
                "types": []interface{}{"spot"},
            },
        },
    })
}


func (this *BinanceusCore) Init(userConfig map[string]interface{}) {
    this.base.Init(this.DeepExtend(this.Describe(), userConfig))
    this.Itf = this
    this.Exchange.DerivedExchange = this
}
