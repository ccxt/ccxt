package ccxtpro
// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


type FetchTradesOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchTradesOptions func(opts *FetchTradesOptionsStruct)

func WithFetchTradesSince(since int64) FetchTradesOptions {
    return func(opts *FetchTradesOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchTradesLimit(limit int64) FetchTradesOptions {
    return func(opts *FetchTradesOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchTradesParams(params map[string]interface{}) FetchTradesOptions {
    return func(opts *FetchTradesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTradesWsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchTradesWsOptions func(opts *FetchTradesWsOptionsStruct)

func WithFetchTradesWsSince(since int64) FetchTradesWsOptions {
    return func(opts *FetchTradesWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchTradesWsLimit(limit int64) FetchTradesWsOptions {
    return func(opts *FetchTradesWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchTradesWsParams(params map[string]interface{}) FetchTradesWsOptions {
    return func(opts *FetchTradesWsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchLiquidationsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchLiquidationsOptions func(opts *WatchLiquidationsOptionsStruct)

func WithWatchLiquidationsSince(since int64) WatchLiquidationsOptions {
    return func(opts *WatchLiquidationsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchLiquidationsLimit(limit int64) WatchLiquidationsOptions {
    return func(opts *WatchLiquidationsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchLiquidationsParams(params map[string]interface{}) WatchLiquidationsOptions {
    return func(opts *WatchLiquidationsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchLiquidationsForSymbolsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchLiquidationsForSymbolsOptions func(opts *WatchLiquidationsForSymbolsOptionsStruct)

func WithWatchLiquidationsForSymbolsSince(since int64) WatchLiquidationsForSymbolsOptions {
    return func(opts *WatchLiquidationsForSymbolsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchLiquidationsForSymbolsLimit(limit int64) WatchLiquidationsForSymbolsOptions {
    return func(opts *WatchLiquidationsForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchLiquidationsForSymbolsParams(params map[string]interface{}) WatchLiquidationsForSymbolsOptions {
    return func(opts *WatchLiquidationsForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMyLiquidationsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchMyLiquidationsOptions func(opts *WatchMyLiquidationsOptionsStruct)

func WithWatchMyLiquidationsSince(since int64) WatchMyLiquidationsOptions {
    return func(opts *WatchMyLiquidationsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchMyLiquidationsLimit(limit int64) WatchMyLiquidationsOptions {
    return func(opts *WatchMyLiquidationsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchMyLiquidationsParams(params map[string]interface{}) WatchMyLiquidationsOptions {
    return func(opts *WatchMyLiquidationsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMyLiquidationsForSymbolsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchMyLiquidationsForSymbolsOptions func(opts *WatchMyLiquidationsForSymbolsOptionsStruct)

func WithWatchMyLiquidationsForSymbolsSince(since int64) WatchMyLiquidationsForSymbolsOptions {
    return func(opts *WatchMyLiquidationsForSymbolsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchMyLiquidationsForSymbolsLimit(limit int64) WatchMyLiquidationsForSymbolsOptions {
    return func(opts *WatchMyLiquidationsForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchMyLiquidationsForSymbolsParams(params map[string]interface{}) WatchMyLiquidationsForSymbolsOptions {
    return func(opts *WatchMyLiquidationsForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchTradesOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchTradesOptions func(opts *WatchTradesOptionsStruct)

func WithWatchTradesSince(since int64) WatchTradesOptions {
    return func(opts *WatchTradesOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchTradesLimit(limit int64) WatchTradesOptions {
    return func(opts *WatchTradesOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchTradesParams(params map[string]interface{}) WatchTradesOptions {
    return func(opts *WatchTradesOptionsStruct) {
        opts.Params = &params
    }
}


type WatchTradesForSymbolsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchTradesForSymbolsOptions func(opts *WatchTradesForSymbolsOptionsStruct)

func WithWatchTradesForSymbolsSince(since int64) WatchTradesForSymbolsOptions {
    return func(opts *WatchTradesForSymbolsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchTradesForSymbolsLimit(limit int64) WatchTradesForSymbolsOptions {
    return func(opts *WatchTradesForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchTradesForSymbolsParams(params map[string]interface{}) WatchTradesForSymbolsOptions {
    return func(opts *WatchTradesForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMyTradesForSymbolsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchMyTradesForSymbolsOptions func(opts *WatchMyTradesForSymbolsOptionsStruct)

func WithWatchMyTradesForSymbolsSince(since int64) WatchMyTradesForSymbolsOptions {
    return func(opts *WatchMyTradesForSymbolsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchMyTradesForSymbolsLimit(limit int64) WatchMyTradesForSymbolsOptions {
    return func(opts *WatchMyTradesForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchMyTradesForSymbolsParams(params map[string]interface{}) WatchMyTradesForSymbolsOptions {
    return func(opts *WatchMyTradesForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchOrdersForSymbolsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchOrdersForSymbolsOptions func(opts *WatchOrdersForSymbolsOptionsStruct)

func WithWatchOrdersForSymbolsSince(since int64) WatchOrdersForSymbolsOptions {
    return func(opts *WatchOrdersForSymbolsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchOrdersForSymbolsLimit(limit int64) WatchOrdersForSymbolsOptions {
    return func(opts *WatchOrdersForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchOrdersForSymbolsParams(params map[string]interface{}) WatchOrdersForSymbolsOptions {
    return func(opts *WatchOrdersForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchOHLCVForSymbolsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchOHLCVForSymbolsOptions func(opts *WatchOHLCVForSymbolsOptionsStruct)

func WithWatchOHLCVForSymbolsSince(since int64) WatchOHLCVForSymbolsOptions {
    return func(opts *WatchOHLCVForSymbolsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchOHLCVForSymbolsLimit(limit int64) WatchOHLCVForSymbolsOptions {
    return func(opts *WatchOHLCVForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchOHLCVForSymbolsParams(params map[string]interface{}) WatchOHLCVForSymbolsOptions {
    return func(opts *WatchOHLCVForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchOrderBookForSymbolsOptionsStruct struct {
    Limit *int64
    Params *map[string]interface{}
}

type WatchOrderBookForSymbolsOptions func(opts *WatchOrderBookForSymbolsOptionsStruct)

func WithWatchOrderBookForSymbolsLimit(limit int64) WatchOrderBookForSymbolsOptions {
    return func(opts *WatchOrderBookForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchOrderBookForSymbolsParams(params map[string]interface{}) WatchOrderBookForSymbolsOptions {
    return func(opts *WatchOrderBookForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchDepositAddressesOptionsStruct struct {
    Codes *[]string
    Params *map[string]interface{}
}

type FetchDepositAddressesOptions func(opts *FetchDepositAddressesOptionsStruct)

func WithFetchDepositAddressesCodes(codes []string) FetchDepositAddressesOptions {
    return func(opts *FetchDepositAddressesOptionsStruct) {
        opts.Codes = &codes
    }
}


func WithFetchDepositAddressesParams(params map[string]interface{}) FetchDepositAddressesOptions {
    return func(opts *FetchDepositAddressesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrderBookOptionsStruct struct {
    Limit *int64
    Params *map[string]interface{}
}

type FetchOrderBookOptions func(opts *FetchOrderBookOptionsStruct)

func WithFetchOrderBookLimit(limit int64) FetchOrderBookOptions {
    return func(opts *FetchOrderBookOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOrderBookParams(params map[string]interface{}) FetchOrderBookOptions {
    return func(opts *FetchOrderBookOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrderBookWsOptionsStruct struct {
    Limit *int64
    Params *map[string]interface{}
}

type FetchOrderBookWsOptions func(opts *FetchOrderBookWsOptionsStruct)

func WithFetchOrderBookWsLimit(limit int64) FetchOrderBookWsOptions {
    return func(opts *FetchOrderBookWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOrderBookWsParams(params map[string]interface{}) FetchOrderBookWsOptions {
    return func(opts *FetchOrderBookWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMarginModeOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchMarginModeOptions func(opts *FetchMarginModeOptionsStruct)

func WithFetchMarginModeParams(params map[string]interface{}) FetchMarginModeOptions {
    return func(opts *FetchMarginModeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMarginModesOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchMarginModesOptions func(opts *FetchMarginModesOptionsStruct)

func WithFetchMarginModesSymbols(symbols []string) FetchMarginModesOptions {
    return func(opts *FetchMarginModesOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchMarginModesParams(params map[string]interface{}) FetchMarginModesOptions {
    return func(opts *FetchMarginModesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchRestOrderBookSafeOptionsStruct struct {
    Limit *interface{}
    Params *map[string]interface{}
}

type FetchRestOrderBookSafeOptions func(opts *FetchRestOrderBookSafeOptionsStruct)

func WithFetchRestOrderBookSafeLimit(limit interface{}) FetchRestOrderBookSafeOptions {
    return func(opts *FetchRestOrderBookSafeOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchRestOrderBookSafeParams(params map[string]interface{}) FetchRestOrderBookSafeOptions {
    return func(opts *FetchRestOrderBookSafeOptionsStruct) {
        opts.Params = &params
    }
}


type WatchOrderBookOptionsStruct struct {
    Limit *int64
    Params *map[string]interface{}
}

type WatchOrderBookOptions func(opts *WatchOrderBookOptionsStruct)

func WithWatchOrderBookLimit(limit int64) WatchOrderBookOptions {
    return func(opts *WatchOrderBookOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchOrderBookParams(params map[string]interface{}) WatchOrderBookOptions {
    return func(opts *WatchOrderBookOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTradingLimitsOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchTradingLimitsOptions func(opts *FetchTradingLimitsOptionsStruct)

func WithFetchTradingLimitsSymbols(symbols []string) FetchTradingLimitsOptions {
    return func(opts *FetchTradingLimitsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchTradingLimitsParams(params map[string]interface{}) FetchTradingLimitsOptions {
    return func(opts *FetchTradingLimitsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLeverageTiersOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchLeverageTiersOptions func(opts *FetchLeverageTiersOptionsStruct)

func WithFetchLeverageTiersSymbols(symbols []string) FetchLeverageTiersOptions {
    return func(opts *FetchLeverageTiersOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchLeverageTiersParams(params map[string]interface{}) FetchLeverageTiersOptions {
    return func(opts *FetchLeverageTiersOptionsStruct) {
        opts.Params = &params
    }
}


type FetchFundingRatesOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchFundingRatesOptions func(opts *FetchFundingRatesOptionsStruct)

func WithFetchFundingRatesSymbols(symbols []string) FetchFundingRatesOptions {
    return func(opts *FetchFundingRatesOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchFundingRatesParams(params map[string]interface{}) FetchFundingRatesOptions {
    return func(opts *FetchFundingRatesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchFundingIntervalsOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchFundingIntervalsOptions func(opts *FetchFundingIntervalsOptionsStruct)

func WithFetchFundingIntervalsSymbols(symbols []string) FetchFundingIntervalsOptions {
    return func(opts *FetchFundingIntervalsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchFundingIntervalsParams(params map[string]interface{}) FetchFundingIntervalsOptions {
    return func(opts *FetchFundingIntervalsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchFundingRateOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchFundingRateOptions func(opts *WatchFundingRateOptionsStruct)

func WithWatchFundingRateParams(params map[string]interface{}) WatchFundingRateOptions {
    return func(opts *WatchFundingRateOptionsStruct) {
        opts.Params = &params
    }
}


type WatchFundingRatesOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchFundingRatesOptions func(opts *WatchFundingRatesOptionsStruct)

func WithWatchFundingRatesParams(params map[string]interface{}) WatchFundingRatesOptions {
    return func(opts *WatchFundingRatesOptionsStruct) {
        opts.Params = &params
    }
}


type WatchFundingRatesForSymbolsOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchFundingRatesForSymbolsOptions func(opts *WatchFundingRatesForSymbolsOptionsStruct)

func WithWatchFundingRatesForSymbolsParams(params map[string]interface{}) WatchFundingRatesForSymbolsOptions {
    return func(opts *WatchFundingRatesForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type TransferOptionsStruct struct {
    Params *map[string]interface{}
}

type TransferOptions func(opts *TransferOptionsStruct)

func WithTransferParams(params map[string]interface{}) TransferOptions {
    return func(opts *TransferOptionsStruct) {
        opts.Params = &params
    }
}


type WithdrawOptionsStruct struct {
    Tag *string
    Params *map[string]interface{}
}

type WithdrawOptions func(opts *WithdrawOptionsStruct)

func WithWithdrawTag(tag string) WithdrawOptions {
    return func(opts *WithdrawOptionsStruct) {
        opts.Tag = &tag
    }
}


func WithWithdrawParams(params map[string]interface{}) WithdrawOptions {
    return func(opts *WithdrawOptionsStruct) {
        opts.Params = &params
    }
}


type CreateDepositAddressOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateDepositAddressOptions func(opts *CreateDepositAddressOptionsStruct)

func WithCreateDepositAddressParams(params map[string]interface{}) CreateDepositAddressOptions {
    return func(opts *CreateDepositAddressOptionsStruct) {
        opts.Params = &params
    }
}


type SetLeverageOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type SetLeverageOptions func(opts *SetLeverageOptionsStruct)

func WithSetLeverageSymbol(symbol string) SetLeverageOptions {
    return func(opts *SetLeverageOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithSetLeverageParams(params map[string]interface{}) SetLeverageOptions {
    return func(opts *SetLeverageOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLeverageOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchLeverageOptions func(opts *FetchLeverageOptionsStruct)

func WithFetchLeverageParams(params map[string]interface{}) FetchLeverageOptions {
    return func(opts *FetchLeverageOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLeveragesOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchLeveragesOptions func(opts *FetchLeveragesOptionsStruct)

func WithFetchLeveragesSymbols(symbols []string) FetchLeveragesOptions {
    return func(opts *FetchLeveragesOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchLeveragesParams(params map[string]interface{}) FetchLeveragesOptions {
    return func(opts *FetchLeveragesOptionsStruct) {
        opts.Params = &params
    }
}


type SetPositionModeOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type SetPositionModeOptions func(opts *SetPositionModeOptionsStruct)

func WithSetPositionModeSymbol(symbol string) SetPositionModeOptions {
    return func(opts *SetPositionModeOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithSetPositionModeParams(params map[string]interface{}) SetPositionModeOptions {
    return func(opts *SetPositionModeOptionsStruct) {
        opts.Params = &params
    }
}


type SetMarginOptionsStruct struct {
    Params *map[string]interface{}
}

type SetMarginOptions func(opts *SetMarginOptionsStruct)

func WithSetMarginParams(params map[string]interface{}) SetMarginOptions {
    return func(opts *SetMarginOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLongShortRatioOptionsStruct struct {
    Timeframe *string
    Params *map[string]interface{}
}

type FetchLongShortRatioOptions func(opts *FetchLongShortRatioOptionsStruct)

func WithFetchLongShortRatioTimeframe(timeframe string) FetchLongShortRatioOptions {
    return func(opts *FetchLongShortRatioOptionsStruct) {
        opts.Timeframe = &timeframe
    }
}


func WithFetchLongShortRatioParams(params map[string]interface{}) FetchLongShortRatioOptions {
    return func(opts *FetchLongShortRatioOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLongShortRatioHistoryOptionsStruct struct {
    Symbol *string
    Timeframe *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchLongShortRatioHistoryOptions func(opts *FetchLongShortRatioHistoryOptionsStruct)

func WithFetchLongShortRatioHistorySymbol(symbol string) FetchLongShortRatioHistoryOptions {
    return func(opts *FetchLongShortRatioHistoryOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchLongShortRatioHistoryTimeframe(timeframe string) FetchLongShortRatioHistoryOptions {
    return func(opts *FetchLongShortRatioHistoryOptionsStruct) {
        opts.Timeframe = &timeframe
    }
}


func WithFetchLongShortRatioHistorySince(since int64) FetchLongShortRatioHistoryOptions {
    return func(opts *FetchLongShortRatioHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchLongShortRatioHistoryLimit(limit int64) FetchLongShortRatioHistoryOptions {
    return func(opts *FetchLongShortRatioHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchLongShortRatioHistoryParams(params map[string]interface{}) FetchLongShortRatioHistoryOptions {
    return func(opts *FetchLongShortRatioHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMarginAdjustmentHistoryOptionsStruct struct {
    Symbol *string
    Type *string
    Since *float64
    Limit *float64
    Params *map[string]interface{}
}

type FetchMarginAdjustmentHistoryOptions func(opts *FetchMarginAdjustmentHistoryOptionsStruct)

func WithFetchMarginAdjustmentHistorySymbol(symbol string) FetchMarginAdjustmentHistoryOptions {
    return func(opts *FetchMarginAdjustmentHistoryOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchMarginAdjustmentHistoryType(typeVar string) FetchMarginAdjustmentHistoryOptions {
    return func(opts *FetchMarginAdjustmentHistoryOptionsStruct) {
        opts.Type = &typeVar
    }
}


func WithFetchMarginAdjustmentHistorySince(since float64) FetchMarginAdjustmentHistoryOptions {
    return func(opts *FetchMarginAdjustmentHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchMarginAdjustmentHistoryLimit(limit float64) FetchMarginAdjustmentHistoryOptions {
    return func(opts *FetchMarginAdjustmentHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchMarginAdjustmentHistoryParams(params map[string]interface{}) FetchMarginAdjustmentHistoryOptions {
    return func(opts *FetchMarginAdjustmentHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type SetMarginModeOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type SetMarginModeOptions func(opts *SetMarginModeOptionsStruct)

func WithSetMarginModeSymbol(symbol string) SetMarginModeOptions {
    return func(opts *SetMarginModeOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithSetMarginModeParams(params map[string]interface{}) SetMarginModeOptions {
    return func(opts *SetMarginModeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchDepositAddressesByNetworkOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchDepositAddressesByNetworkOptions func(opts *FetchDepositAddressesByNetworkOptionsStruct)

func WithFetchDepositAddressesByNetworkParams(params map[string]interface{}) FetchDepositAddressesByNetworkOptions {
    return func(opts *FetchDepositAddressesByNetworkOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOpenInterestHistoryOptionsStruct struct {
    Timeframe *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOpenInterestHistoryOptions func(opts *FetchOpenInterestHistoryOptionsStruct)

func WithFetchOpenInterestHistoryTimeframe(timeframe string) FetchOpenInterestHistoryOptions {
    return func(opts *FetchOpenInterestHistoryOptionsStruct) {
        opts.Timeframe = &timeframe
    }
}


func WithFetchOpenInterestHistorySince(since int64) FetchOpenInterestHistoryOptions {
    return func(opts *FetchOpenInterestHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOpenInterestHistoryLimit(limit int64) FetchOpenInterestHistoryOptions {
    return func(opts *FetchOpenInterestHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOpenInterestHistoryParams(params map[string]interface{}) FetchOpenInterestHistoryOptions {
    return func(opts *FetchOpenInterestHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOpenInterestOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchOpenInterestOptions func(opts *FetchOpenInterestOptionsStruct)

func WithFetchOpenInterestParams(params map[string]interface{}) FetchOpenInterestOptions {
    return func(opts *FetchOpenInterestOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOpenInterestsOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchOpenInterestsOptions func(opts *FetchOpenInterestsOptionsStruct)

func WithFetchOpenInterestsSymbols(symbols []string) FetchOpenInterestsOptions {
    return func(opts *FetchOpenInterestsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchOpenInterestsParams(params map[string]interface{}) FetchOpenInterestsOptions {
    return func(opts *FetchOpenInterestsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchBorrowRateOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchBorrowRateOptions func(opts *FetchBorrowRateOptionsStruct)

func WithFetchBorrowRateParams(params map[string]interface{}) FetchBorrowRateOptions {
    return func(opts *FetchBorrowRateOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOHLCVOptionsStruct struct {
    Timeframe *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOHLCVOptions func(opts *FetchOHLCVOptionsStruct)

func WithFetchOHLCVTimeframe(timeframe string) FetchOHLCVOptions {
    return func(opts *FetchOHLCVOptionsStruct) {
        opts.Timeframe = &timeframe
    }
}


func WithFetchOHLCVSince(since int64) FetchOHLCVOptions {
    return func(opts *FetchOHLCVOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOHLCVLimit(limit int64) FetchOHLCVOptions {
    return func(opts *FetchOHLCVOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOHLCVParams(params map[string]interface{}) FetchOHLCVOptions {
    return func(opts *FetchOHLCVOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOHLCVWsOptionsStruct struct {
    Timeframe *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOHLCVWsOptions func(opts *FetchOHLCVWsOptionsStruct)

func WithFetchOHLCVWsTimeframe(timeframe string) FetchOHLCVWsOptions {
    return func(opts *FetchOHLCVWsOptionsStruct) {
        opts.Timeframe = &timeframe
    }
}


func WithFetchOHLCVWsSince(since int64) FetchOHLCVWsOptions {
    return func(opts *FetchOHLCVWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOHLCVWsLimit(limit int64) FetchOHLCVWsOptions {
    return func(opts *FetchOHLCVWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOHLCVWsParams(params map[string]interface{}) FetchOHLCVWsOptions {
    return func(opts *FetchOHLCVWsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchOHLCVOptionsStruct struct {
    Timeframe *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchOHLCVOptions func(opts *WatchOHLCVOptionsStruct)

func WithWatchOHLCVTimeframe(timeframe string) WatchOHLCVOptions {
    return func(opts *WatchOHLCVOptionsStruct) {
        opts.Timeframe = &timeframe
    }
}


func WithWatchOHLCVSince(since int64) WatchOHLCVOptions {
    return func(opts *WatchOHLCVOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchOHLCVLimit(limit int64) WatchOHLCVOptions {
    return func(opts *WatchOHLCVOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchOHLCVParams(params map[string]interface{}) WatchOHLCVOptions {
    return func(opts *WatchOHLCVOptionsStruct) {
        opts.Params = &params
    }
}


type FetchWebEndpointOptionsStruct struct {
    StartRegex *interface{}
    EndRegex *interface{}
}

type FetchWebEndpointOptions func(opts *FetchWebEndpointOptionsStruct)

func WithFetchWebEndpointStartRegex(startRegex interface{}) FetchWebEndpointOptions {
    return func(opts *FetchWebEndpointOptionsStruct) {
        opts.StartRegex = &startRegex
    }
}


func WithFetchWebEndpointEndRegex(endRegex interface{}) FetchWebEndpointOptions {
    return func(opts *FetchWebEndpointOptionsStruct) {
        opts.EndRegex = &endRegex
    }
}


type FetchL2OrderBookOptionsStruct struct {
    Limit *int64
    Params *map[string]interface{}
}

type FetchL2OrderBookOptions func(opts *FetchL2OrderBookOptionsStruct)

func WithFetchL2OrderBookLimit(limit int64) FetchL2OrderBookOptions {
    return func(opts *FetchL2OrderBookOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchL2OrderBookParams(params map[string]interface{}) FetchL2OrderBookOptions {
    return func(opts *FetchL2OrderBookOptionsStruct) {
        opts.Params = &params
    }
}


type Fetch2OptionsStruct struct {
    Api *interface{}
    Method *string
    Params *map[string]interface{}
    Headers *interface{}
    Body *interface{}
    Config *map[string]interface{}
}

type Fetch2Options func(opts *Fetch2OptionsStruct)

func WithFetch2Api(api interface{}) Fetch2Options {
    return func(opts *Fetch2OptionsStruct) {
        opts.Api = &api
    }
}


func WithFetch2Method(method string) Fetch2Options {
    return func(opts *Fetch2OptionsStruct) {
        opts.Method = &method
    }
}


func WithFetch2Params(params map[string]interface{}) Fetch2Options {
    return func(opts *Fetch2OptionsStruct) {
        opts.Params = &params
    }
}


func WithFetch2Headers(headers interface{}) Fetch2Options {
    return func(opts *Fetch2OptionsStruct) {
        opts.Headers = &headers
    }
}


func WithFetch2Body(body interface{}) Fetch2Options {
    return func(opts *Fetch2OptionsStruct) {
        opts.Body = &body
    }
}


func WithFetch2Config(config map[string]interface{}) Fetch2Options {
    return func(opts *Fetch2OptionsStruct) {
        opts.Config = &config
    }
}


type EditLimitBuyOrderOptionsStruct struct {
    Price *float64
    Params *map[string]interface{}
}

type EditLimitBuyOrderOptions func(opts *EditLimitBuyOrderOptionsStruct)

func WithEditLimitBuyOrderPrice(price float64) EditLimitBuyOrderOptions {
    return func(opts *EditLimitBuyOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithEditLimitBuyOrderParams(params map[string]interface{}) EditLimitBuyOrderOptions {
    return func(opts *EditLimitBuyOrderOptionsStruct) {
        opts.Params = &params
    }
}


type EditLimitSellOrderOptionsStruct struct {
    Price *float64
    Params *map[string]interface{}
}

type EditLimitSellOrderOptions func(opts *EditLimitSellOrderOptionsStruct)

func WithEditLimitSellOrderPrice(price float64) EditLimitSellOrderOptions {
    return func(opts *EditLimitSellOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithEditLimitSellOrderParams(params map[string]interface{}) EditLimitSellOrderOptions {
    return func(opts *EditLimitSellOrderOptionsStruct) {
        opts.Params = &params
    }
}


type EditLimitOrderOptionsStruct struct {
    Price *float64
    Params *map[string]interface{}
}

type EditLimitOrderOptions func(opts *EditLimitOrderOptionsStruct)

func WithEditLimitOrderPrice(price float64) EditLimitOrderOptions {
    return func(opts *EditLimitOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithEditLimitOrderParams(params map[string]interface{}) EditLimitOrderOptions {
    return func(opts *EditLimitOrderOptionsStruct) {
        opts.Params = &params
    }
}


type EditOrderOptionsStruct struct {
    Amount *float64
    Price *float64
    Params *map[string]interface{}
}

type EditOrderOptions func(opts *EditOrderOptionsStruct)

func WithEditOrderAmount(amount float64) EditOrderOptions {
    return func(opts *EditOrderOptionsStruct) {
        opts.Amount = &amount
    }
}


func WithEditOrderPrice(price float64) EditOrderOptions {
    return func(opts *EditOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithEditOrderParams(params map[string]interface{}) EditOrderOptions {
    return func(opts *EditOrderOptionsStruct) {
        opts.Params = &params
    }
}


type EditOrderWsOptionsStruct struct {
    Amount *float64
    Price *float64
    Params *map[string]interface{}
}

type EditOrderWsOptions func(opts *EditOrderWsOptionsStruct)

func WithEditOrderWsAmount(amount float64) EditOrderWsOptions {
    return func(opts *EditOrderWsOptionsStruct) {
        opts.Amount = &amount
    }
}


func WithEditOrderWsPrice(price float64) EditOrderWsOptions {
    return func(opts *EditOrderWsOptionsStruct) {
        opts.Price = &price
    }
}


func WithEditOrderWsParams(params map[string]interface{}) EditOrderWsOptions {
    return func(opts *EditOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchPositionOptions func(opts *FetchPositionOptionsStruct)

func WithFetchPositionParams(params map[string]interface{}) FetchPositionOptions {
    return func(opts *FetchPositionOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionWsOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchPositionWsOptions func(opts *FetchPositionWsOptionsStruct)

func WithFetchPositionWsParams(params map[string]interface{}) FetchPositionWsOptions {
    return func(opts *FetchPositionWsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchPositionOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type WatchPositionOptions func(opts *WatchPositionOptionsStruct)

func WithWatchPositionSymbol(symbol string) WatchPositionOptions {
    return func(opts *WatchPositionOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithWatchPositionParams(params map[string]interface{}) WatchPositionOptions {
    return func(opts *WatchPositionOptionsStruct) {
        opts.Params = &params
    }
}


type WatchPositionsOptionsStruct struct {
    Symbols *[]string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchPositionsOptions func(opts *WatchPositionsOptionsStruct)

func WithWatchPositionsSymbols(symbols []string) WatchPositionsOptions {
    return func(opts *WatchPositionsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchPositionsSince(since int64) WatchPositionsOptions {
    return func(opts *WatchPositionsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchPositionsLimit(limit int64) WatchPositionsOptions {
    return func(opts *WatchPositionsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchPositionsParams(params map[string]interface{}) WatchPositionsOptions {
    return func(opts *WatchPositionsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchPositionForSymbolsOptionsStruct struct {
    Symbols *[]string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchPositionForSymbolsOptions func(opts *WatchPositionForSymbolsOptionsStruct)

func WithWatchPositionForSymbolsSymbols(symbols []string) WatchPositionForSymbolsOptions {
    return func(opts *WatchPositionForSymbolsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchPositionForSymbolsSince(since int64) WatchPositionForSymbolsOptions {
    return func(opts *WatchPositionForSymbolsOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchPositionForSymbolsLimit(limit int64) WatchPositionForSymbolsOptions {
    return func(opts *WatchPositionForSymbolsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchPositionForSymbolsParams(params map[string]interface{}) WatchPositionForSymbolsOptions {
    return func(opts *WatchPositionForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionsForSymbolOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchPositionsForSymbolOptions func(opts *FetchPositionsForSymbolOptionsStruct)

func WithFetchPositionsForSymbolParams(params map[string]interface{}) FetchPositionsForSymbolOptions {
    return func(opts *FetchPositionsForSymbolOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionsForSymbolWsOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchPositionsForSymbolWsOptions func(opts *FetchPositionsForSymbolWsOptionsStruct)

func WithFetchPositionsForSymbolWsParams(params map[string]interface{}) FetchPositionsForSymbolWsOptions {
    return func(opts *FetchPositionsForSymbolWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionsOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchPositionsOptions func(opts *FetchPositionsOptionsStruct)

func WithFetchPositionsSymbols(symbols []string) FetchPositionsOptions {
    return func(opts *FetchPositionsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchPositionsParams(params map[string]interface{}) FetchPositionsOptions {
    return func(opts *FetchPositionsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionsWsOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchPositionsWsOptions func(opts *FetchPositionsWsOptionsStruct)

func WithFetchPositionsWsSymbols(symbols []string) FetchPositionsWsOptions {
    return func(opts *FetchPositionsWsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchPositionsWsParams(params map[string]interface{}) FetchPositionsWsOptions {
    return func(opts *FetchPositionsWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionsRiskOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchPositionsRiskOptions func(opts *FetchPositionsRiskOptionsStruct)

func WithFetchPositionsRiskSymbols(symbols []string) FetchPositionsRiskOptions {
    return func(opts *FetchPositionsRiskOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchPositionsRiskParams(params map[string]interface{}) FetchPositionsRiskOptions {
    return func(opts *FetchPositionsRiskOptionsStruct) {
        opts.Params = &params
    }
}


type FetchBidsAsksOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchBidsAsksOptions func(opts *FetchBidsAsksOptionsStruct)

func WithFetchBidsAsksSymbols(symbols []string) FetchBidsAsksOptions {
    return func(opts *FetchBidsAsksOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchBidsAsksParams(params map[string]interface{}) FetchBidsAsksOptions {
    return func(opts *FetchBidsAsksOptionsStruct) {
        opts.Params = &params
    }
}


type FetchBorrowInterestOptionsStruct struct {
    Code *string
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchBorrowInterestOptions func(opts *FetchBorrowInterestOptionsStruct)

func WithFetchBorrowInterestCode(code string) FetchBorrowInterestOptions {
    return func(opts *FetchBorrowInterestOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchBorrowInterestSymbol(symbol string) FetchBorrowInterestOptions {
    return func(opts *FetchBorrowInterestOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchBorrowInterestSince(since int64) FetchBorrowInterestOptions {
    return func(opts *FetchBorrowInterestOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchBorrowInterestLimit(limit int64) FetchBorrowInterestOptions {
    return func(opts *FetchBorrowInterestOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchBorrowInterestParams(params map[string]interface{}) FetchBorrowInterestOptions {
    return func(opts *FetchBorrowInterestOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLedgerOptionsStruct struct {
    Code *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchLedgerOptions func(opts *FetchLedgerOptionsStruct)

func WithFetchLedgerCode(code string) FetchLedgerOptions {
    return func(opts *FetchLedgerOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchLedgerSince(since int64) FetchLedgerOptions {
    return func(opts *FetchLedgerOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchLedgerLimit(limit int64) FetchLedgerOptions {
    return func(opts *FetchLedgerOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchLedgerParams(params map[string]interface{}) FetchLedgerOptions {
    return func(opts *FetchLedgerOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLedgerEntryOptionsStruct struct {
    Code *string
    Params *map[string]interface{}
}

type FetchLedgerEntryOptions func(opts *FetchLedgerEntryOptionsStruct)

func WithFetchLedgerEntryCode(code string) FetchLedgerEntryOptions {
    return func(opts *FetchLedgerEntryOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchLedgerEntryParams(params map[string]interface{}) FetchLedgerEntryOptions {
    return func(opts *FetchLedgerEntryOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPartialBalanceOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchPartialBalanceOptions func(opts *FetchPartialBalanceOptionsStruct)

func WithFetchPartialBalanceParams(params map[string]interface{}) FetchPartialBalanceOptions {
    return func(opts *FetchPartialBalanceOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTransactionFeeOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchTransactionFeeOptions func(opts *FetchTransactionFeeOptionsStruct)

func WithFetchTransactionFeeParams(params map[string]interface{}) FetchTransactionFeeOptions {
    return func(opts *FetchTransactionFeeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTransactionFeesOptionsStruct struct {
    Codes *[]string
    Params *map[string]interface{}
}

type FetchTransactionFeesOptions func(opts *FetchTransactionFeesOptionsStruct)

func WithFetchTransactionFeesCodes(codes []string) FetchTransactionFeesOptions {
    return func(opts *FetchTransactionFeesOptionsStruct) {
        opts.Codes = &codes
    }
}


func WithFetchTransactionFeesParams(params map[string]interface{}) FetchTransactionFeesOptions {
    return func(opts *FetchTransactionFeesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchDepositWithdrawFeesOptionsStruct struct {
    Codes *[]string
    Params *map[string]interface{}
}

type FetchDepositWithdrawFeesOptions func(opts *FetchDepositWithdrawFeesOptionsStruct)

func WithFetchDepositWithdrawFeesCodes(codes []string) FetchDepositWithdrawFeesOptions {
    return func(opts *FetchDepositWithdrawFeesOptionsStruct) {
        opts.Codes = &codes
    }
}


func WithFetchDepositWithdrawFeesParams(params map[string]interface{}) FetchDepositWithdrawFeesOptions {
    return func(opts *FetchDepositWithdrawFeesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchDepositWithdrawFeeOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchDepositWithdrawFeeOptions func(opts *FetchDepositWithdrawFeeOptionsStruct)

func WithFetchDepositWithdrawFeeParams(params map[string]interface{}) FetchDepositWithdrawFeeOptions {
    return func(opts *FetchDepositWithdrawFeeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchCrossBorrowRateOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchCrossBorrowRateOptions func(opts *FetchCrossBorrowRateOptionsStruct)

func WithFetchCrossBorrowRateParams(params map[string]interface{}) FetchCrossBorrowRateOptions {
    return func(opts *FetchCrossBorrowRateOptionsStruct) {
        opts.Params = &params
    }
}


type FetchIsolatedBorrowRateOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchIsolatedBorrowRateOptions func(opts *FetchIsolatedBorrowRateOptionsStruct)

func WithFetchIsolatedBorrowRateParams(params map[string]interface{}) FetchIsolatedBorrowRateOptions {
    return func(opts *FetchIsolatedBorrowRateOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTickerOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchTickerOptions func(opts *FetchTickerOptionsStruct)

func WithFetchTickerParams(params map[string]interface{}) FetchTickerOptions {
    return func(opts *FetchTickerOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMarkPriceOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchMarkPriceOptions func(opts *FetchMarkPriceOptionsStruct)

func WithFetchMarkPriceParams(params map[string]interface{}) FetchMarkPriceOptions {
    return func(opts *FetchMarkPriceOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTickerWsOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchTickerWsOptions func(opts *FetchTickerWsOptionsStruct)

func WithFetchTickerWsParams(params map[string]interface{}) FetchTickerWsOptions {
    return func(opts *FetchTickerWsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchTickerOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchTickerOptions func(opts *WatchTickerOptionsStruct)

func WithWatchTickerParams(params map[string]interface{}) WatchTickerOptions {
    return func(opts *WatchTickerOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTickersOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchTickersOptions func(opts *FetchTickersOptionsStruct)

func WithFetchTickersSymbols(symbols []string) FetchTickersOptions {
    return func(opts *FetchTickersOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchTickersParams(params map[string]interface{}) FetchTickersOptions {
    return func(opts *FetchTickersOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMarkPricesOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchMarkPricesOptions func(opts *FetchMarkPricesOptionsStruct)

func WithFetchMarkPricesSymbols(symbols []string) FetchMarkPricesOptions {
    return func(opts *FetchMarkPricesOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchMarkPricesParams(params map[string]interface{}) FetchMarkPricesOptions {
    return func(opts *FetchMarkPricesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTickersWsOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchTickersWsOptions func(opts *FetchTickersWsOptionsStruct)

func WithFetchTickersWsSymbols(symbols []string) FetchTickersWsOptions {
    return func(opts *FetchTickersWsOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchTickersWsParams(params map[string]interface{}) FetchTickersWsOptions {
    return func(opts *FetchTickersWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrderBooksOptionsStruct struct {
    Symbols *[]string
    Limit *int64
    Params *map[string]interface{}
}

type FetchOrderBooksOptions func(opts *FetchOrderBooksOptionsStruct)

func WithFetchOrderBooksSymbols(symbols []string) FetchOrderBooksOptions {
    return func(opts *FetchOrderBooksOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchOrderBooksLimit(limit int64) FetchOrderBooksOptions {
    return func(opts *FetchOrderBooksOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOrderBooksParams(params map[string]interface{}) FetchOrderBooksOptions {
    return func(opts *FetchOrderBooksOptionsStruct) {
        opts.Params = &params
    }
}


type WatchBidsAsksOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type WatchBidsAsksOptions func(opts *WatchBidsAsksOptionsStruct)

func WithWatchBidsAsksSymbols(symbols []string) WatchBidsAsksOptions {
    return func(opts *WatchBidsAsksOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchBidsAsksParams(params map[string]interface{}) WatchBidsAsksOptions {
    return func(opts *WatchBidsAsksOptionsStruct) {
        opts.Params = &params
    }
}


type WatchTickersOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type WatchTickersOptions func(opts *WatchTickersOptionsStruct)

func WithWatchTickersSymbols(symbols []string) WatchTickersOptions {
    return func(opts *WatchTickersOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchTickersParams(params map[string]interface{}) WatchTickersOptions {
    return func(opts *WatchTickersOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrderOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type FetchOrderOptions func(opts *FetchOrderOptionsStruct)

func WithFetchOrderSymbol(symbol string) FetchOrderOptions {
    return func(opts *FetchOrderOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOrderParams(params map[string]interface{}) FetchOrderOptions {
    return func(opts *FetchOrderOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrderWsOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type FetchOrderWsOptions func(opts *FetchOrderWsOptionsStruct)

func WithFetchOrderWsSymbol(symbol string) FetchOrderWsOptions {
    return func(opts *FetchOrderWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOrderWsParams(params map[string]interface{}) FetchOrderWsOptions {
    return func(opts *FetchOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrderStatusOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type FetchOrderStatusOptions func(opts *FetchOrderStatusOptionsStruct)

func WithFetchOrderStatusSymbol(symbol string) FetchOrderStatusOptions {
    return func(opts *FetchOrderStatusOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOrderStatusParams(params map[string]interface{}) FetchOrderStatusOptions {
    return func(opts *FetchOrderStatusOptionsStruct) {
        opts.Params = &params
    }
}


type FetchUnifiedOrderOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchUnifiedOrderOptions func(opts *FetchUnifiedOrderOptionsStruct)

func WithFetchUnifiedOrderParams(params map[string]interface{}) FetchUnifiedOrderOptions {
    return func(opts *FetchUnifiedOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateOrderOptionsStruct struct {
    Price *float64
    Params *map[string]interface{}
}

type CreateOrderOptions func(opts *CreateOrderOptionsStruct)

func WithCreateOrderPrice(price float64) CreateOrderOptions {
    return func(opts *CreateOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateOrderParams(params map[string]interface{}) CreateOrderOptions {
    return func(opts *CreateOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateConvertTradeOptionsStruct struct {
    Amount *float64
    Params *map[string]interface{}
}

type CreateConvertTradeOptions func(opts *CreateConvertTradeOptionsStruct)

func WithCreateConvertTradeAmount(amount float64) CreateConvertTradeOptions {
    return func(opts *CreateConvertTradeOptionsStruct) {
        opts.Amount = &amount
    }
}


func WithCreateConvertTradeParams(params map[string]interface{}) CreateConvertTradeOptions {
    return func(opts *CreateConvertTradeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchConvertTradeOptionsStruct struct {
    Code *string
    Params *map[string]interface{}
}

type FetchConvertTradeOptions func(opts *FetchConvertTradeOptionsStruct)

func WithFetchConvertTradeCode(code string) FetchConvertTradeOptions {
    return func(opts *FetchConvertTradeOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchConvertTradeParams(params map[string]interface{}) FetchConvertTradeOptions {
    return func(opts *FetchConvertTradeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchConvertTradeHistoryOptionsStruct struct {
    Code *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchConvertTradeHistoryOptions func(opts *FetchConvertTradeHistoryOptionsStruct)

func WithFetchConvertTradeHistoryCode(code string) FetchConvertTradeHistoryOptions {
    return func(opts *FetchConvertTradeHistoryOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchConvertTradeHistorySince(since int64) FetchConvertTradeHistoryOptions {
    return func(opts *FetchConvertTradeHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchConvertTradeHistoryLimit(limit int64) FetchConvertTradeHistoryOptions {
    return func(opts *FetchConvertTradeHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchConvertTradeHistoryParams(params map[string]interface{}) FetchConvertTradeHistoryOptions {
    return func(opts *FetchConvertTradeHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionModeOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type FetchPositionModeOptions func(opts *FetchPositionModeOptionsStruct)

func WithFetchPositionModeSymbol(symbol string) FetchPositionModeOptions {
    return func(opts *FetchPositionModeOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchPositionModeParams(params map[string]interface{}) FetchPositionModeOptions {
    return func(opts *FetchPositionModeOptionsStruct) {
        opts.Params = &params
    }
}


type CreateTrailingAmountOrderOptionsStruct struct {
    Price *float64
    TrailingAmount *float64
    TrailingTriggerPrice *float64
    Params *map[string]interface{}
}

type CreateTrailingAmountOrderOptions func(opts *CreateTrailingAmountOrderOptionsStruct)

func WithCreateTrailingAmountOrderPrice(price float64) CreateTrailingAmountOrderOptions {
    return func(opts *CreateTrailingAmountOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateTrailingAmountOrderTrailingAmount(trailingAmount float64) CreateTrailingAmountOrderOptions {
    return func(opts *CreateTrailingAmountOrderOptionsStruct) {
        opts.TrailingAmount = &trailingAmount
    }
}


func WithCreateTrailingAmountOrderTrailingTriggerPrice(trailingTriggerPrice float64) CreateTrailingAmountOrderOptions {
    return func(opts *CreateTrailingAmountOrderOptionsStruct) {
        opts.TrailingTriggerPrice = &trailingTriggerPrice
    }
}


func WithCreateTrailingAmountOrderParams(params map[string]interface{}) CreateTrailingAmountOrderOptions {
    return func(opts *CreateTrailingAmountOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateTrailingAmountOrderWsOptionsStruct struct {
    Price *float64
    TrailingAmount *float64
    TrailingTriggerPrice *float64
    Params *map[string]interface{}
}

type CreateTrailingAmountOrderWsOptions func(opts *CreateTrailingAmountOrderWsOptionsStruct)

func WithCreateTrailingAmountOrderWsPrice(price float64) CreateTrailingAmountOrderWsOptions {
    return func(opts *CreateTrailingAmountOrderWsOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateTrailingAmountOrderWsTrailingAmount(trailingAmount float64) CreateTrailingAmountOrderWsOptions {
    return func(opts *CreateTrailingAmountOrderWsOptionsStruct) {
        opts.TrailingAmount = &trailingAmount
    }
}


func WithCreateTrailingAmountOrderWsTrailingTriggerPrice(trailingTriggerPrice float64) CreateTrailingAmountOrderWsOptions {
    return func(opts *CreateTrailingAmountOrderWsOptionsStruct) {
        opts.TrailingTriggerPrice = &trailingTriggerPrice
    }
}


func WithCreateTrailingAmountOrderWsParams(params map[string]interface{}) CreateTrailingAmountOrderWsOptions {
    return func(opts *CreateTrailingAmountOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateTrailingPercentOrderOptionsStruct struct {
    Price *float64
    TrailingPercent *float64
    TrailingTriggerPrice *float64
    Params *map[string]interface{}
}

type CreateTrailingPercentOrderOptions func(opts *CreateTrailingPercentOrderOptionsStruct)

func WithCreateTrailingPercentOrderPrice(price float64) CreateTrailingPercentOrderOptions {
    return func(opts *CreateTrailingPercentOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateTrailingPercentOrderTrailingPercent(trailingPercent float64) CreateTrailingPercentOrderOptions {
    return func(opts *CreateTrailingPercentOrderOptionsStruct) {
        opts.TrailingPercent = &trailingPercent
    }
}


func WithCreateTrailingPercentOrderTrailingTriggerPrice(trailingTriggerPrice float64) CreateTrailingPercentOrderOptions {
    return func(opts *CreateTrailingPercentOrderOptionsStruct) {
        opts.TrailingTriggerPrice = &trailingTriggerPrice
    }
}


func WithCreateTrailingPercentOrderParams(params map[string]interface{}) CreateTrailingPercentOrderOptions {
    return func(opts *CreateTrailingPercentOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateTrailingPercentOrderWsOptionsStruct struct {
    Price *float64
    TrailingPercent *float64
    TrailingTriggerPrice *float64
    Params *map[string]interface{}
}

type CreateTrailingPercentOrderWsOptions func(opts *CreateTrailingPercentOrderWsOptionsStruct)

func WithCreateTrailingPercentOrderWsPrice(price float64) CreateTrailingPercentOrderWsOptions {
    return func(opts *CreateTrailingPercentOrderWsOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateTrailingPercentOrderWsTrailingPercent(trailingPercent float64) CreateTrailingPercentOrderWsOptions {
    return func(opts *CreateTrailingPercentOrderWsOptionsStruct) {
        opts.TrailingPercent = &trailingPercent
    }
}


func WithCreateTrailingPercentOrderWsTrailingTriggerPrice(trailingTriggerPrice float64) CreateTrailingPercentOrderWsOptions {
    return func(opts *CreateTrailingPercentOrderWsOptionsStruct) {
        opts.TrailingTriggerPrice = &trailingTriggerPrice
    }
}


func WithCreateTrailingPercentOrderWsParams(params map[string]interface{}) CreateTrailingPercentOrderWsOptions {
    return func(opts *CreateTrailingPercentOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateMarketOrderWithCostOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateMarketOrderWithCostOptions func(opts *CreateMarketOrderWithCostOptionsStruct)

func WithCreateMarketOrderWithCostParams(params map[string]interface{}) CreateMarketOrderWithCostOptions {
    return func(opts *CreateMarketOrderWithCostOptionsStruct) {
        opts.Params = &params
    }
}


type CreateMarketBuyOrderWithCostOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateMarketBuyOrderWithCostOptions func(opts *CreateMarketBuyOrderWithCostOptionsStruct)

func WithCreateMarketBuyOrderWithCostParams(params map[string]interface{}) CreateMarketBuyOrderWithCostOptions {
    return func(opts *CreateMarketBuyOrderWithCostOptionsStruct) {
        opts.Params = &params
    }
}


type CreateMarketSellOrderWithCostOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateMarketSellOrderWithCostOptions func(opts *CreateMarketSellOrderWithCostOptionsStruct)

func WithCreateMarketSellOrderWithCostParams(params map[string]interface{}) CreateMarketSellOrderWithCostOptions {
    return func(opts *CreateMarketSellOrderWithCostOptionsStruct) {
        opts.Params = &params
    }
}


type CreateMarketOrderWithCostWsOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateMarketOrderWithCostWsOptions func(opts *CreateMarketOrderWithCostWsOptionsStruct)

func WithCreateMarketOrderWithCostWsParams(params map[string]interface{}) CreateMarketOrderWithCostWsOptions {
    return func(opts *CreateMarketOrderWithCostWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateTriggerOrderOptionsStruct struct {
    Price *float64
    TriggerPrice *float64
    Params *map[string]interface{}
}

type CreateTriggerOrderOptions func(opts *CreateTriggerOrderOptionsStruct)

func WithCreateTriggerOrderPrice(price float64) CreateTriggerOrderOptions {
    return func(opts *CreateTriggerOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateTriggerOrderTriggerPrice(triggerPrice float64) CreateTriggerOrderOptions {
    return func(opts *CreateTriggerOrderOptionsStruct) {
        opts.TriggerPrice = &triggerPrice
    }
}


func WithCreateTriggerOrderParams(params map[string]interface{}) CreateTriggerOrderOptions {
    return func(opts *CreateTriggerOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateTriggerOrderWsOptionsStruct struct {
    Price *float64
    TriggerPrice *float64
    Params *map[string]interface{}
}

type CreateTriggerOrderWsOptions func(opts *CreateTriggerOrderWsOptionsStruct)

func WithCreateTriggerOrderWsPrice(price float64) CreateTriggerOrderWsOptions {
    return func(opts *CreateTriggerOrderWsOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateTriggerOrderWsTriggerPrice(triggerPrice float64) CreateTriggerOrderWsOptions {
    return func(opts *CreateTriggerOrderWsOptionsStruct) {
        opts.TriggerPrice = &triggerPrice
    }
}


func WithCreateTriggerOrderWsParams(params map[string]interface{}) CreateTriggerOrderWsOptions {
    return func(opts *CreateTriggerOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateStopLossOrderOptionsStruct struct {
    Price *float64
    StopLossPrice *float64
    Params *map[string]interface{}
}

type CreateStopLossOrderOptions func(opts *CreateStopLossOrderOptionsStruct)

func WithCreateStopLossOrderPrice(price float64) CreateStopLossOrderOptions {
    return func(opts *CreateStopLossOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateStopLossOrderStopLossPrice(stopLossPrice float64) CreateStopLossOrderOptions {
    return func(opts *CreateStopLossOrderOptionsStruct) {
        opts.StopLossPrice = &stopLossPrice
    }
}


func WithCreateStopLossOrderParams(params map[string]interface{}) CreateStopLossOrderOptions {
    return func(opts *CreateStopLossOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateStopLossOrderWsOptionsStruct struct {
    Price *float64
    StopLossPrice *float64
    Params *map[string]interface{}
}

type CreateStopLossOrderWsOptions func(opts *CreateStopLossOrderWsOptionsStruct)

func WithCreateStopLossOrderWsPrice(price float64) CreateStopLossOrderWsOptions {
    return func(opts *CreateStopLossOrderWsOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateStopLossOrderWsStopLossPrice(stopLossPrice float64) CreateStopLossOrderWsOptions {
    return func(opts *CreateStopLossOrderWsOptionsStruct) {
        opts.StopLossPrice = &stopLossPrice
    }
}


func WithCreateStopLossOrderWsParams(params map[string]interface{}) CreateStopLossOrderWsOptions {
    return func(opts *CreateStopLossOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateTakeProfitOrderOptionsStruct struct {
    Price *float64
    TakeProfitPrice *float64
    Params *map[string]interface{}
}

type CreateTakeProfitOrderOptions func(opts *CreateTakeProfitOrderOptionsStruct)

func WithCreateTakeProfitOrderPrice(price float64) CreateTakeProfitOrderOptions {
    return func(opts *CreateTakeProfitOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateTakeProfitOrderTakeProfitPrice(takeProfitPrice float64) CreateTakeProfitOrderOptions {
    return func(opts *CreateTakeProfitOrderOptionsStruct) {
        opts.TakeProfitPrice = &takeProfitPrice
    }
}


func WithCreateTakeProfitOrderParams(params map[string]interface{}) CreateTakeProfitOrderOptions {
    return func(opts *CreateTakeProfitOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateTakeProfitOrderWsOptionsStruct struct {
    Price *float64
    TakeProfitPrice *float64
    Params *map[string]interface{}
}

type CreateTakeProfitOrderWsOptions func(opts *CreateTakeProfitOrderWsOptionsStruct)

func WithCreateTakeProfitOrderWsPrice(price float64) CreateTakeProfitOrderWsOptions {
    return func(opts *CreateTakeProfitOrderWsOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateTakeProfitOrderWsTakeProfitPrice(takeProfitPrice float64) CreateTakeProfitOrderWsOptions {
    return func(opts *CreateTakeProfitOrderWsOptionsStruct) {
        opts.TakeProfitPrice = &takeProfitPrice
    }
}


func WithCreateTakeProfitOrderWsParams(params map[string]interface{}) CreateTakeProfitOrderWsOptions {
    return func(opts *CreateTakeProfitOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateOrderWithTakeProfitAndStopLossOptionsStruct struct {
    Price *float64
    TakeProfit *float64
    StopLoss *float64
    Params *map[string]interface{}
}

type CreateOrderWithTakeProfitAndStopLossOptions func(opts *CreateOrderWithTakeProfitAndStopLossOptionsStruct)

func WithCreateOrderWithTakeProfitAndStopLossPrice(price float64) CreateOrderWithTakeProfitAndStopLossOptions {
    return func(opts *CreateOrderWithTakeProfitAndStopLossOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateOrderWithTakeProfitAndStopLossTakeProfit(takeProfit float64) CreateOrderWithTakeProfitAndStopLossOptions {
    return func(opts *CreateOrderWithTakeProfitAndStopLossOptionsStruct) {
        opts.TakeProfit = &takeProfit
    }
}


func WithCreateOrderWithTakeProfitAndStopLossStopLoss(stopLoss float64) CreateOrderWithTakeProfitAndStopLossOptions {
    return func(opts *CreateOrderWithTakeProfitAndStopLossOptionsStruct) {
        opts.StopLoss = &stopLoss
    }
}


func WithCreateOrderWithTakeProfitAndStopLossParams(params map[string]interface{}) CreateOrderWithTakeProfitAndStopLossOptions {
    return func(opts *CreateOrderWithTakeProfitAndStopLossOptionsStruct) {
        opts.Params = &params
    }
}


type CreateOrderWithTakeProfitAndStopLossWsOptionsStruct struct {
    Price *float64
    TakeProfit *float64
    StopLoss *float64
    Params *map[string]interface{}
}

type CreateOrderWithTakeProfitAndStopLossWsOptions func(opts *CreateOrderWithTakeProfitAndStopLossWsOptionsStruct)

func WithCreateOrderWithTakeProfitAndStopLossWsPrice(price float64) CreateOrderWithTakeProfitAndStopLossWsOptions {
    return func(opts *CreateOrderWithTakeProfitAndStopLossWsOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateOrderWithTakeProfitAndStopLossWsTakeProfit(takeProfit float64) CreateOrderWithTakeProfitAndStopLossWsOptions {
    return func(opts *CreateOrderWithTakeProfitAndStopLossWsOptionsStruct) {
        opts.TakeProfit = &takeProfit
    }
}


func WithCreateOrderWithTakeProfitAndStopLossWsStopLoss(stopLoss float64) CreateOrderWithTakeProfitAndStopLossWsOptions {
    return func(opts *CreateOrderWithTakeProfitAndStopLossWsOptionsStruct) {
        opts.StopLoss = &stopLoss
    }
}


func WithCreateOrderWithTakeProfitAndStopLossWsParams(params map[string]interface{}) CreateOrderWithTakeProfitAndStopLossWsOptions {
    return func(opts *CreateOrderWithTakeProfitAndStopLossWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateOrdersOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateOrdersOptions func(opts *CreateOrdersOptionsStruct)

func WithCreateOrdersParams(params map[string]interface{}) CreateOrdersOptions {
    return func(opts *CreateOrdersOptionsStruct) {
        opts.Params = &params
    }
}


type EditOrdersOptionsStruct struct {
    Params *map[string]interface{}
}

type EditOrdersOptions func(opts *EditOrdersOptionsStruct)

func WithEditOrdersParams(params map[string]interface{}) EditOrdersOptions {
    return func(opts *EditOrdersOptionsStruct) {
        opts.Params = &params
    }
}


type CreateOrderWsOptionsStruct struct {
    Price *float64
    Params *map[string]interface{}
}

type CreateOrderWsOptions func(opts *CreateOrderWsOptionsStruct)

func WithCreateOrderWsPrice(price float64) CreateOrderWsOptions {
    return func(opts *CreateOrderWsOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateOrderWsParams(params map[string]interface{}) CreateOrderWsOptions {
    return func(opts *CreateOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CancelOrderOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type CancelOrderOptions func(opts *CancelOrderOptionsStruct)

func WithCancelOrderSymbol(symbol string) CancelOrderOptions {
    return func(opts *CancelOrderOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithCancelOrderParams(params map[string]interface{}) CancelOrderOptions {
    return func(opts *CancelOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CancelOrderWsOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type CancelOrderWsOptions func(opts *CancelOrderWsOptionsStruct)

func WithCancelOrderWsSymbol(symbol string) CancelOrderWsOptions {
    return func(opts *CancelOrderWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithCancelOrderWsParams(params map[string]interface{}) CancelOrderWsOptions {
    return func(opts *CancelOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CancelOrdersWsOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type CancelOrdersWsOptions func(opts *CancelOrdersWsOptionsStruct)

func WithCancelOrdersWsSymbol(symbol string) CancelOrdersWsOptions {
    return func(opts *CancelOrdersWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithCancelOrdersWsParams(params map[string]interface{}) CancelOrdersWsOptions {
    return func(opts *CancelOrdersWsOptionsStruct) {
        opts.Params = &params
    }
}


type CancelAllOrdersOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type CancelAllOrdersOptions func(opts *CancelAllOrdersOptionsStruct)

func WithCancelAllOrdersSymbol(symbol string) CancelAllOrdersOptions {
    return func(opts *CancelAllOrdersOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithCancelAllOrdersParams(params map[string]interface{}) CancelAllOrdersOptions {
    return func(opts *CancelAllOrdersOptionsStruct) {
        opts.Params = &params
    }
}


type CancelAllOrdersAfterOptionsStruct struct {
    Params *map[string]interface{}
}

type CancelAllOrdersAfterOptions func(opts *CancelAllOrdersAfterOptionsStruct)

func WithCancelAllOrdersAfterParams(params map[string]interface{}) CancelAllOrdersAfterOptions {
    return func(opts *CancelAllOrdersAfterOptionsStruct) {
        opts.Params = &params
    }
}


type CancelOrdersForSymbolsOptionsStruct struct {
    Params *map[string]interface{}
}

type CancelOrdersForSymbolsOptions func(opts *CancelOrdersForSymbolsOptionsStruct)

func WithCancelOrdersForSymbolsParams(params map[string]interface{}) CancelOrdersForSymbolsOptions {
    return func(opts *CancelOrdersForSymbolsOptionsStruct) {
        opts.Params = &params
    }
}


type CancelAllOrdersWsOptionsStruct struct {
    Symbol *string
    Params *map[string]interface{}
}

type CancelAllOrdersWsOptions func(opts *CancelAllOrdersWsOptionsStruct)

func WithCancelAllOrdersWsSymbol(symbol string) CancelAllOrdersWsOptions {
    return func(opts *CancelAllOrdersWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithCancelAllOrdersWsParams(params map[string]interface{}) CancelAllOrdersWsOptions {
    return func(opts *CancelAllOrdersWsOptionsStruct) {
        opts.Params = &params
    }
}


type CancelUnifiedOrderOptionsStruct struct {
    Params *map[string]interface{}
}

type CancelUnifiedOrderOptions func(opts *CancelUnifiedOrderOptionsStruct)

func WithCancelUnifiedOrderParams(params map[string]interface{}) CancelUnifiedOrderOptions {
    return func(opts *CancelUnifiedOrderOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrdersOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOrdersOptions func(opts *FetchOrdersOptionsStruct)

func WithFetchOrdersSymbol(symbol string) FetchOrdersOptions {
    return func(opts *FetchOrdersOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOrdersSince(since int64) FetchOrdersOptions {
    return func(opts *FetchOrdersOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOrdersLimit(limit int64) FetchOrdersOptions {
    return func(opts *FetchOrdersOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOrdersParams(params map[string]interface{}) FetchOrdersOptions {
    return func(opts *FetchOrdersOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrdersWsOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOrdersWsOptions func(opts *FetchOrdersWsOptionsStruct)

func WithFetchOrdersWsSymbol(symbol string) FetchOrdersWsOptions {
    return func(opts *FetchOrdersWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOrdersWsSince(since int64) FetchOrdersWsOptions {
    return func(opts *FetchOrdersWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOrdersWsLimit(limit int64) FetchOrdersWsOptions {
    return func(opts *FetchOrdersWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOrdersWsParams(params map[string]interface{}) FetchOrdersWsOptions {
    return func(opts *FetchOrdersWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrderTradesOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOrderTradesOptions func(opts *FetchOrderTradesOptionsStruct)

func WithFetchOrderTradesSymbol(symbol string) FetchOrderTradesOptions {
    return func(opts *FetchOrderTradesOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOrderTradesSince(since int64) FetchOrderTradesOptions {
    return func(opts *FetchOrderTradesOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOrderTradesLimit(limit int64) FetchOrderTradesOptions {
    return func(opts *FetchOrderTradesOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOrderTradesParams(params map[string]interface{}) FetchOrderTradesOptions {
    return func(opts *FetchOrderTradesOptionsStruct) {
        opts.Params = &params
    }
}


type WatchOrdersOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchOrdersOptions func(opts *WatchOrdersOptionsStruct)

func WithWatchOrdersSymbol(symbol string) WatchOrdersOptions {
    return func(opts *WatchOrdersOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithWatchOrdersSince(since int64) WatchOrdersOptions {
    return func(opts *WatchOrdersOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchOrdersLimit(limit int64) WatchOrdersOptions {
    return func(opts *WatchOrdersOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchOrdersParams(params map[string]interface{}) WatchOrdersOptions {
    return func(opts *WatchOrdersOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOpenOrdersOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOpenOrdersOptions func(opts *FetchOpenOrdersOptionsStruct)

func WithFetchOpenOrdersSymbol(symbol string) FetchOpenOrdersOptions {
    return func(opts *FetchOpenOrdersOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOpenOrdersSince(since int64) FetchOpenOrdersOptions {
    return func(opts *FetchOpenOrdersOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOpenOrdersLimit(limit int64) FetchOpenOrdersOptions {
    return func(opts *FetchOpenOrdersOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOpenOrdersParams(params map[string]interface{}) FetchOpenOrdersOptions {
    return func(opts *FetchOpenOrdersOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOpenOrdersWsOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOpenOrdersWsOptions func(opts *FetchOpenOrdersWsOptionsStruct)

func WithFetchOpenOrdersWsSymbol(symbol string) FetchOpenOrdersWsOptions {
    return func(opts *FetchOpenOrdersWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOpenOrdersWsSince(since int64) FetchOpenOrdersWsOptions {
    return func(opts *FetchOpenOrdersWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOpenOrdersWsLimit(limit int64) FetchOpenOrdersWsOptions {
    return func(opts *FetchOpenOrdersWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOpenOrdersWsParams(params map[string]interface{}) FetchOpenOrdersWsOptions {
    return func(opts *FetchOpenOrdersWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchClosedOrdersOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchClosedOrdersOptions func(opts *FetchClosedOrdersOptionsStruct)

func WithFetchClosedOrdersSymbol(symbol string) FetchClosedOrdersOptions {
    return func(opts *FetchClosedOrdersOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchClosedOrdersSince(since int64) FetchClosedOrdersOptions {
    return func(opts *FetchClosedOrdersOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchClosedOrdersLimit(limit int64) FetchClosedOrdersOptions {
    return func(opts *FetchClosedOrdersOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchClosedOrdersParams(params map[string]interface{}) FetchClosedOrdersOptions {
    return func(opts *FetchClosedOrdersOptionsStruct) {
        opts.Params = &params
    }
}


type FetchCanceledAndClosedOrdersOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchCanceledAndClosedOrdersOptions func(opts *FetchCanceledAndClosedOrdersOptionsStruct)

func WithFetchCanceledAndClosedOrdersSymbol(symbol string) FetchCanceledAndClosedOrdersOptions {
    return func(opts *FetchCanceledAndClosedOrdersOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchCanceledAndClosedOrdersSince(since int64) FetchCanceledAndClosedOrdersOptions {
    return func(opts *FetchCanceledAndClosedOrdersOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchCanceledAndClosedOrdersLimit(limit int64) FetchCanceledAndClosedOrdersOptions {
    return func(opts *FetchCanceledAndClosedOrdersOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchCanceledAndClosedOrdersParams(params map[string]interface{}) FetchCanceledAndClosedOrdersOptions {
    return func(opts *FetchCanceledAndClosedOrdersOptionsStruct) {
        opts.Params = &params
    }
}


type FetchClosedOrdersWsOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchClosedOrdersWsOptions func(opts *FetchClosedOrdersWsOptionsStruct)

func WithFetchClosedOrdersWsSymbol(symbol string) FetchClosedOrdersWsOptions {
    return func(opts *FetchClosedOrdersWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchClosedOrdersWsSince(since int64) FetchClosedOrdersWsOptions {
    return func(opts *FetchClosedOrdersWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchClosedOrdersWsLimit(limit int64) FetchClosedOrdersWsOptions {
    return func(opts *FetchClosedOrdersWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchClosedOrdersWsParams(params map[string]interface{}) FetchClosedOrdersWsOptions {
    return func(opts *FetchClosedOrdersWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMyTradesOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchMyTradesOptions func(opts *FetchMyTradesOptionsStruct)

func WithFetchMyTradesSymbol(symbol string) FetchMyTradesOptions {
    return func(opts *FetchMyTradesOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchMyTradesSince(since int64) FetchMyTradesOptions {
    return func(opts *FetchMyTradesOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchMyTradesLimit(limit int64) FetchMyTradesOptions {
    return func(opts *FetchMyTradesOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchMyTradesParams(params map[string]interface{}) FetchMyTradesOptions {
    return func(opts *FetchMyTradesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMyLiquidationsOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchMyLiquidationsOptions func(opts *FetchMyLiquidationsOptionsStruct)

func WithFetchMyLiquidationsSymbol(symbol string) FetchMyLiquidationsOptions {
    return func(opts *FetchMyLiquidationsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchMyLiquidationsSince(since int64) FetchMyLiquidationsOptions {
    return func(opts *FetchMyLiquidationsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchMyLiquidationsLimit(limit int64) FetchMyLiquidationsOptions {
    return func(opts *FetchMyLiquidationsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchMyLiquidationsParams(params map[string]interface{}) FetchMyLiquidationsOptions {
    return func(opts *FetchMyLiquidationsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLiquidationsOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchLiquidationsOptions func(opts *FetchLiquidationsOptionsStruct)

func WithFetchLiquidationsSince(since int64) FetchLiquidationsOptions {
    return func(opts *FetchLiquidationsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchLiquidationsLimit(limit int64) FetchLiquidationsOptions {
    return func(opts *FetchLiquidationsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchLiquidationsParams(params map[string]interface{}) FetchLiquidationsOptions {
    return func(opts *FetchLiquidationsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMyTradesWsOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchMyTradesWsOptions func(opts *FetchMyTradesWsOptionsStruct)

func WithFetchMyTradesWsSymbol(symbol string) FetchMyTradesWsOptions {
    return func(opts *FetchMyTradesWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchMyTradesWsSince(since int64) FetchMyTradesWsOptions {
    return func(opts *FetchMyTradesWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchMyTradesWsLimit(limit int64) FetchMyTradesWsOptions {
    return func(opts *FetchMyTradesWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchMyTradesWsParams(params map[string]interface{}) FetchMyTradesWsOptions {
    return func(opts *FetchMyTradesWsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMyTradesOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type WatchMyTradesOptions func(opts *WatchMyTradesOptionsStruct)

func WithWatchMyTradesSymbol(symbol string) WatchMyTradesOptions {
    return func(opts *WatchMyTradesOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithWatchMyTradesSince(since int64) WatchMyTradesOptions {
    return func(opts *WatchMyTradesOptionsStruct) {
        opts.Since = &since
    }
}


func WithWatchMyTradesLimit(limit int64) WatchMyTradesOptions {
    return func(opts *WatchMyTradesOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithWatchMyTradesParams(params map[string]interface{}) WatchMyTradesOptions {
    return func(opts *WatchMyTradesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchGreeksOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchGreeksOptions func(opts *FetchGreeksOptionsStruct)

func WithFetchGreeksParams(params map[string]interface{}) FetchGreeksOptions {
    return func(opts *FetchGreeksOptionsStruct) {
        opts.Params = &params
    }
}


type FetchAllGreeksOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchAllGreeksOptions func(opts *FetchAllGreeksOptionsStruct)

func WithFetchAllGreeksSymbols(symbols []string) FetchAllGreeksOptions {
    return func(opts *FetchAllGreeksOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchAllGreeksParams(params map[string]interface{}) FetchAllGreeksOptions {
    return func(opts *FetchAllGreeksOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOptionChainOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchOptionChainOptions func(opts *FetchOptionChainOptionsStruct)

func WithFetchOptionChainParams(params map[string]interface{}) FetchOptionChainOptions {
    return func(opts *FetchOptionChainOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOptionOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchOptionOptions func(opts *FetchOptionOptionsStruct)

func WithFetchOptionParams(params map[string]interface{}) FetchOptionOptions {
    return func(opts *FetchOptionOptionsStruct) {
        opts.Params = &params
    }
}


type FetchConvertQuoteOptionsStruct struct {
    Amount *float64
    Params *map[string]interface{}
}

type FetchConvertQuoteOptions func(opts *FetchConvertQuoteOptionsStruct)

func WithFetchConvertQuoteAmount(amount float64) FetchConvertQuoteOptions {
    return func(opts *FetchConvertQuoteOptionsStruct) {
        opts.Amount = &amount
    }
}


func WithFetchConvertQuoteParams(params map[string]interface{}) FetchConvertQuoteOptions {
    return func(opts *FetchConvertQuoteOptionsStruct) {
        opts.Params = &params
    }
}


type FetchDepositsWithdrawalsOptionsStruct struct {
    Code *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchDepositsWithdrawalsOptions func(opts *FetchDepositsWithdrawalsOptionsStruct)

func WithFetchDepositsWithdrawalsCode(code string) FetchDepositsWithdrawalsOptions {
    return func(opts *FetchDepositsWithdrawalsOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchDepositsWithdrawalsSince(since int64) FetchDepositsWithdrawalsOptions {
    return func(opts *FetchDepositsWithdrawalsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchDepositsWithdrawalsLimit(limit int64) FetchDepositsWithdrawalsOptions {
    return func(opts *FetchDepositsWithdrawalsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchDepositsWithdrawalsParams(params map[string]interface{}) FetchDepositsWithdrawalsOptions {
    return func(opts *FetchDepositsWithdrawalsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchDepositsOptionsStruct struct {
    Code *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchDepositsOptions func(opts *FetchDepositsOptionsStruct)

func WithFetchDepositsCode(code string) FetchDepositsOptions {
    return func(opts *FetchDepositsOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchDepositsSince(since int64) FetchDepositsOptions {
    return func(opts *FetchDepositsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchDepositsLimit(limit int64) FetchDepositsOptions {
    return func(opts *FetchDepositsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchDepositsParams(params map[string]interface{}) FetchDepositsOptions {
    return func(opts *FetchDepositsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchWithdrawalsOptionsStruct struct {
    Code *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchWithdrawalsOptions func(opts *FetchWithdrawalsOptionsStruct)

func WithFetchWithdrawalsCode(code string) FetchWithdrawalsOptions {
    return func(opts *FetchWithdrawalsOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchWithdrawalsSince(since int64) FetchWithdrawalsOptions {
    return func(opts *FetchWithdrawalsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchWithdrawalsLimit(limit int64) FetchWithdrawalsOptions {
    return func(opts *FetchWithdrawalsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchWithdrawalsParams(params map[string]interface{}) FetchWithdrawalsOptions {
    return func(opts *FetchWithdrawalsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchDepositsWsOptionsStruct struct {
    Code *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchDepositsWsOptions func(opts *FetchDepositsWsOptionsStruct)

func WithFetchDepositsWsCode(code string) FetchDepositsWsOptions {
    return func(opts *FetchDepositsWsOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchDepositsWsSince(since int64) FetchDepositsWsOptions {
    return func(opts *FetchDepositsWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchDepositsWsLimit(limit int64) FetchDepositsWsOptions {
    return func(opts *FetchDepositsWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchDepositsWsParams(params map[string]interface{}) FetchDepositsWsOptions {
    return func(opts *FetchDepositsWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchWithdrawalsWsOptionsStruct struct {
    Code *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchWithdrawalsWsOptions func(opts *FetchWithdrawalsWsOptionsStruct)

func WithFetchWithdrawalsWsCode(code string) FetchWithdrawalsWsOptions {
    return func(opts *FetchWithdrawalsWsOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchWithdrawalsWsSince(since int64) FetchWithdrawalsWsOptions {
    return func(opts *FetchWithdrawalsWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchWithdrawalsWsLimit(limit int64) FetchWithdrawalsWsOptions {
    return func(opts *FetchWithdrawalsWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchWithdrawalsWsParams(params map[string]interface{}) FetchWithdrawalsWsOptions {
    return func(opts *FetchWithdrawalsWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchFundingRateHistoryOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchFundingRateHistoryOptions func(opts *FetchFundingRateHistoryOptionsStruct)

func WithFetchFundingRateHistorySymbol(symbol string) FetchFundingRateHistoryOptions {
    return func(opts *FetchFundingRateHistoryOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchFundingRateHistorySince(since int64) FetchFundingRateHistoryOptions {
    return func(opts *FetchFundingRateHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchFundingRateHistoryLimit(limit int64) FetchFundingRateHistoryOptions {
    return func(opts *FetchFundingRateHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchFundingRateHistoryParams(params map[string]interface{}) FetchFundingRateHistoryOptions {
    return func(opts *FetchFundingRateHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type FetchFundingHistoryOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchFundingHistoryOptions func(opts *FetchFundingHistoryOptionsStruct)

func WithFetchFundingHistorySymbol(symbol string) FetchFundingHistoryOptions {
    return func(opts *FetchFundingHistoryOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchFundingHistorySince(since int64) FetchFundingHistoryOptions {
    return func(opts *FetchFundingHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchFundingHistoryLimit(limit int64) FetchFundingHistoryOptions {
    return func(opts *FetchFundingHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchFundingHistoryParams(params map[string]interface{}) FetchFundingHistoryOptions {
    return func(opts *FetchFundingHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type FetchL3OrderBookOptionsStruct struct {
    Limit *int64
    Params *map[string]interface{}
}

type FetchL3OrderBookOptions func(opts *FetchL3OrderBookOptionsStruct)

func WithFetchL3OrderBookLimit(limit int64) FetchL3OrderBookOptions {
    return func(opts *FetchL3OrderBookOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchL3OrderBookParams(params map[string]interface{}) FetchL3OrderBookOptions {
    return func(opts *FetchL3OrderBookOptionsStruct) {
        opts.Params = &params
    }
}


type FetchDepositAddressOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchDepositAddressOptions func(opts *FetchDepositAddressOptionsStruct)

func WithFetchDepositAddressParams(params map[string]interface{}) FetchDepositAddressOptions {
    return func(opts *FetchDepositAddressOptionsStruct) {
        opts.Params = &params
    }
}


type CreateLimitOrderOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateLimitOrderOptions func(opts *CreateLimitOrderOptionsStruct)

func WithCreateLimitOrderParams(params map[string]interface{}) CreateLimitOrderOptions {
    return func(opts *CreateLimitOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateLimitOrderWsOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateLimitOrderWsOptions func(opts *CreateLimitOrderWsOptionsStruct)

func WithCreateLimitOrderWsParams(params map[string]interface{}) CreateLimitOrderWsOptions {
    return func(opts *CreateLimitOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateMarketOrderOptionsStruct struct {
    Price *float64
    Params *map[string]interface{}
}

type CreateMarketOrderOptions func(opts *CreateMarketOrderOptionsStruct)

func WithCreateMarketOrderPrice(price float64) CreateMarketOrderOptions {
    return func(opts *CreateMarketOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateMarketOrderParams(params map[string]interface{}) CreateMarketOrderOptions {
    return func(opts *CreateMarketOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateMarketOrderWsOptionsStruct struct {
    Price *float64
    Params *map[string]interface{}
}

type CreateMarketOrderWsOptions func(opts *CreateMarketOrderWsOptionsStruct)

func WithCreateMarketOrderWsPrice(price float64) CreateMarketOrderWsOptions {
    return func(opts *CreateMarketOrderWsOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateMarketOrderWsParams(params map[string]interface{}) CreateMarketOrderWsOptions {
    return func(opts *CreateMarketOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateLimitBuyOrderOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateLimitBuyOrderOptions func(opts *CreateLimitBuyOrderOptionsStruct)

func WithCreateLimitBuyOrderParams(params map[string]interface{}) CreateLimitBuyOrderOptions {
    return func(opts *CreateLimitBuyOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateLimitBuyOrderWsOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateLimitBuyOrderWsOptions func(opts *CreateLimitBuyOrderWsOptionsStruct)

func WithCreateLimitBuyOrderWsParams(params map[string]interface{}) CreateLimitBuyOrderWsOptions {
    return func(opts *CreateLimitBuyOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateLimitSellOrderOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateLimitSellOrderOptions func(opts *CreateLimitSellOrderOptionsStruct)

func WithCreateLimitSellOrderParams(params map[string]interface{}) CreateLimitSellOrderOptions {
    return func(opts *CreateLimitSellOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateLimitSellOrderWsOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateLimitSellOrderWsOptions func(opts *CreateLimitSellOrderWsOptionsStruct)

func WithCreateLimitSellOrderWsParams(params map[string]interface{}) CreateLimitSellOrderWsOptions {
    return func(opts *CreateLimitSellOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateMarketBuyOrderOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateMarketBuyOrderOptions func(opts *CreateMarketBuyOrderOptionsStruct)

func WithCreateMarketBuyOrderParams(params map[string]interface{}) CreateMarketBuyOrderOptions {
    return func(opts *CreateMarketBuyOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateMarketBuyOrderWsOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateMarketBuyOrderWsOptions func(opts *CreateMarketBuyOrderWsOptionsStruct)

func WithCreateMarketBuyOrderWsParams(params map[string]interface{}) CreateMarketBuyOrderWsOptions {
    return func(opts *CreateMarketBuyOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateMarketSellOrderOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateMarketSellOrderOptions func(opts *CreateMarketSellOrderOptionsStruct)

func WithCreateMarketSellOrderParams(params map[string]interface{}) CreateMarketSellOrderOptions {
    return func(opts *CreateMarketSellOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateMarketSellOrderWsOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateMarketSellOrderWsOptions func(opts *CreateMarketSellOrderWsOptionsStruct)

func WithCreateMarketSellOrderWsParams(params map[string]interface{}) CreateMarketSellOrderWsOptions {
    return func(opts *CreateMarketSellOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMarketLeverageTiersOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchMarketLeverageTiersOptions func(opts *FetchMarketLeverageTiersOptionsStruct)

func WithFetchMarketLeverageTiersParams(params map[string]interface{}) FetchMarketLeverageTiersOptions {
    return func(opts *FetchMarketLeverageTiersOptionsStruct) {
        opts.Params = &params
    }
}


type CreatePostOnlyOrderOptionsStruct struct {
    Price *float64
    Params *map[string]interface{}
}

type CreatePostOnlyOrderOptions func(opts *CreatePostOnlyOrderOptionsStruct)

func WithCreatePostOnlyOrderPrice(price float64) CreatePostOnlyOrderOptions {
    return func(opts *CreatePostOnlyOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreatePostOnlyOrderParams(params map[string]interface{}) CreatePostOnlyOrderOptions {
    return func(opts *CreatePostOnlyOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreatePostOnlyOrderWsOptionsStruct struct {
    Price *float64
    Params *map[string]interface{}
}

type CreatePostOnlyOrderWsOptions func(opts *CreatePostOnlyOrderWsOptionsStruct)

func WithCreatePostOnlyOrderWsPrice(price float64) CreatePostOnlyOrderWsOptions {
    return func(opts *CreatePostOnlyOrderWsOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreatePostOnlyOrderWsParams(params map[string]interface{}) CreatePostOnlyOrderWsOptions {
    return func(opts *CreatePostOnlyOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateReduceOnlyOrderOptionsStruct struct {
    Price *float64
    Params *map[string]interface{}
}

type CreateReduceOnlyOrderOptions func(opts *CreateReduceOnlyOrderOptionsStruct)

func WithCreateReduceOnlyOrderPrice(price float64) CreateReduceOnlyOrderOptions {
    return func(opts *CreateReduceOnlyOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateReduceOnlyOrderParams(params map[string]interface{}) CreateReduceOnlyOrderOptions {
    return func(opts *CreateReduceOnlyOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateReduceOnlyOrderWsOptionsStruct struct {
    Price *float64
    Params *map[string]interface{}
}

type CreateReduceOnlyOrderWsOptions func(opts *CreateReduceOnlyOrderWsOptionsStruct)

func WithCreateReduceOnlyOrderWsPrice(price float64) CreateReduceOnlyOrderWsOptions {
    return func(opts *CreateReduceOnlyOrderWsOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateReduceOnlyOrderWsParams(params map[string]interface{}) CreateReduceOnlyOrderWsOptions {
    return func(opts *CreateReduceOnlyOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateStopOrderOptionsStruct struct {
    Price *float64
    TriggerPrice *float64
    Params *map[string]interface{}
}

type CreateStopOrderOptions func(opts *CreateStopOrderOptionsStruct)

func WithCreateStopOrderPrice(price float64) CreateStopOrderOptions {
    return func(opts *CreateStopOrderOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateStopOrderTriggerPrice(triggerPrice float64) CreateStopOrderOptions {
    return func(opts *CreateStopOrderOptionsStruct) {
        opts.TriggerPrice = &triggerPrice
    }
}


func WithCreateStopOrderParams(params map[string]interface{}) CreateStopOrderOptions {
    return func(opts *CreateStopOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateStopOrderWsOptionsStruct struct {
    Price *float64
    TriggerPrice *float64
    Params *map[string]interface{}
}

type CreateStopOrderWsOptions func(opts *CreateStopOrderWsOptionsStruct)

func WithCreateStopOrderWsPrice(price float64) CreateStopOrderWsOptions {
    return func(opts *CreateStopOrderWsOptionsStruct) {
        opts.Price = &price
    }
}


func WithCreateStopOrderWsTriggerPrice(triggerPrice float64) CreateStopOrderWsOptions {
    return func(opts *CreateStopOrderWsOptionsStruct) {
        opts.TriggerPrice = &triggerPrice
    }
}


func WithCreateStopOrderWsParams(params map[string]interface{}) CreateStopOrderWsOptions {
    return func(opts *CreateStopOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateStopLimitOrderOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateStopLimitOrderOptions func(opts *CreateStopLimitOrderOptionsStruct)

func WithCreateStopLimitOrderParams(params map[string]interface{}) CreateStopLimitOrderOptions {
    return func(opts *CreateStopLimitOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateStopLimitOrderWsOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateStopLimitOrderWsOptions func(opts *CreateStopLimitOrderWsOptionsStruct)

func WithCreateStopLimitOrderWsParams(params map[string]interface{}) CreateStopLimitOrderWsOptions {
    return func(opts *CreateStopLimitOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type CreateStopMarketOrderOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateStopMarketOrderOptions func(opts *CreateStopMarketOrderOptionsStruct)

func WithCreateStopMarketOrderParams(params map[string]interface{}) CreateStopMarketOrderOptions {
    return func(opts *CreateStopMarketOrderOptionsStruct) {
        opts.Params = &params
    }
}


type CreateStopMarketOrderWsOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateStopMarketOrderWsOptions func(opts *CreateStopMarketOrderWsOptionsStruct)

func WithCreateStopMarketOrderWsParams(params map[string]interface{}) CreateStopMarketOrderWsOptions {
    return func(opts *CreateStopMarketOrderWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchLastPricesOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type FetchLastPricesOptions func(opts *FetchLastPricesOptionsStruct)

func WithFetchLastPricesSymbols(symbols []string) FetchLastPricesOptions {
    return func(opts *FetchLastPricesOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchLastPricesParams(params map[string]interface{}) FetchLastPricesOptions {
    return func(opts *FetchLastPricesOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTradingFeeOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchTradingFeeOptions func(opts *FetchTradingFeeOptionsStruct)

func WithFetchTradingFeeParams(params map[string]interface{}) FetchTradingFeeOptions {
    return func(opts *FetchTradingFeeOptionsStruct) {
        opts.Params = &params
    }
}


type FetchFundingRateOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchFundingRateOptions func(opts *FetchFundingRateOptionsStruct)

func WithFetchFundingRateParams(params map[string]interface{}) FetchFundingRateOptions {
    return func(opts *FetchFundingRateOptionsStruct) {
        opts.Params = &params
    }
}


type FetchFundingIntervalOptionsStruct struct {
    Params *map[string]interface{}
}

type FetchFundingIntervalOptions func(opts *FetchFundingIntervalOptionsStruct)

func WithFetchFundingIntervalParams(params map[string]interface{}) FetchFundingIntervalOptions {
    return func(opts *FetchFundingIntervalOptionsStruct) {
        opts.Params = &params
    }
}


type FetchMarkOHLCVOptionsStruct struct {
    Timeframe *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchMarkOHLCVOptions func(opts *FetchMarkOHLCVOptionsStruct)

func WithFetchMarkOHLCVTimeframe(timeframe string) FetchMarkOHLCVOptions {
    return func(opts *FetchMarkOHLCVOptionsStruct) {
        opts.Timeframe = &timeframe
    }
}


func WithFetchMarkOHLCVSince(since int64) FetchMarkOHLCVOptions {
    return func(opts *FetchMarkOHLCVOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchMarkOHLCVLimit(limit int64) FetchMarkOHLCVOptions {
    return func(opts *FetchMarkOHLCVOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchMarkOHLCVParams(params map[string]interface{}) FetchMarkOHLCVOptions {
    return func(opts *FetchMarkOHLCVOptionsStruct) {
        opts.Params = &params
    }
}


type FetchIndexOHLCVOptionsStruct struct {
    Timeframe *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchIndexOHLCVOptions func(opts *FetchIndexOHLCVOptionsStruct)

func WithFetchIndexOHLCVTimeframe(timeframe string) FetchIndexOHLCVOptions {
    return func(opts *FetchIndexOHLCVOptionsStruct) {
        opts.Timeframe = &timeframe
    }
}


func WithFetchIndexOHLCVSince(since int64) FetchIndexOHLCVOptions {
    return func(opts *FetchIndexOHLCVOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchIndexOHLCVLimit(limit int64) FetchIndexOHLCVOptions {
    return func(opts *FetchIndexOHLCVOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchIndexOHLCVParams(params map[string]interface{}) FetchIndexOHLCVOptions {
    return func(opts *FetchIndexOHLCVOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPremiumIndexOHLCVOptionsStruct struct {
    Timeframe *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchPremiumIndexOHLCVOptions func(opts *FetchPremiumIndexOHLCVOptionsStruct)

func WithFetchPremiumIndexOHLCVTimeframe(timeframe string) FetchPremiumIndexOHLCVOptions {
    return func(opts *FetchPremiumIndexOHLCVOptionsStruct) {
        opts.Timeframe = &timeframe
    }
}


func WithFetchPremiumIndexOHLCVSince(since int64) FetchPremiumIndexOHLCVOptions {
    return func(opts *FetchPremiumIndexOHLCVOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchPremiumIndexOHLCVLimit(limit int64) FetchPremiumIndexOHLCVOptions {
    return func(opts *FetchPremiumIndexOHLCVOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchPremiumIndexOHLCVParams(params map[string]interface{}) FetchPremiumIndexOHLCVOptions {
    return func(opts *FetchPremiumIndexOHLCVOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTransactionsOptionsStruct struct {
    Code *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchTransactionsOptions func(opts *FetchTransactionsOptionsStruct)

func WithFetchTransactionsCode(code string) FetchTransactionsOptions {
    return func(opts *FetchTransactionsOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchTransactionsSince(since int64) FetchTransactionsOptions {
    return func(opts *FetchTransactionsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchTransactionsLimit(limit int64) FetchTransactionsOptions {
    return func(opts *FetchTransactionsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchTransactionsParams(params map[string]interface{}) FetchTransactionsOptions {
    return func(opts *FetchTransactionsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPaginatedCallDynamicOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
    MaxEntriesPerRequest *int64
    RemoveRepeated *bool
}

type FetchPaginatedCallDynamicOptions func(opts *FetchPaginatedCallDynamicOptionsStruct)

func WithFetchPaginatedCallDynamicSymbol(symbol string) FetchPaginatedCallDynamicOptions {
    return func(opts *FetchPaginatedCallDynamicOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchPaginatedCallDynamicSince(since int64) FetchPaginatedCallDynamicOptions {
    return func(opts *FetchPaginatedCallDynamicOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchPaginatedCallDynamicLimit(limit int64) FetchPaginatedCallDynamicOptions {
    return func(opts *FetchPaginatedCallDynamicOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchPaginatedCallDynamicParams(params map[string]interface{}) FetchPaginatedCallDynamicOptions {
    return func(opts *FetchPaginatedCallDynamicOptionsStruct) {
        opts.Params = &params
    }
}


func WithFetchPaginatedCallDynamicMaxEntriesPerRequest(maxEntriesPerRequest int64) FetchPaginatedCallDynamicOptions {
    return func(opts *FetchPaginatedCallDynamicOptionsStruct) {
        opts.MaxEntriesPerRequest = &maxEntriesPerRequest
    }
}


func WithFetchPaginatedCallDynamicRemoveRepeated(removeRepeated bool) FetchPaginatedCallDynamicOptions {
    return func(opts *FetchPaginatedCallDynamicOptionsStruct) {
        opts.RemoveRepeated = &removeRepeated
    }
}


type FetchPaginatedCallDeterministicOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Timeframe *string
    Params *map[string]interface{}
    MaxEntriesPerRequest *interface{}
}

type FetchPaginatedCallDeterministicOptions func(opts *FetchPaginatedCallDeterministicOptionsStruct)

func WithFetchPaginatedCallDeterministicSymbol(symbol string) FetchPaginatedCallDeterministicOptions {
    return func(opts *FetchPaginatedCallDeterministicOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchPaginatedCallDeterministicSince(since int64) FetchPaginatedCallDeterministicOptions {
    return func(opts *FetchPaginatedCallDeterministicOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchPaginatedCallDeterministicLimit(limit int64) FetchPaginatedCallDeterministicOptions {
    return func(opts *FetchPaginatedCallDeterministicOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchPaginatedCallDeterministicTimeframe(timeframe string) FetchPaginatedCallDeterministicOptions {
    return func(opts *FetchPaginatedCallDeterministicOptionsStruct) {
        opts.Timeframe = &timeframe
    }
}


func WithFetchPaginatedCallDeterministicParams(params map[string]interface{}) FetchPaginatedCallDeterministicOptions {
    return func(opts *FetchPaginatedCallDeterministicOptionsStruct) {
        opts.Params = &params
    }
}


func WithFetchPaginatedCallDeterministicMaxEntriesPerRequest(maxEntriesPerRequest interface{}) FetchPaginatedCallDeterministicOptions {
    return func(opts *FetchPaginatedCallDeterministicOptionsStruct) {
        opts.MaxEntriesPerRequest = &maxEntriesPerRequest
    }
}


type FetchPaginatedCallCursorOptionsStruct struct {
    Symbol *string
    Since *interface{}
    Limit *interface{}
    Params *map[string]interface{}
    CursorReceived *interface{}
    CursorSent *interface{}
    CursorIncrement *interface{}
    MaxEntriesPerRequest *interface{}
}

type FetchPaginatedCallCursorOptions func(opts *FetchPaginatedCallCursorOptionsStruct)

func WithFetchPaginatedCallCursorSymbol(symbol string) FetchPaginatedCallCursorOptions {
    return func(opts *FetchPaginatedCallCursorOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchPaginatedCallCursorSince(since interface{}) FetchPaginatedCallCursorOptions {
    return func(opts *FetchPaginatedCallCursorOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchPaginatedCallCursorLimit(limit interface{}) FetchPaginatedCallCursorOptions {
    return func(opts *FetchPaginatedCallCursorOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchPaginatedCallCursorParams(params map[string]interface{}) FetchPaginatedCallCursorOptions {
    return func(opts *FetchPaginatedCallCursorOptionsStruct) {
        opts.Params = &params
    }
}


func WithFetchPaginatedCallCursorCursorReceived(cursorReceived interface{}) FetchPaginatedCallCursorOptions {
    return func(opts *FetchPaginatedCallCursorOptionsStruct) {
        opts.CursorReceived = &cursorReceived
    }
}


func WithFetchPaginatedCallCursorCursorSent(cursorSent interface{}) FetchPaginatedCallCursorOptions {
    return func(opts *FetchPaginatedCallCursorOptionsStruct) {
        opts.CursorSent = &cursorSent
    }
}


func WithFetchPaginatedCallCursorCursorIncrement(cursorIncrement interface{}) FetchPaginatedCallCursorOptions {
    return func(opts *FetchPaginatedCallCursorOptionsStruct) {
        opts.CursorIncrement = &cursorIncrement
    }
}


func WithFetchPaginatedCallCursorMaxEntriesPerRequest(maxEntriesPerRequest interface{}) FetchPaginatedCallCursorOptions {
    return func(opts *FetchPaginatedCallCursorOptionsStruct) {
        opts.MaxEntriesPerRequest = &maxEntriesPerRequest
    }
}


type FetchPaginatedCallIncrementalOptionsStruct struct {
    Symbol *string
    Since *interface{}
    Limit *interface{}
    Params *map[string]interface{}
    PageKey *interface{}
    MaxEntriesPerRequest *interface{}
}

type FetchPaginatedCallIncrementalOptions func(opts *FetchPaginatedCallIncrementalOptionsStruct)

func WithFetchPaginatedCallIncrementalSymbol(symbol string) FetchPaginatedCallIncrementalOptions {
    return func(opts *FetchPaginatedCallIncrementalOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchPaginatedCallIncrementalSince(since interface{}) FetchPaginatedCallIncrementalOptions {
    return func(opts *FetchPaginatedCallIncrementalOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchPaginatedCallIncrementalLimit(limit interface{}) FetchPaginatedCallIncrementalOptions {
    return func(opts *FetchPaginatedCallIncrementalOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchPaginatedCallIncrementalParams(params map[string]interface{}) FetchPaginatedCallIncrementalOptions {
    return func(opts *FetchPaginatedCallIncrementalOptionsStruct) {
        opts.Params = &params
    }
}


func WithFetchPaginatedCallIncrementalPageKey(pageKey interface{}) FetchPaginatedCallIncrementalOptions {
    return func(opts *FetchPaginatedCallIncrementalOptionsStruct) {
        opts.PageKey = &pageKey
    }
}


func WithFetchPaginatedCallIncrementalMaxEntriesPerRequest(maxEntriesPerRequest interface{}) FetchPaginatedCallIncrementalOptions {
    return func(opts *FetchPaginatedCallIncrementalOptionsStruct) {
        opts.MaxEntriesPerRequest = &maxEntriesPerRequest
    }
}


type FetchPositionHistoryOptionsStruct struct {
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchPositionHistoryOptions func(opts *FetchPositionHistoryOptionsStruct)

func WithFetchPositionHistorySince(since int64) FetchPositionHistoryOptions {
    return func(opts *FetchPositionHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchPositionHistoryLimit(limit int64) FetchPositionHistoryOptions {
    return func(opts *FetchPositionHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchPositionHistoryParams(params map[string]interface{}) FetchPositionHistoryOptions {
    return func(opts *FetchPositionHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type FetchPositionsHistoryOptionsStruct struct {
    Symbols *[]string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchPositionsHistoryOptions func(opts *FetchPositionsHistoryOptionsStruct)

func WithFetchPositionsHistorySymbols(symbols []string) FetchPositionsHistoryOptions {
    return func(opts *FetchPositionsHistoryOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithFetchPositionsHistorySince(since int64) FetchPositionsHistoryOptions {
    return func(opts *FetchPositionsHistoryOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchPositionsHistoryLimit(limit int64) FetchPositionsHistoryOptions {
    return func(opts *FetchPositionsHistoryOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchPositionsHistoryParams(params map[string]interface{}) FetchPositionsHistoryOptions {
    return func(opts *FetchPositionsHistoryOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTransferOptionsStruct struct {
    Code *string
    Params *map[string]interface{}
}

type FetchTransferOptions func(opts *FetchTransferOptionsStruct)

func WithFetchTransferCode(code string) FetchTransferOptions {
    return func(opts *FetchTransferOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchTransferParams(params map[string]interface{}) FetchTransferOptions {
    return func(opts *FetchTransferOptionsStruct) {
        opts.Params = &params
    }
}


type FetchTransfersOptionsStruct struct {
    Code *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchTransfersOptions func(opts *FetchTransfersOptionsStruct)

func WithFetchTransfersCode(code string) FetchTransfersOptions {
    return func(opts *FetchTransfersOptionsStruct) {
        opts.Code = &code
    }
}


func WithFetchTransfersSince(since int64) FetchTransfersOptions {
    return func(opts *FetchTransfersOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchTransfersLimit(limit int64) FetchTransfersOptions {
    return func(opts *FetchTransfersOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchTransfersParams(params map[string]interface{}) FetchTransfersOptions {
    return func(opts *FetchTransfersOptionsStruct) {
        opts.Params = &params
    }
}


type WatchTopicsOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchTopicsOptions func(opts *WatchTopicsOptionsStruct)

func WithWatchTopicsParams(params map[string]interface{}) WatchTopicsOptions {
    return func(opts *WatchTopicsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMarkPriceOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchMarkPriceOptions func(opts *WatchMarkPriceOptionsStruct)

func WithWatchMarkPriceParams(params map[string]interface{}) WatchMarkPriceOptions {
    return func(opts *WatchMarkPriceOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMarkPricesOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type WatchMarkPricesOptions func(opts *WatchMarkPricesOptionsStruct)

func WithWatchMarkPricesSymbols(symbols []string) WatchMarkPricesOptions {
    return func(opts *WatchMarkPricesOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchMarkPricesParams(params map[string]interface{}) WatchMarkPricesOptions {
    return func(opts *WatchMarkPricesOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMultiTickerHelperOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type WatchMultiTickerHelperOptions func(opts *WatchMultiTickerHelperOptionsStruct)

func WithWatchMultiTickerHelperSymbols(symbols []string) WatchMultiTickerHelperOptions {
    return func(opts *WatchMultiTickerHelperOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchMultiTickerHelperParams(params map[string]interface{}) WatchMultiTickerHelperOptions {
    return func(opts *WatchMultiTickerHelperOptionsStruct) {
        opts.Params = &params
    }
}


type WithdrawWsOptionsStruct struct {
    Tag *interface{}
    Params *map[string]interface{}
}

type WithdrawWsOptions func(opts *WithdrawWsOptionsStruct)

func WithWithdrawWsTag(tag interface{}) WithdrawWsOptions {
    return func(opts *WithdrawWsOptionsStruct) {
        opts.Tag = &tag
    }
}


func WithWithdrawWsParams(params map[string]interface{}) WithdrawWsOptions {
    return func(opts *WithdrawWsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMultipleWrapperOptionsStruct struct {
    SymbolsArray *[]interface{}
    Params *map[string]interface{}
}

type WatchMultipleWrapperOptions func(opts *WatchMultipleWrapperOptionsStruct)

func WithWatchMultipleWrapperSymbolsArray(symbolsArray []interface{}) WatchMultipleWrapperOptions {
    return func(opts *WatchMultipleWrapperOptionsStruct) {
        opts.SymbolsArray = &symbolsArray
    }
}


func WithWatchMultipleWrapperParams(params map[string]interface{}) WatchMultipleWrapperOptions {
    return func(opts *WatchMultipleWrapperOptionsStruct) {
        opts.Params = &params
    }
}


type WatchPrivateMultipleOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchPrivateMultipleOptions func(opts *WatchPrivateMultipleOptionsStruct)

func WithWatchPrivateMultipleParams(params map[string]interface{}) WatchPrivateMultipleOptions {
    return func(opts *WatchPrivateMultipleOptionsStruct) {
        opts.Params = &params
    }
}


type WatchPrivateRequestOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchPrivateRequestOptions func(opts *WatchPrivateRequestOptionsStruct)

func WithWatchPrivateRequestParams(params map[string]interface{}) WatchPrivateRequestOptions {
    return func(opts *WatchPrivateRequestOptionsStruct) {
        opts.Params = &params
    }
}


type WatchPrivateSubscribeOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchPrivateSubscribeOptions func(opts *WatchPrivateSubscribeOptionsStruct)

func WithWatchPrivateSubscribeParams(params map[string]interface{}) WatchPrivateSubscribeOptions {
    return func(opts *WatchPrivateSubscribeOptionsStruct) {
        opts.Params = &params
    }
}


type CreateOrdersWsOptionsStruct struct {
    Params *map[string]interface{}
}

type CreateOrdersWsOptions func(opts *CreateOrdersWsOptionsStruct)

func WithCreateOrdersWsParams(params map[string]interface{}) CreateOrdersWsOptions {
    return func(opts *CreateOrdersWsOptionsStruct) {
        opts.Params = &params
    }
}


type FetchOrdersByStatusWsOptionsStruct struct {
    Symbol *string
    Since *int64
    Limit *int64
    Params *map[string]interface{}
}

type FetchOrdersByStatusWsOptions func(opts *FetchOrdersByStatusWsOptionsStruct)

func WithFetchOrdersByStatusWsSymbol(symbol string) FetchOrdersByStatusWsOptions {
    return func(opts *FetchOrdersByStatusWsOptionsStruct) {
        opts.Symbol = &symbol
    }
}


func WithFetchOrdersByStatusWsSince(since int64) FetchOrdersByStatusWsOptions {
    return func(opts *FetchOrdersByStatusWsOptionsStruct) {
        opts.Since = &since
    }
}


func WithFetchOrdersByStatusWsLimit(limit int64) FetchOrdersByStatusWsOptions {
    return func(opts *FetchOrdersByStatusWsOptionsStruct) {
        opts.Limit = &limit
    }
}


func WithFetchOrdersByStatusWsParams(params map[string]interface{}) FetchOrdersByStatusWsOptions {
    return func(opts *FetchOrdersByStatusWsOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMultiHelperOptionsStruct struct {
    Symbols *[]string
    SubscriptionArgs *interface{}
    Params *map[string]interface{}
}

type WatchMultiHelperOptions func(opts *WatchMultiHelperOptionsStruct)

func WithWatchMultiHelperSymbols(symbols []string) WatchMultiHelperOptions {
    return func(opts *WatchMultiHelperOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchMultiHelperSubscriptionArgs(subscriptionArgs interface{}) WatchMultiHelperOptions {
    return func(opts *WatchMultiHelperOptionsStruct) {
        opts.SubscriptionArgs = &subscriptionArgs
    }
}


func WithWatchMultiHelperParams(params map[string]interface{}) WatchMultiHelperOptions {
    return func(opts *WatchMultiHelperOptionsStruct) {
        opts.Params = &params
    }
}


type WatchMultiRequestOptionsStruct struct {
    Symbols *[]string
    Params *map[string]interface{}
}

type WatchMultiRequestOptions func(opts *WatchMultiRequestOptionsStruct)

func WithWatchMultiRequestSymbols(symbols []string) WatchMultiRequestOptions {
    return func(opts *WatchMultiRequestOptionsStruct) {
        opts.Symbols = &symbols
    }
}


func WithWatchMultiRequestParams(params map[string]interface{}) WatchMultiRequestOptions {
    return func(opts *WatchMultiRequestOptionsStruct) {
        opts.Params = &params
    }
}


type WatchSpotPublicOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchSpotPublicOptions func(opts *WatchSpotPublicOptionsStruct)

func WithWatchSpotPublicParams(params map[string]interface{}) WatchSpotPublicOptions {
    return func(opts *WatchSpotPublicOptionsStruct) {
        opts.Params = &params
    }
}


type WatchSpotPrivateOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchSpotPrivateOptions func(opts *WatchSpotPrivateOptionsStruct)

func WithWatchSpotPrivateParams(params map[string]interface{}) WatchSpotPrivateOptions {
    return func(opts *WatchSpotPrivateOptionsStruct) {
        opts.Params = &params
    }
}


type WatchSwapPublicOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchSwapPublicOptions func(opts *WatchSwapPublicOptionsStruct)

func WithWatchSwapPublicParams(params map[string]interface{}) WatchSwapPublicOptions {
    return func(opts *WatchSwapPublicOptionsStruct) {
        opts.Params = &params
    }
}


type WatchSwapPrivateOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchSwapPrivateOptions func(opts *WatchSwapPrivateOptionsStruct)

func WithWatchSwapPrivateParams(params map[string]interface{}) WatchSwapPrivateOptions {
    return func(opts *WatchSwapPrivateOptionsStruct) {
        opts.Params = &params
    }
}


type WatchManyOptionsStruct struct {
    Params *map[string]interface{}
}

type WatchManyOptions func(opts *WatchManyOptionsStruct)

func WithWatchManyParams(params map[string]interface{}) WatchManyOptions {
    return func(opts *WatchManyOptionsStruct) {
        opts.Params = &params
    }
}

