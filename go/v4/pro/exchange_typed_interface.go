package ccxtpro
import (
   "strings"
   ccxt "github.com/ccxt/ccxt/go/v4"
)

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


type IExchange interface {
    ccxt.IExchange
}


func CreateExchange(exchangeId string, options map[string]interface{}) ccxt.IExchange {
    exchangeId = strings.ToLower(exchangeId)
    switch exchangeId {
    case "alpaca":
        itf := NewAlpaca(options)
        return itf
    case "apex":
        itf := NewApex(options)
        return itf
    case "ascendex":
        itf := NewAscendex(options)
        return itf
    case "backpack":
        itf := NewBackpack(options)
        return itf
    case "bequant":
        itf := NewBequant(options)
        return itf
    case "binance":
        itf := NewBinance(options)
        return itf
    case "binancecoinm":
        itf := NewBinancecoinm(options)
        return itf
    case "binanceus":
        itf := NewBinanceus(options)
        return itf
    case "binanceusdm":
        itf := NewBinanceusdm(options)
        return itf
    case "bingx":
        itf := NewBingx(options)
        return itf
    case "bitfinex":
        itf := NewBitfinex(options)
        return itf
    case "bitget":
        itf := NewBitget(options)
        return itf
    case "bithumb":
        itf := NewBithumb(options)
        return itf
    case "bitmart":
        itf := NewBitmart(options)
        return itf
    case "bitmex":
        itf := NewBitmex(options)
        return itf
    case "bitopro":
        itf := NewBitopro(options)
        return itf
    case "bitrue":
        itf := NewBitrue(options)
        return itf
    case "bitstamp":
        itf := NewBitstamp(options)
        return itf
    case "bittrade":
        itf := NewBittrade(options)
        return itf
    case "bitvavo":
        itf := NewBitvavo(options)
        return itf
    case "blockchaincom":
        itf := NewBlockchaincom(options)
        return itf
    case "blofin":
        itf := NewBlofin(options)
        return itf
    case "bybit":
        itf := NewBybit(options)
        return itf
    case "cex":
        itf := NewCex(options)
        return itf
    case "coinbase":
        itf := NewCoinbase(options)
        return itf
    case "coinbaseadvanced":
        itf := NewCoinbaseadvanced(options)
        return itf
    case "coinbaseexchange":
        itf := NewCoinbaseexchange(options)
        return itf
    case "coinbaseinternational":
        itf := NewCoinbaseinternational(options)
        return itf
    case "coincatch":
        itf := NewCoincatch(options)
        return itf
    case "coincheck":
        itf := NewCoincheck(options)
        return itf
    case "coinex":
        itf := NewCoinex(options)
        return itf
    case "coinone":
        itf := NewCoinone(options)
        return itf
    case "cryptocom":
        itf := NewCryptocom(options)
        return itf
    case "defx":
        itf := NewDefx(options)
        return itf
    case "deribit":
        itf := NewDeribit(options)
        return itf
    case "derive":
        itf := NewDerive(options)
        return itf
    case "exmo":
        itf := NewExmo(options)
        return itf
    case "gate":
        itf := NewGate(options)
        return itf
    case "gateio":
        itf := NewGateio(options)
        return itf
    case "gemini":
        itf := NewGemini(options)
        return itf
    case "hashkey":
        itf := NewHashkey(options)
        return itf
    case "hitbtc":
        itf := NewHitbtc(options)
        return itf
    case "hollaex":
        itf := NewHollaex(options)
        return itf
    case "htx":
        itf := NewHtx(options)
        return itf
    case "huobi":
        itf := NewHuobi(options)
        return itf
    case "hyperliquid":
        itf := NewHyperliquid(options)
        return itf
    case "independentreserve":
        itf := NewIndependentreserve(options)
        return itf
    case "kraken":
        itf := NewKraken(options)
        return itf
    case "krakenfutures":
        itf := NewKrakenfutures(options)
        return itf
    case "kucoin":
        itf := NewKucoin(options)
        return itf
    case "kucoinfutures":
        itf := NewKucoinfutures(options)
        return itf
    case "lbank":
        itf := NewLbank(options)
        return itf
    case "luno":
        itf := NewLuno(options)
        return itf
    case "mexc":
        itf := NewMexc(options)
        return itf
    case "modetrade":
        itf := NewModetrade(options)
        return itf
    case "myokx":
        itf := NewMyokx(options)
        return itf
    case "ndax":
        itf := NewNdax(options)
        return itf
    case "okx":
        itf := NewOkx(options)
        return itf
    case "okxus":
        itf := NewOkxus(options)
        return itf
    case "onetrading":
        itf := NewOnetrading(options)
        return itf
    case "oxfun":
        itf := NewOxfun(options)
        return itf
    case "p2b":
        itf := NewP2b(options)
        return itf
    case "paradex":
        itf := NewParadex(options)
        return itf
    case "phemex":
        itf := NewPhemex(options)
        return itf
    case "poloniex":
        itf := NewPoloniex(options)
        return itf
    case "probit":
        itf := NewProbit(options)
        return itf
    case "toobit":
        itf := NewToobit(options)
        return itf
    case "upbit":
        itf := NewUpbit(options)
        return itf
    case "whitebit":
        itf := NewWhitebit(options)
        return itf
    case "woo":
        itf := NewWoo(options)
        return itf
    case "woofipro":
        itf := NewWoofipro(options)
        return itf
    case "xt":
        itf := NewXt(options)
        return itf
        default:
            return nil
    }
}
