// -------------------------------------------------------------------------------

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

// -------------------------------------------------------------------------------

package ccxt

func (this *coinbaseinternational) V1PublicGetAssets (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PublicGetAssets", args...)
}

func (this *coinbaseinternational) V1PublicGetAssetsAssets (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PublicGetAssetsAssets", args...)
}

func (this *coinbaseinternational) V1PublicGetAssetsAssetNetworks (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PublicGetAssetsAssetNetworks", args...)
}

func (this *coinbaseinternational) V1PublicGetInstruments (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PublicGetInstruments", args...)
}

func (this *coinbaseinternational) V1PublicGetInstrumentsInstrument (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PublicGetInstrumentsInstrument", args...)
}

func (this *coinbaseinternational) V1PublicGetInstrumentsInstrumentQuote (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PublicGetInstrumentsInstrumentQuote", args...)
}

func (this *coinbaseinternational) V1PublicGetInstrumentsInstrumentFunding (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PublicGetInstrumentsInstrumentFunding", args...)
}

func (this *coinbaseinternational) V1PublicGetInstrumentsInstrumentCandles (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PublicGetInstrumentsInstrumentCandles", args...)
}

func (this *coinbaseinternational) V1PrivateGetOrders (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateGetOrders", args...)
}

func (this *coinbaseinternational) V1PrivateGetOrdersId (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateGetOrdersId", args...)
}

func (this *coinbaseinternational) V1PrivateGetPortfolios (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateGetPortfolios", args...)
}

func (this *coinbaseinternational) V1PrivateGetPortfoliosPortfolio (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateGetPortfoliosPortfolio", args...)
}

func (this *coinbaseinternational) V1PrivateGetPortfoliosPortfolioDetail (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateGetPortfoliosPortfolioDetail", args...)
}

func (this *coinbaseinternational) V1PrivateGetPortfoliosPortfolioSummary (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateGetPortfoliosPortfolioSummary", args...)
}

func (this *coinbaseinternational) V1PrivateGetPortfoliosPortfolioBalances (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateGetPortfoliosPortfolioBalances", args...)
}

func (this *coinbaseinternational) V1PrivateGetPortfoliosPortfolioBalancesAsset (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateGetPortfoliosPortfolioBalancesAsset", args...)
}

func (this *coinbaseinternational) V1PrivateGetPortfoliosPortfolioPositions (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateGetPortfoliosPortfolioPositions", args...)
}

func (this *coinbaseinternational) V1PrivateGetPortfoliosPortfolioPositionsInstrument (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateGetPortfoliosPortfolioPositionsInstrument", args...)
}

func (this *coinbaseinternational) V1PrivateGetPortfoliosFills (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateGetPortfoliosFills", args...)
}

func (this *coinbaseinternational) V1PrivateGetPortfoliosPortfolioFills (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateGetPortfoliosPortfolioFills", args...)
}

func (this *coinbaseinternational) V1PrivateGetTransfers (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateGetTransfers", args...)
}

func (this *coinbaseinternational) V1PrivateGetTransfersTransferUuid (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateGetTransfersTransferUuid", args...)
}

func (this *coinbaseinternational) V1PrivatePostOrders (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivatePostOrders", args...)
}

func (this *coinbaseinternational) V1PrivatePostPortfolios (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivatePostPortfolios", args...)
}

func (this *coinbaseinternational) V1PrivatePostPortfoliosMargin (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivatePostPortfoliosMargin", args...)
}

func (this *coinbaseinternational) V1PrivatePostPortfoliosTransfer (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivatePostPortfoliosTransfer", args...)
}

func (this *coinbaseinternational) V1PrivatePostTransfersWithdraw (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivatePostTransfersWithdraw", args...)
}

func (this *coinbaseinternational) V1PrivatePostTransfersAddress (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivatePostTransfersAddress", args...)
}

func (this *coinbaseinternational) V1PrivatePostTransfersCreateCounterpartyId (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivatePostTransfersCreateCounterpartyId", args...)
}

func (this *coinbaseinternational) V1PrivatePostTransfersValidateCounterpartyId (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivatePostTransfersValidateCounterpartyId", args...)
}

func (this *coinbaseinternational) V1PrivatePostTransfersWithdrawCounterparty (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivatePostTransfersWithdrawCounterparty", args...)
}

func (this *coinbaseinternational) V1PrivatePutOrdersId (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivatePutOrdersId", args...)
}

func (this *coinbaseinternational) V1PrivatePutPortfoliosPortfolio (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivatePutPortfoliosPortfolio", args...)
}

func (this *coinbaseinternational) V1PrivateDeleteOrders (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateDeleteOrders", args...)
}

func (this *coinbaseinternational) V1PrivateDeleteOrdersId (args ...interface{}) <-chan interface{} {
   return this.callEndpointAsync("v1PrivateDeleteOrdersId", args...)
}
