package ccxt
// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code



type IExchange interface {
    IBaseExchange
    FetchCurrencies(params ...interface{}) (Currencies, error)
    FetchMarkets(params ...interface{}) ([]MarketInterface, error)
    FetchAccounts(params ...interface{}) ([]Account, error)
    FetchTrades(symbol string, options ...FetchTradesOptions) ([]Trade, error)
    FetchDepositAddresses(options ...FetchDepositAddressesOptions) ([]DepositAddress, error)
    FetchOrderBook(symbol string, options ...FetchOrderBookOptions) (OrderBook, error)
    FetchMarginMode(symbol string, options ...FetchMarginModeOptions) (MarginMode, error)
    FetchMarginModes(options ...FetchMarginModesOptions) (MarginModes, error)
    FetchTime(params ...interface{}) ( int64, error)
    FetchTradingLimits(options ...FetchTradingLimitsOptions) (map[string]interface{}, error)
    FetchCrossBorrowRates(params ...interface{}) (CrossBorrowRates, error)
    FetchIsolatedBorrowRates(params ...interface{}) (IsolatedBorrowRates, error)
    FetchLeverageTiers(options ...FetchLeverageTiersOptions) (LeverageTiers, error)
    FetchFundingRates(options ...FetchFundingRatesOptions) (FundingRates, error)
    FetchFundingIntervals(options ...FetchFundingIntervalsOptions) (FundingRates, error)
    Transfer(code string, amount float64, fromAccount string, toAccount string, options ...TransferOptions) (TransferEntry, error)
    Withdraw(code string, amount float64, address string, options ...WithdrawOptions) (Transaction, error)
    CreateDepositAddress(code string, options ...CreateDepositAddressOptions) (DepositAddress, error)
    SetLeverage(leverage int64, options ...SetLeverageOptions) (map[string]interface{}, error)
    FetchLeverage(symbol string, options ...FetchLeverageOptions) (Leverage, error)
    FetchLeverages(options ...FetchLeveragesOptions) (Leverages, error)
    SetPositionMode(hedged bool, options ...SetPositionModeOptions) (map[string]interface{}, error)
    SetMargin(symbol string, amount float64, options ...SetMarginOptions) (map[string]interface{}, error)
    FetchLongShortRatio(symbol string, options ...FetchLongShortRatioOptions) (LongShortRatio, error)
    FetchLongShortRatioHistory(options ...FetchLongShortRatioHistoryOptions) ([]LongShortRatio, error)
    FetchMarginAdjustmentHistory(options ...FetchMarginAdjustmentHistoryOptions) ([]MarginModification, error)
    SetMarginMode(marginMode string, options ...SetMarginModeOptions) (map[string]interface{}, error)
    FetchDepositAddressesByNetwork(code string, options ...FetchDepositAddressesByNetworkOptions) ([]DepositAddress, error)
    FetchOpenInterestHistory(symbol string, options ...FetchOpenInterestHistoryOptions) ([]OpenInterest, error)
    FetchOpenInterest(symbol string, options ...FetchOpenInterestOptions) (OpenInterest, error)
    FetchOpenInterests(options ...FetchOpenInterestsOptions) (OpenInterests, error)
    FetchPaymentMethods(params ...interface{}) (map[string]interface{}, error)
    FetchBorrowRate(code string, amount float64, options ...FetchBorrowRateOptions) (map[string]interface{}, error)
    FetchOHLCV(symbol string, options ...FetchOHLCVOptions) ([]OHLCV, error)
    EditLimitBuyOrder(id string, symbol string, amount float64, options ...EditLimitBuyOrderOptions) (Order, error)
    EditLimitSellOrder(id string, symbol string, amount float64, options ...EditLimitSellOrderOptions) (Order, error)
    EditLimitOrder(id string, symbol string, side string, amount float64, options ...EditLimitOrderOptions) (Order, error)
    EditOrder(id string, symbol string, typeVar string, side string, options ...EditOrderOptions) (Order, error)
    FetchPosition(symbol string, options ...FetchPositionOptions) (Position, error)
    FetchPositionsForSymbol(symbol string, options ...FetchPositionsForSymbolOptions) ([]Position, error)
    FetchPositions(options ...FetchPositionsOptions) ([]Position, error)
    FetchPositionsRisk(options ...FetchPositionsRiskOptions) ([]Position, error)
    FetchBidsAsks(options ...FetchBidsAsksOptions) (Tickers, error)
    FetchBorrowInterest(options ...FetchBorrowInterestOptions) ([]BorrowInterest, error)
    FetchLedger(options ...FetchLedgerOptions) ([]LedgerEntry, error)
    FetchLedgerEntry(id string, options ...FetchLedgerEntryOptions) (LedgerEntry, error)
    FetchBalance(params ...interface{}) (Balances, error)
    FetchFreeBalance(params ...interface{}) (Balance, error)
    FetchStatus(params ...interface{}) (map[string]interface{}, error)
    FetchTransactionFee(code string, options ...FetchTransactionFeeOptions) (map[string]interface{}, error)
    FetchTransactionFees(options ...FetchTransactionFeesOptions) (map[string]interface{}, error)
    FetchDepositWithdrawFees(options ...FetchDepositWithdrawFeesOptions) (map[string]interface{}, error)
    FetchDepositWithdrawFee(code string, options ...FetchDepositWithdrawFeeOptions) (map[string]interface{}, error)
    FetchCrossBorrowRate(code string, options ...FetchCrossBorrowRateOptions) (CrossBorrowRate, error)
    FetchIsolatedBorrowRate(symbol string, options ...FetchIsolatedBorrowRateOptions) (IsolatedBorrowRate, error)
    FetchTicker(symbol string, options ...FetchTickerOptions) (Ticker, error)
    FetchMarkPrice(symbol string, options ...FetchMarkPriceOptions) (Ticker, error)
    FetchTickers(options ...FetchTickersOptions) (Tickers, error)
    FetchMarkPrices(options ...FetchMarkPricesOptions) (Tickers, error)
    FetchOrderBooks(options ...FetchOrderBooksOptions) (OrderBooks, error)
    FetchOrder(id string, options ...FetchOrderOptions) (Order, error)
    FetchOrderStatus(id string, options ...FetchOrderStatusOptions) (string, error)
    CreateOrder(symbol string, typeVar string, side string, amount float64, options ...CreateOrderOptions) (Order, error)
    CreateConvertTrade(id string, fromCode string, toCode string, options ...CreateConvertTradeOptions) (Conversion, error)
    FetchConvertTrade(id string, options ...FetchConvertTradeOptions) (Conversion, error)
    FetchConvertTradeHistory(options ...FetchConvertTradeHistoryOptions) ([]Conversion, error)
    FetchPositionMode(options ...FetchPositionModeOptions) (map[string]interface{}, error)
    CreateTrailingAmountOrder(symbol string, typeVar string, side string, amount float64, options ...CreateTrailingAmountOrderOptions) (Order, error)
    CreateTrailingPercentOrder(symbol string, typeVar string, side string, amount float64, options ...CreateTrailingPercentOrderOptions) (Order, error)
    CreateMarketOrderWithCost(symbol string, side string, cost float64, options ...CreateMarketOrderWithCostOptions) (Order, error)
    CreateMarketBuyOrderWithCost(symbol string, cost float64, options ...CreateMarketBuyOrderWithCostOptions) (Order, error)
    CreateMarketSellOrderWithCost(symbol string, cost float64, options ...CreateMarketSellOrderWithCostOptions) (Order, error)
    CreateTriggerOrder(symbol string, typeVar string, side string, amount float64, options ...CreateTriggerOrderOptions) (Order, error)
    CreateStopLossOrder(symbol string, typeVar string, side string, amount float64, options ...CreateStopLossOrderOptions) (Order, error)
    CreateTakeProfitOrder(symbol string, typeVar string, side string, amount float64, options ...CreateTakeProfitOrderOptions) (Order, error)
    CreateOrderWithTakeProfitAndStopLoss(symbol string, typeVar string, side string, amount float64, options ...CreateOrderWithTakeProfitAndStopLossOptions) (Order, error)
    CreateOrders(orders []OrderRequest, options ...CreateOrdersOptions) ([]Order, error)
    EditOrders(orders []OrderRequest, options ...EditOrdersOptions) ([]Order, error)
    CancelOrder(id string, options ...CancelOrderOptions) (map[string]interface{}, error)
    CancelAllOrders(options ...CancelAllOrdersOptions) (map[string]interface{}, error)
    CancelAllOrdersAfter(timeout int64, options ...CancelAllOrdersAfterOptions) (map[string]interface{}, error)
    CancelOrdersForSymbols(orders []CancellationRequest, options ...CancelOrdersForSymbolsOptions) (map[string]interface{}, error)
    FetchOrders(options ...FetchOrdersOptions) ([]Order, error)
    FetchOrderTrades(id string, options ...FetchOrderTradesOptions) ([]Trade, error)
    FetchOpenOrders(options ...FetchOpenOrdersOptions) ([]Order, error)
    FetchClosedOrders(options ...FetchClosedOrdersOptions) ([]Order, error)
    FetchCanceledAndClosedOrders(options ...FetchCanceledAndClosedOrdersOptions) ([]Order, error)
    FetchMyTrades(options ...FetchMyTradesOptions) ([]Trade, error)
    FetchMyLiquidations(options ...FetchMyLiquidationsOptions) ([]Liquidation, error)
    FetchLiquidations(symbol string, options ...FetchLiquidationsOptions) ([]Liquidation, error)
    FetchGreeks(symbol string, options ...FetchGreeksOptions) (Greeks, error)
    FetchAllGreeks(options ...FetchAllGreeksOptions) ([]Greeks, error)
    FetchOptionChain(code string, options ...FetchOptionChainOptions) (OptionChain, error)
    FetchOption(symbol string, options ...FetchOptionOptions) (Option, error)
    FetchConvertQuote(fromCode string, toCode string, options ...FetchConvertQuoteOptions) (Conversion, error)
    FetchDepositsWithdrawals(options ...FetchDepositsWithdrawalsOptions) ([]Transaction, error)
    FetchDeposits(options ...FetchDepositsOptions) ([]Transaction, error)
    FetchWithdrawals(options ...FetchWithdrawalsOptions) ([]Transaction, error)
    FetchFundingRateHistory(options ...FetchFundingRateHistoryOptions) ([]FundingRateHistory, error)
    FetchFundingHistory(options ...FetchFundingHistoryOptions) ([]FundingHistory, error)
    FetchDepositAddress(code string, options ...FetchDepositAddressOptions) (DepositAddress, error)
    CreateLimitOrder(symbol string, side string, amount float64, price float64, options ...CreateLimitOrderOptions) (Order, error)
    CreateMarketOrder(symbol string, side string, amount float64, options ...CreateMarketOrderOptions) (Order, error)
    CreateLimitBuyOrder(symbol string, amount float64, price float64, options ...CreateLimitBuyOrderOptions) (Order, error)
    CreateLimitSellOrder(symbol string, amount float64, price float64, options ...CreateLimitSellOrderOptions) (Order, error)
    CreateMarketBuyOrder(symbol string, amount float64, options ...CreateMarketBuyOrderOptions) (Order, error)
    CreateMarketSellOrder(symbol string, amount float64, options ...CreateMarketSellOrderOptions) (Order, error)
    FetchMarketLeverageTiers(symbol string, options ...FetchMarketLeverageTiersOptions) ([]LeverageTier, error)
    CreatePostOnlyOrder(symbol string, typeVar string, side string, amount float64, options ...CreatePostOnlyOrderOptions) (Order, error)
    CreateReduceOnlyOrder(symbol string, typeVar string, side string, amount float64, options ...CreateReduceOnlyOrderOptions) (Order, error)
    CreateStopOrder(symbol string, typeVar string, side string, amount float64, options ...CreateStopOrderOptions) (Order, error)
    CreateStopLimitOrder(symbol string, side string, amount float64, price float64, triggerPrice float64, options ...CreateStopLimitOrderOptions) (Order, error)
    CreateStopMarketOrder(symbol string, side string, amount float64, triggerPrice float64, options ...CreateStopMarketOrderOptions) (Order, error)
    FetchLastPrices(options ...FetchLastPricesOptions) (LastPrices, error)
    FetchTradingFees(params ...interface{}) (TradingFees, error)
    FetchTradingFee(symbol string, options ...FetchTradingFeeOptions) (TradingFeeInterface, error)
    FetchConvertCurrencies(params ...interface{}) (Currencies, error)
    FetchFundingRate(symbol string, options ...FetchFundingRateOptions) (FundingRate, error)
    FetchFundingInterval(symbol string, options ...FetchFundingIntervalOptions) (FundingRate, error)
    FetchMarkOHLCV(symbol interface{}, options ...FetchMarkOHLCVOptions) ([]OHLCV, error)
    FetchIndexOHLCV(symbol string, options ...FetchIndexOHLCVOptions) ([]OHLCV, error)
    FetchPremiumIndexOHLCV(symbol string, options ...FetchPremiumIndexOHLCVOptions) ([]OHLCV, error)
    FetchTransactions(options ...FetchTransactionsOptions) ([]Transaction, error)
    FetchPositionHistory(symbol string, options ...FetchPositionHistoryOptions) ([]Position, error)
    FetchPositionsHistory(options ...FetchPositionsHistoryOptions) ([]Position, error)
    FetchTransfer(id string, options ...FetchTransferOptions) (TransferEntry, error)
    FetchTransfers(options ...FetchTransfersOptions) ([]TransferEntry, error)
}

func CreateExchange(exchangeId string, exchangeArgs map[string]interface{}) (IExchange, bool) {
    switch exchangeId {
    case "Exchange":
        ExchangeItf := &Exchange{}
        ExchangeItf.Init(exchangeArgs)
        return ExchangeItf, true
    case "alpaca":
        alpacaItf := &Alpaca{}
        alpacaItf.Init(exchangeArgs)
        return alpacaItf, true
    case "apex":
        apexItf := &Apex{}
        apexItf.Init(exchangeArgs)
        return apexItf, true
    case "ascendex":
        ascendexItf := &Ascendex{}
        ascendexItf.Init(exchangeArgs)
        return ascendexItf, true
    case "bequant":
        bequantItf := &Bequant{}
        bequantItf.Init(exchangeArgs)
        return bequantItf, true
    case "bigone":
        bigoneItf := &Bigone{}
        bigoneItf.Init(exchangeArgs)
        return bigoneItf, true
    case "binance":
        binanceItf := &Binance{}
        binanceItf.Init(exchangeArgs)
        return binanceItf, true
    case "binancecoinm":
        binancecoinmItf := &Binancecoinm{}
        binancecoinmItf.Init(exchangeArgs)
        return binancecoinmItf, true
    case "binanceus":
        binanceusItf := &Binanceus{}
        binanceusItf.Init(exchangeArgs)
        return binanceusItf, true
    case "binanceusdm":
        binanceusdmItf := &Binanceusdm{}
        binanceusdmItf.Init(exchangeArgs)
        return binanceusdmItf, true
    case "bingx":
        bingxItf := &Bingx{}
        bingxItf.Init(exchangeArgs)
        return bingxItf, true
    case "bit2c":
        bit2cItf := &Bit2c{}
        bit2cItf.Init(exchangeArgs)
        return bit2cItf, true
    case "bitbank":
        bitbankItf := &Bitbank{}
        bitbankItf.Init(exchangeArgs)
        return bitbankItf, true
    case "bitbns":
        bitbnsItf := &Bitbns{}
        bitbnsItf.Init(exchangeArgs)
        return bitbnsItf, true
    case "bitfinex":
        bitfinexItf := &Bitfinex{}
        bitfinexItf.Init(exchangeArgs)
        return bitfinexItf, true
    case "bitflyer":
        bitflyerItf := &Bitflyer{}
        bitflyerItf.Init(exchangeArgs)
        return bitflyerItf, true
    case "bitget":
        bitgetItf := &Bitget{}
        bitgetItf.Init(exchangeArgs)
        return bitgetItf, true
    case "bithumb":
        bithumbItf := &Bithumb{}
        bithumbItf.Init(exchangeArgs)
        return bithumbItf, true
    case "bitmart":
        bitmartItf := &Bitmart{}
        bitmartItf.Init(exchangeArgs)
        return bitmartItf, true
    case "bitmex":
        bitmexItf := &Bitmex{}
        bitmexItf.Init(exchangeArgs)
        return bitmexItf, true
    case "bitopro":
        bitoproItf := &Bitopro{}
        bitoproItf.Init(exchangeArgs)
        return bitoproItf, true
    case "bitrue":
        bitrueItf := &Bitrue{}
        bitrueItf.Init(exchangeArgs)
        return bitrueItf, true
    case "bitso":
        bitsoItf := &Bitso{}
        bitsoItf.Init(exchangeArgs)
        return bitsoItf, true
    case "bitstamp":
        bitstampItf := &Bitstamp{}
        bitstampItf.Init(exchangeArgs)
        return bitstampItf, true
    case "bitteam":
        bitteamItf := &Bitteam{}
        bitteamItf.Init(exchangeArgs)
        return bitteamItf, true
    case "bittrade":
        bittradeItf := &Bittrade{}
        bittradeItf.Init(exchangeArgs)
        return bittradeItf, true
    case "bitvavo":
        bitvavoItf := &Bitvavo{}
        bitvavoItf.Init(exchangeArgs)
        return bitvavoItf, true
    case "blockchaincom":
        blockchaincomItf := &Blockchaincom{}
        blockchaincomItf.Init(exchangeArgs)
        return blockchaincomItf, true
    case "blofin":
        blofinItf := &Blofin{}
        blofinItf.Init(exchangeArgs)
        return blofinItf, true
    case "btcalpha":
        btcalphaItf := &Btcalpha{}
        btcalphaItf.Init(exchangeArgs)
        return btcalphaItf, true
    case "btcbox":
        btcboxItf := &Btcbox{}
        btcboxItf.Init(exchangeArgs)
        return btcboxItf, true
    case "btcmarkets":
        btcmarketsItf := &Btcmarkets{}
        btcmarketsItf.Init(exchangeArgs)
        return btcmarketsItf, true
    case "btcturk":
        btcturkItf := &Btcturk{}
        btcturkItf.Init(exchangeArgs)
        return btcturkItf, true
    case "bybit":
        bybitItf := &Bybit{}
        bybitItf.Init(exchangeArgs)
        return bybitItf, true
    case "cex":
        cexItf := &Cex{}
        cexItf.Init(exchangeArgs)
        return cexItf, true
    case "coinbase":
        coinbaseItf := &Coinbase{}
        coinbaseItf.Init(exchangeArgs)
        return coinbaseItf, true
    case "coinbaseadvanced":
        coinbaseadvancedItf := &Coinbaseadvanced{}
        coinbaseadvancedItf.Init(exchangeArgs)
        return coinbaseadvancedItf, true
    case "coinbaseexchange":
        coinbaseexchangeItf := &Coinbaseexchange{}
        coinbaseexchangeItf.Init(exchangeArgs)
        return coinbaseexchangeItf, true
    case "coinbaseinternational":
        coinbaseinternationalItf := &Coinbaseinternational{}
        coinbaseinternationalItf.Init(exchangeArgs)
        return coinbaseinternationalItf, true
    case "coincatch":
        coincatchItf := &Coincatch{}
        coincatchItf.Init(exchangeArgs)
        return coincatchItf, true
    case "coincheck":
        coincheckItf := &Coincheck{}
        coincheckItf.Init(exchangeArgs)
        return coincheckItf, true
    case "coinex":
        coinexItf := &Coinex{}
        coinexItf.Init(exchangeArgs)
        return coinexItf, true
    case "coinmate":
        coinmateItf := &Coinmate{}
        coinmateItf.Init(exchangeArgs)
        return coinmateItf, true
    case "coinmetro":
        coinmetroItf := &Coinmetro{}
        coinmetroItf.Init(exchangeArgs)
        return coinmetroItf, true
    case "coinone":
        coinoneItf := &Coinone{}
        coinoneItf.Init(exchangeArgs)
        return coinoneItf, true
    case "coinsph":
        coinsphItf := &Coinsph{}
        coinsphItf.Init(exchangeArgs)
        return coinsphItf, true
    case "coinspot":
        coinspotItf := &Coinspot{}
        coinspotItf.Init(exchangeArgs)
        return coinspotItf, true
    case "cryptocom":
        cryptocomItf := &Cryptocom{}
        cryptocomItf.Init(exchangeArgs)
        return cryptocomItf, true
    case "cryptomus":
        cryptomusItf := &Cryptomus{}
        cryptomusItf.Init(exchangeArgs)
        return cryptomusItf, true
    case "defx":
        defxItf := &Defx{}
        defxItf.Init(exchangeArgs)
        return defxItf, true
    case "delta":
        deltaItf := &Delta{}
        deltaItf.Init(exchangeArgs)
        return deltaItf, true
    case "deribit":
        deribitItf := &Deribit{}
        deribitItf.Init(exchangeArgs)
        return deribitItf, true
    case "derive":
        deriveItf := &Derive{}
        deriveItf.Init(exchangeArgs)
        return deriveItf, true
    case "digifinex":
        digifinexItf := &Digifinex{}
        digifinexItf.Init(exchangeArgs)
        return digifinexItf, true
    case "ellipx":
        ellipxItf := &Ellipx{}
        ellipxItf.Init(exchangeArgs)
        return ellipxItf, true
    case "exmo":
        exmoItf := &Exmo{}
        exmoItf.Init(exchangeArgs)
        return exmoItf, true
    case "fmfwio":
        fmfwioItf := &Fmfwio{}
        fmfwioItf.Init(exchangeArgs)
        return fmfwioItf, true
    case "gate":
        gateItf := &Gate{}
        gateItf.Init(exchangeArgs)
        return gateItf, true
    case "gateio":
        gateioItf := &Gateio{}
        gateioItf.Init(exchangeArgs)
        return gateioItf, true
    case "gemini":
        geminiItf := &Gemini{}
        geminiItf.Init(exchangeArgs)
        return geminiItf, true
    case "hashkey":
        hashkeyItf := &Hashkey{}
        hashkeyItf.Init(exchangeArgs)
        return hashkeyItf, true
    case "hitbtc":
        hitbtcItf := &Hitbtc{}
        hitbtcItf.Init(exchangeArgs)
        return hitbtcItf, true
    case "hollaex":
        hollaexItf := &Hollaex{}
        hollaexItf.Init(exchangeArgs)
        return hollaexItf, true
    case "htx":
        htxItf := &Htx{}
        htxItf.Init(exchangeArgs)
        return htxItf, true
    case "huobi":
        huobiItf := &Huobi{}
        huobiItf.Init(exchangeArgs)
        return huobiItf, true
    case "hyperliquid":
        hyperliquidItf := &Hyperliquid{}
        hyperliquidItf.Init(exchangeArgs)
        return hyperliquidItf, true
    case "independentreserve":
        independentreserveItf := &Independentreserve{}
        independentreserveItf.Init(exchangeArgs)
        return independentreserveItf, true
    case "indodax":
        indodaxItf := &Indodax{}
        indodaxItf.Init(exchangeArgs)
        return indodaxItf, true
    case "kraken":
        krakenItf := &Kraken{}
        krakenItf.Init(exchangeArgs)
        return krakenItf, true
    case "krakenfutures":
        krakenfuturesItf := &Krakenfutures{}
        krakenfuturesItf.Init(exchangeArgs)
        return krakenfuturesItf, true
    case "kucoin":
        kucoinItf := &Kucoin{}
        kucoinItf.Init(exchangeArgs)
        return kucoinItf, true
    case "kucoinfutures":
        kucoinfuturesItf := &Kucoinfutures{}
        kucoinfuturesItf.Init(exchangeArgs)
        return kucoinfuturesItf, true
    case "latoken":
        latokenItf := &Latoken{}
        latokenItf.Init(exchangeArgs)
        return latokenItf, true
    case "lbank":
        lbankItf := &Lbank{}
        lbankItf.Init(exchangeArgs)
        return lbankItf, true
    case "luno":
        lunoItf := &Luno{}
        lunoItf.Init(exchangeArgs)
        return lunoItf, true
    case "mercado":
        mercadoItf := &Mercado{}
        mercadoItf.Init(exchangeArgs)
        return mercadoItf, true
    case "mexc":
        mexcItf := &Mexc{}
        mexcItf.Init(exchangeArgs)
        return mexcItf, true
    case "modetrade":
        modetradeItf := &Modetrade{}
        modetradeItf.Init(exchangeArgs)
        return modetradeItf, true
    case "myokx":
        myokxItf := &Myokx{}
        myokxItf.Init(exchangeArgs)
        return myokxItf, true
    case "ndax":
        ndaxItf := &Ndax{}
        ndaxItf.Init(exchangeArgs)
        return ndaxItf, true
    case "novadax":
        novadaxItf := &Novadax{}
        novadaxItf.Init(exchangeArgs)
        return novadaxItf, true
    case "oceanex":
        oceanexItf := &Oceanex{}
        oceanexItf.Init(exchangeArgs)
        return oceanexItf, true
    case "okcoin":
        okcoinItf := &Okcoin{}
        okcoinItf.Init(exchangeArgs)
        return okcoinItf, true
    case "okx":
        okxItf := &Okx{}
        okxItf.Init(exchangeArgs)
        return okxItf, true
    case "okxus":
        okxusItf := &Okxus{}
        okxusItf.Init(exchangeArgs)
        return okxusItf, true
    case "onetrading":
        onetradingItf := &Onetrading{}
        onetradingItf.Init(exchangeArgs)
        return onetradingItf, true
    case "oxfun":
        oxfunItf := &Oxfun{}
        oxfunItf.Init(exchangeArgs)
        return oxfunItf, true
    case "p2b":
        p2bItf := &P2b{}
        p2bItf.Init(exchangeArgs)
        return p2bItf, true
    case "paradex":
        paradexItf := &Paradex{}
        paradexItf.Init(exchangeArgs)
        return paradexItf, true
    case "paymium":
        paymiumItf := &Paymium{}
        paymiumItf.Init(exchangeArgs)
        return paymiumItf, true
    case "phemex":
        phemexItf := &Phemex{}
        phemexItf.Init(exchangeArgs)
        return phemexItf, true
    case "poloniex":
        poloniexItf := &Poloniex{}
        poloniexItf.Init(exchangeArgs)
        return poloniexItf, true
    case "probit":
        probitItf := &Probit{}
        probitItf.Init(exchangeArgs)
        return probitItf, true
    case "timex":
        timexItf := &Timex{}
        timexItf.Init(exchangeArgs)
        return timexItf, true
    case "tokocrypto":
        tokocryptoItf := &Tokocrypto{}
        tokocryptoItf.Init(exchangeArgs)
        return tokocryptoItf, true
    case "tradeogre":
        tradeogreItf := &Tradeogre{}
        tradeogreItf.Init(exchangeArgs)
        return tradeogreItf, true
    case "upbit":
        upbitItf := &Upbit{}
        upbitItf.Init(exchangeArgs)
        return upbitItf, true
    case "vertex":
        vertexItf := &Vertex{}
        vertexItf.Init(exchangeArgs)
        return vertexItf, true
    case "wavesexchange":
        wavesexchangeItf := &Wavesexchange{}
        wavesexchangeItf.Init(exchangeArgs)
        return wavesexchangeItf, true
    case "whitebit":
        whitebitItf := &Whitebit{}
        whitebitItf.Init(exchangeArgs)
        return whitebitItf, true
    case "woo":
        wooItf := &Woo{}
        wooItf.Init(exchangeArgs)
        return wooItf, true
    case "woofipro":
        woofiproItf := &Woofipro{}
        woofiproItf.Init(exchangeArgs)
        return woofiproItf, true
    case "xt":
        xtItf := &Xt{}
        xtItf.Init(exchangeArgs)
        return xtItf, true
    case "yobit":
        yobitItf := &Yobit{}
        yobitItf.Init(exchangeArgs)
        return yobitItf, true
    case "zaif":
        zaifItf := &Zaif{}
        zaifItf.Init(exchangeArgs)
        return zaifItf, true
    case "zonda":
        zondaItf := &Zonda{}
        zondaItf.Init(exchangeArgs)
        return zondaItf, true
        default:
            return nil, false
    }
    return nil, false
}
