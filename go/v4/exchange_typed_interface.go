package ccxt
import "strings"
// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code



type IExchange interface {
    IBaseExchange
    FetchCurrencies(params ...interface{}) (Currencies, error)
    FetchMarkets(params ...interface{}) ([]MarketInterface, error)
    FetchAccounts(params ...interface{}) ([]Account, error)
    FetchTrades(symbol string, options ...FetchTradesOptions) ([]Trade, error)
    FetchDepositAddresses(options ...FetchDepositAddressesOptions) ([]DepositAddress, error)
    FetchOrderBook(symbol string, options ...FetchOrderBookOptions) (OrderBook, error)
    FetchMarginMode(symbol string, options ...FetchMarginModeOptions) (MarginMode, error)
    FetchMarginModes(options ...FetchMarginModesOptions) (MarginModes, error)
    FetchTime(params ...interface{}) ( int64, error)
    FetchTradingLimits(options ...FetchTradingLimitsOptions) (map[string]interface{}, error)
    FetchCrossBorrowRates(params ...interface{}) (CrossBorrowRates, error)
    FetchIsolatedBorrowRates(params ...interface{}) (IsolatedBorrowRates, error)
    FetchLeverageTiers(options ...FetchLeverageTiersOptions) (LeverageTiers, error)
    FetchFundingRates(options ...FetchFundingRatesOptions) (FundingRates, error)
    FetchFundingIntervals(options ...FetchFundingIntervalsOptions) (FundingRates, error)
    Transfer(code string, amount float64, fromAccount string, toAccount string, options ...TransferOptions) (TransferEntry, error)
    Withdraw(code string, amount float64, address string, options ...WithdrawOptions) (Transaction, error)
    CreateDepositAddress(code string, options ...CreateDepositAddressOptions) (DepositAddress, error)
    FetchLeverage(symbol string, options ...FetchLeverageOptions) (Leverage, error)
    FetchLeverages(options ...FetchLeveragesOptions) (Leverages, error)
    SetPositionMode(hedged bool, options ...SetPositionModeOptions) (map[string]interface{}, error)
    SetMargin(symbol string, amount float64, options ...SetMarginOptions) (MarginModification, error)
    FetchLongShortRatio(symbol string, options ...FetchLongShortRatioOptions) (LongShortRatio, error)
    FetchLongShortRatioHistory(options ...FetchLongShortRatioHistoryOptions) ([]LongShortRatio, error)
    FetchMarginAdjustmentHistory(options ...FetchMarginAdjustmentHistoryOptions) ([]MarginModification, error)
    SetMarginMode(marginMode string, options ...SetMarginModeOptions) (map[string]interface{}, error)
    FetchDepositAddressesByNetwork(code string, options ...FetchDepositAddressesByNetworkOptions) ([]DepositAddress, error)
    FetchOpenInterestHistory(symbol string, options ...FetchOpenInterestHistoryOptions) ([]OpenInterest, error)
    FetchOpenInterest(symbol string, options ...FetchOpenInterestOptions) (OpenInterest, error)
    FetchOpenInterests(options ...FetchOpenInterestsOptions) (OpenInterests, error)
    FetchPaymentMethods(params ...interface{}) (map[string]interface{}, error)
    FetchBorrowRate(code string, amount float64, options ...FetchBorrowRateOptions) (map[string]interface{}, error)
    FetchOHLCV(symbol string, options ...FetchOHLCVOptions) ([]OHLCV, error)
    EditLimitBuyOrder(id string, symbol string, amount float64, options ...EditLimitBuyOrderOptions) (Order, error)
    EditLimitSellOrder(id string, symbol string, amount float64, options ...EditLimitSellOrderOptions) (Order, error)
    EditLimitOrder(id string, symbol string, side string, amount float64, options ...EditLimitOrderOptions) (Order, error)
    EditOrder(id string, symbol string, typeVar string, side string, options ...EditOrderOptions) (Order, error)
    FetchPosition(symbol string, options ...FetchPositionOptions) (Position, error)
    FetchPositionsForSymbol(symbol string, options ...FetchPositionsForSymbolOptions) ([]Position, error)
    FetchPositions(options ...FetchPositionsOptions) ([]Position, error)
    FetchPositionsRisk(options ...FetchPositionsRiskOptions) ([]Position, error)
    FetchBidsAsks(options ...FetchBidsAsksOptions) (Tickers, error)
    FetchBorrowInterest(options ...FetchBorrowInterestOptions) ([]BorrowInterest, error)
    FetchLedger(options ...FetchLedgerOptions) ([]LedgerEntry, error)
    FetchLedgerEntry(id string, options ...FetchLedgerEntryOptions) (LedgerEntry, error)
    FetchBalance(params ...interface{}) (Balances, error)
    FetchFreeBalance(params ...interface{}) (Balance, error)
    FetchStatus(params ...interface{}) (map[string]interface{}, error)
    FetchTransactionFee(code string, options ...FetchTransactionFeeOptions) (map[string]interface{}, error)
    FetchTransactionFees(options ...FetchTransactionFeesOptions) (map[string]interface{}, error)
    FetchDepositWithdrawFees(options ...FetchDepositWithdrawFeesOptions) (map[string]interface{}, error)
    FetchDepositWithdrawFee(code string, options ...FetchDepositWithdrawFeeOptions) (map[string]interface{}, error)
    FetchCrossBorrowRate(code string, options ...FetchCrossBorrowRateOptions) (CrossBorrowRate, error)
    FetchIsolatedBorrowRate(symbol string, options ...FetchIsolatedBorrowRateOptions) (IsolatedBorrowRate, error)
    FetchTicker(symbol string, options ...FetchTickerOptions) (Ticker, error)
    FetchMarkPrice(symbol string, options ...FetchMarkPriceOptions) (Ticker, error)
    FetchTickers(options ...FetchTickersOptions) (Tickers, error)
    FetchMarkPrices(options ...FetchMarkPricesOptions) (Tickers, error)
    FetchOrderBooks(options ...FetchOrderBooksOptions) (OrderBooks, error)
    FetchOrder(id string, options ...FetchOrderOptions) (Order, error)
    FetchOrderStatus(id string, options ...FetchOrderStatusOptions) (string, error)
    CreateOrder(symbol string, typeVar string, side string, amount float64, options ...CreateOrderOptions) (Order, error)
    CreateConvertTrade(id string, fromCode string, toCode string, options ...CreateConvertTradeOptions) (Conversion, error)
    FetchConvertTrade(id string, options ...FetchConvertTradeOptions) (Conversion, error)
    FetchConvertTradeHistory(options ...FetchConvertTradeHistoryOptions) ([]Conversion, error)
    FetchPositionMode(options ...FetchPositionModeOptions) (map[string]interface{}, error)
    CreateTrailingAmountOrder(symbol string, typeVar string, side string, amount float64, options ...CreateTrailingAmountOrderOptions) (Order, error)
    CreateTrailingPercentOrder(symbol string, typeVar string, side string, amount float64, options ...CreateTrailingPercentOrderOptions) (Order, error)
    CreateMarketOrderWithCost(symbol string, side string, cost float64, options ...CreateMarketOrderWithCostOptions) (Order, error)
    CreateMarketBuyOrderWithCost(symbol string, cost float64, options ...CreateMarketBuyOrderWithCostOptions) (Order, error)
    CreateMarketSellOrderWithCost(symbol string, cost float64, options ...CreateMarketSellOrderWithCostOptions) (Order, error)
    CreateTriggerOrder(symbol string, typeVar string, side string, amount float64, options ...CreateTriggerOrderOptions) (Order, error)
    CreateStopLossOrder(symbol string, typeVar string, side string, amount float64, options ...CreateStopLossOrderOptions) (Order, error)
    CreateTakeProfitOrder(symbol string, typeVar string, side string, amount float64, options ...CreateTakeProfitOrderOptions) (Order, error)
    CreateOrderWithTakeProfitAndStopLoss(symbol string, typeVar string, side string, amount float64, options ...CreateOrderWithTakeProfitAndStopLossOptions) (Order, error)
    CreateOrders(orders []OrderRequest, options ...CreateOrdersOptions) ([]Order, error)
    EditOrders(orders []OrderRequest, options ...EditOrdersOptions) ([]Order, error)
    CancelOrder(id string, options ...CancelOrderOptions) (Order, error)
    CancelAllOrders(options ...CancelAllOrdersOptions) ([]Order, error)
    CancelAllOrdersAfter(timeout int64, options ...CancelAllOrdersAfterOptions) (map[string]interface{}, error)
    CancelOrdersForSymbols(orders []CancellationRequest, options ...CancelOrdersForSymbolsOptions) ([]Order, error)
    FetchOrders(options ...FetchOrdersOptions) ([]Order, error)
    FetchOrderTrades(id string, options ...FetchOrderTradesOptions) ([]Trade, error)
    FetchOpenOrders(options ...FetchOpenOrdersOptions) ([]Order, error)
    FetchClosedOrders(options ...FetchClosedOrdersOptions) ([]Order, error)
    FetchCanceledAndClosedOrders(options ...FetchCanceledAndClosedOrdersOptions) ([]Order, error)
    FetchMyTrades(options ...FetchMyTradesOptions) ([]Trade, error)
    FetchMyLiquidations(options ...FetchMyLiquidationsOptions) ([]Liquidation, error)
    FetchLiquidations(symbol string, options ...FetchLiquidationsOptions) ([]Liquidation, error)
    FetchGreeks(symbol string, options ...FetchGreeksOptions) (Greeks, error)
    FetchAllGreeks(options ...FetchAllGreeksOptions) ([]Greeks, error)
    FetchOptionChain(code string, options ...FetchOptionChainOptions) (OptionChain, error)
    FetchOption(symbol string, options ...FetchOptionOptions) (Option, error)
    FetchConvertQuote(fromCode string, toCode string, options ...FetchConvertQuoteOptions) (Conversion, error)
    FetchDepositsWithdrawals(options ...FetchDepositsWithdrawalsOptions) ([]Transaction, error)
    FetchDeposits(options ...FetchDepositsOptions) ([]Transaction, error)
    FetchWithdrawals(options ...FetchWithdrawalsOptions) ([]Transaction, error)
    FetchFundingRateHistory(options ...FetchFundingRateHistoryOptions) ([]FundingRateHistory, error)
    FetchFundingHistory(options ...FetchFundingHistoryOptions) ([]FundingHistory, error)
    FetchDepositAddress(code string, options ...FetchDepositAddressOptions) (DepositAddress, error)
    CreateLimitOrder(symbol string, side string, amount float64, price float64, options ...CreateLimitOrderOptions) (Order, error)
    CreateMarketOrder(symbol string, side string, amount float64, options ...CreateMarketOrderOptions) (Order, error)
    CreateLimitBuyOrder(symbol string, amount float64, price float64, options ...CreateLimitBuyOrderOptions) (Order, error)
    CreateLimitSellOrder(symbol string, amount float64, price float64, options ...CreateLimitSellOrderOptions) (Order, error)
    CreateMarketBuyOrder(symbol string, amount float64, options ...CreateMarketBuyOrderOptions) (Order, error)
    CreateMarketSellOrder(symbol string, amount float64, options ...CreateMarketSellOrderOptions) (Order, error)
    FetchMarketLeverageTiers(symbol string, options ...FetchMarketLeverageTiersOptions) ([]LeverageTier, error)
    CreatePostOnlyOrder(symbol string, typeVar string, side string, amount float64, options ...CreatePostOnlyOrderOptions) (Order, error)
    CreateReduceOnlyOrder(symbol string, typeVar string, side string, amount float64, options ...CreateReduceOnlyOrderOptions) (Order, error)
    CreateStopOrder(symbol string, typeVar string, side string, amount float64, options ...CreateStopOrderOptions) (Order, error)
    CreateStopLimitOrder(symbol string, side string, amount float64, price float64, triggerPrice float64, options ...CreateStopLimitOrderOptions) (Order, error)
    CreateStopMarketOrder(symbol string, side string, amount float64, triggerPrice float64, options ...CreateStopMarketOrderOptions) (Order, error)
    FetchLastPrices(options ...FetchLastPricesOptions) (LastPrices, error)
    FetchTradingFees(params ...interface{}) (TradingFees, error)
    FetchTradingFee(symbol string, options ...FetchTradingFeeOptions) (TradingFeeInterface, error)
    FetchConvertCurrencies(params ...interface{}) (Currencies, error)
    FetchFundingRate(symbol string, options ...FetchFundingRateOptions) (FundingRate, error)
    FetchFundingInterval(symbol string, options ...FetchFundingIntervalOptions) (FundingRate, error)
    FetchMarkOHLCV(symbol interface{}, options ...FetchMarkOHLCVOptions) ([]OHLCV, error)
    FetchIndexOHLCV(symbol string, options ...FetchIndexOHLCVOptions) ([]OHLCV, error)
    FetchPremiumIndexOHLCV(symbol string, options ...FetchPremiumIndexOHLCVOptions) ([]OHLCV, error)
    FetchTransactions(options ...FetchTransactionsOptions) ([]Transaction, error)
    FetchPositionHistory(symbol string, options ...FetchPositionHistoryOptions) ([]Position, error)
    FetchPositionsHistory(options ...FetchPositionsHistoryOptions) ([]Position, error)
    FetchTransfer(id string, options ...FetchTransferOptions) (TransferEntry, error)
    FetchTransfers(options ...FetchTransfersOptions) ([]TransferEntry, error)
}

func CreateExchange(exchangeId string, options map[string]interface{}) (IExchange, bool) {
    exchangeId = strings.ToLower(exchangeId)
    switch exchangeId {
    case "exchange":
        itf := NewExchangeTyped(nil)
        return &itf, true
    case "alpaca":
        itf := NewAlpaca(options)
        return &itf, true
    case "apex":
        itf := NewApex(options)
        return &itf, true
    case "ascendex":
        itf := NewAscendex(options)
        return &itf, true
    case "bequant":
        itf := NewBequant(options)
        return &itf, true
    case "bigone":
        itf := NewBigone(options)
        return &itf, true
    case "binance":
        itf := NewBinance(options)
        return &itf, true
    case "binancecoinm":
        itf := NewBinancecoinm(options)
        return &itf, true
    case "binanceus":
        itf := NewBinanceus(options)
        return &itf, true
    case "binanceusdm":
        itf := NewBinanceusdm(options)
        return &itf, true
    case "bingx":
        itf := NewBingx(options)
        return &itf, true
    case "bit2c":
        itf := NewBit2c(options)
        return &itf, true
    case "bitbank":
        itf := NewBitbank(options)
        return &itf, true
    case "bitbns":
        itf := NewBitbns(options)
        return &itf, true
    case "bitfinex":
        itf := NewBitfinex(options)
        return &itf, true
    case "bitflyer":
        itf := NewBitflyer(options)
        return &itf, true
    case "bitget":
        itf := NewBitget(options)
        return &itf, true
    case "bithumb":
        itf := NewBithumb(options)
        return &itf, true
    case "bitmart":
        itf := NewBitmart(options)
        return &itf, true
    case "bitmex":
        itf := NewBitmex(options)
        return &itf, true
    case "bitopro":
        itf := NewBitopro(options)
        return &itf, true
    case "bitrue":
        itf := NewBitrue(options)
        return &itf, true
    case "bitso":
        itf := NewBitso(options)
        return &itf, true
    case "bitstamp":
        itf := NewBitstamp(options)
        return &itf, true
    case "bitteam":
        itf := NewBitteam(options)
        return &itf, true
    case "bittrade":
        itf := NewBittrade(options)
        return &itf, true
    case "bitvavo":
        itf := NewBitvavo(options)
        return &itf, true
    case "blockchaincom":
        itf := NewBlockchaincom(options)
        return &itf, true
    case "blofin":
        itf := NewBlofin(options)
        return &itf, true
    case "btcalpha":
        itf := NewBtcalpha(options)
        return &itf, true
    case "btcbox":
        itf := NewBtcbox(options)
        return &itf, true
    case "btcmarkets":
        itf := NewBtcmarkets(options)
        return &itf, true
    case "btcturk":
        itf := NewBtcturk(options)
        return &itf, true
    case "bybit":
        itf := NewBybit(options)
        return &itf, true
    case "cex":
        itf := NewCex(options)
        return &itf, true
    case "coinbase":
        itf := NewCoinbase(options)
        return &itf, true
    case "coinbaseadvanced":
        itf := NewCoinbaseadvanced(options)
        return &itf, true
    case "coinbaseexchange":
        itf := NewCoinbaseexchange(options)
        return &itf, true
    case "coinbaseinternational":
        itf := NewCoinbaseinternational(options)
        return &itf, true
    case "coincatch":
        itf := NewCoincatch(options)
        return &itf, true
    case "coincheck":
        itf := NewCoincheck(options)
        return &itf, true
    case "coinex":
        itf := NewCoinex(options)
        return &itf, true
    case "coinmate":
        itf := NewCoinmate(options)
        return &itf, true
    case "coinmetro":
        itf := NewCoinmetro(options)
        return &itf, true
    case "coinone":
        itf := NewCoinone(options)
        return &itf, true
    case "coinsph":
        itf := NewCoinsph(options)
        return &itf, true
    case "coinspot":
        itf := NewCoinspot(options)
        return &itf, true
    case "cryptocom":
        itf := NewCryptocom(options)
        return &itf, true
    case "cryptomus":
        itf := NewCryptomus(options)
        return &itf, true
    case "defx":
        itf := NewDefx(options)
        return &itf, true
    case "delta":
        itf := NewDelta(options)
        return &itf, true
    case "deribit":
        itf := NewDeribit(options)
        return &itf, true
    case "derive":
        itf := NewDerive(options)
        return &itf, true
    case "digifinex":
        itf := NewDigifinex(options)
        return &itf, true
    case "ellipx":
        itf := NewEllipx(options)
        return &itf, true
    case "exmo":
        itf := NewExmo(options)
        return &itf, true
    case "fmfwio":
        itf := NewFmfwio(options)
        return &itf, true
    case "gate":
        itf := NewGate(options)
        return &itf, true
    case "gateio":
        itf := NewGateio(options)
        return &itf, true
    case "gemini":
        itf := NewGemini(options)
        return &itf, true
    case "hashkey":
        itf := NewHashkey(options)
        return &itf, true
    case "hitbtc":
        itf := NewHitbtc(options)
        return &itf, true
    case "hollaex":
        itf := NewHollaex(options)
        return &itf, true
    case "htx":
        itf := NewHtx(options)
        return &itf, true
    case "huobi":
        itf := NewHuobi(options)
        return &itf, true
    case "hyperliquid":
        itf := NewHyperliquid(options)
        return &itf, true
    case "independentreserve":
        itf := NewIndependentreserve(options)
        return &itf, true
    case "indodax":
        itf := NewIndodax(options)
        return &itf, true
    case "kraken":
        itf := NewKraken(options)
        return &itf, true
    case "krakenfutures":
        itf := NewKrakenfutures(options)
        return &itf, true
    case "kucoin":
        itf := NewKucoin(options)
        return &itf, true
    case "kucoinfutures":
        itf := NewKucoinfutures(options)
        return &itf, true
    case "latoken":
        itf := NewLatoken(options)
        return &itf, true
    case "lbank":
        itf := NewLbank(options)
        return &itf, true
    case "luno":
        itf := NewLuno(options)
        return &itf, true
    case "mercado":
        itf := NewMercado(options)
        return &itf, true
    case "mexc":
        itf := NewMexc(options)
        return &itf, true
    case "modetrade":
        itf := NewModetrade(options)
        return &itf, true
    case "myokx":
        itf := NewMyokx(options)
        return &itf, true
    case "ndax":
        itf := NewNdax(options)
        return &itf, true
    case "novadax":
        itf := NewNovadax(options)
        return &itf, true
    case "oceanex":
        itf := NewOceanex(options)
        return &itf, true
    case "okcoin":
        itf := NewOkcoin(options)
        return &itf, true
    case "okx":
        itf := NewOkx(options)
        return &itf, true
    case "okxus":
        itf := NewOkxus(options)
        return &itf, true
    case "onetrading":
        itf := NewOnetrading(options)
        return &itf, true
    case "oxfun":
        itf := NewOxfun(options)
        return &itf, true
    case "p2b":
        itf := NewP2b(options)
        return &itf, true
    case "paradex":
        itf := NewParadex(options)
        return &itf, true
    case "paymium":
        itf := NewPaymium(options)
        return &itf, true
    case "phemex":
        itf := NewPhemex(options)
        return &itf, true
    case "poloniex":
        itf := NewPoloniex(options)
        return &itf, true
    case "probit":
        itf := NewProbit(options)
        return &itf, true
    case "timex":
        itf := NewTimex(options)
        return &itf, true
    case "tokocrypto":
        itf := NewTokocrypto(options)
        return &itf, true
    case "tradeogre":
        itf := NewTradeogre(options)
        return &itf, true
    case "upbit":
        itf := NewUpbit(options)
        return &itf, true
    case "vertex":
        itf := NewVertex(options)
        return &itf, true
    case "wavesexchange":
        itf := NewWavesexchange(options)
        return &itf, true
    case "whitebit":
        itf := NewWhitebit(options)
        return &itf, true
    case "woo":
        itf := NewWoo(options)
        return &itf, true
    case "woofipro":
        itf := NewWoofipro(options)
        return &itf, true
    case "xt":
        itf := NewXt(options)
        return &itf, true
    case "yobit":
        itf := NewYobit(options)
        return &itf, true
    case "zaif":
        itf := NewZaif(options)
        return &itf, true
    case "zonda":
        itf := NewZonda(options)
        return &itf, true
        default:
            return nil, false
    }
    return nil, false
}
