package ccxt
// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code



func DynamicallyCreateInstance(exchangeId string, exchangeArgs map[string]interface{}) (IExchange, bool) {
    switch exchangeId {
    case "Exchange":
        ExchangeItf := &Exchange{}
        ExchangeItf.Init(exchangeArgs)
        return ExchangeItf, true
    case "ace":
        aceItf := &ace{}
        aceItf.Init(exchangeArgs)
        return aceItf, true
    case "alpaca":
        alpacaItf := &alpaca{}
        alpacaItf.Init(exchangeArgs)
        return alpacaItf, true
    case "ascendex":
        ascendexItf := &ascendex{}
        ascendexItf.Init(exchangeArgs)
        return ascendexItf, true
    case "bequant":
        bequantItf := &bequant{}
        bequantItf.Init(exchangeArgs)
        return bequantItf, true
    case "bigone":
        bigoneItf := &bigone{}
        bigoneItf.Init(exchangeArgs)
        return bigoneItf, true
    case "binance":
        binanceItf := &binance{}
        binanceItf.Init(exchangeArgs)
        return binanceItf, true
    case "binancecoinm":
        binancecoinmItf := &binancecoinm{}
        binancecoinmItf.Init(exchangeArgs)
        return binancecoinmItf, true
    case "binanceus":
        binanceusItf := &binanceus{}
        binanceusItf.Init(exchangeArgs)
        return binanceusItf, true
    case "binanceusdm":
        binanceusdmItf := &binanceusdm{}
        binanceusdmItf.Init(exchangeArgs)
        return binanceusdmItf, true
    case "bingx":
        bingxItf := &bingx{}
        bingxItf.Init(exchangeArgs)
        return bingxItf, true
    case "bit2c":
        bit2cItf := &bit2c{}
        bit2cItf.Init(exchangeArgs)
        return bit2cItf, true
    case "bitbank":
        bitbankItf := &bitbank{}
        bitbankItf.Init(exchangeArgs)
        return bitbankItf, true
    case "bitbns":
        bitbnsItf := &bitbns{}
        bitbnsItf.Init(exchangeArgs)
        return bitbnsItf, true
    case "bitcoincom":
        bitcoincomItf := &bitcoincom{}
        bitcoincomItf.Init(exchangeArgs)
        return bitcoincomItf, true
    case "bitfinex":
        bitfinexItf := &bitfinex{}
        bitfinexItf.Init(exchangeArgs)
        return bitfinexItf, true
    case "bitfinex1":
        bitfinex1Itf := &bitfinex1{}
        bitfinex1Itf.Init(exchangeArgs)
        return bitfinex1Itf, true
    case "bitflyer":
        bitflyerItf := &bitflyer{}
        bitflyerItf.Init(exchangeArgs)
        return bitflyerItf, true
    case "bitget":
        bitgetItf := &bitget{}
        bitgetItf.Init(exchangeArgs)
        return bitgetItf, true
    case "bithumb":
        bithumbItf := &bithumb{}
        bithumbItf.Init(exchangeArgs)
        return bithumbItf, true
    case "bitmart":
        bitmartItf := &bitmart{}
        bitmartItf.Init(exchangeArgs)
        return bitmartItf, true
    case "bitmex":
        bitmexItf := &bitmex{}
        bitmexItf.Init(exchangeArgs)
        return bitmexItf, true
    case "bitopro":
        bitoproItf := &bitopro{}
        bitoproItf.Init(exchangeArgs)
        return bitoproItf, true
    case "bitpanda":
        bitpandaItf := &bitpanda{}
        bitpandaItf.Init(exchangeArgs)
        return bitpandaItf, true
    case "bitrue":
        bitrueItf := &bitrue{}
        bitrueItf.Init(exchangeArgs)
        return bitrueItf, true
    case "bitso":
        bitsoItf := &bitso{}
        bitsoItf.Init(exchangeArgs)
        return bitsoItf, true
    case "bitstamp":
        bitstampItf := &bitstamp{}
        bitstampItf.Init(exchangeArgs)
        return bitstampItf, true
    case "bitteam":
        bitteamItf := &bitteam{}
        bitteamItf.Init(exchangeArgs)
        return bitteamItf, true
    case "bitvavo":
        bitvavoItf := &bitvavo{}
        bitvavoItf.Init(exchangeArgs)
        return bitvavoItf, true
    case "bl3p":
        bl3pItf := &bl3p{}
        bl3pItf.Init(exchangeArgs)
        return bl3pItf, true
    case "blockchaincom":
        blockchaincomItf := &blockchaincom{}
        blockchaincomItf.Init(exchangeArgs)
        return blockchaincomItf, true
    case "blofin":
        blofinItf := &blofin{}
        blofinItf.Init(exchangeArgs)
        return blofinItf, true
    case "btcalpha":
        btcalphaItf := &btcalpha{}
        btcalphaItf.Init(exchangeArgs)
        return btcalphaItf, true
    case "btcbox":
        btcboxItf := &btcbox{}
        btcboxItf.Init(exchangeArgs)
        return btcboxItf, true
    case "btcmarkets":
        btcmarketsItf := &btcmarkets{}
        btcmarketsItf.Init(exchangeArgs)
        return btcmarketsItf, true
    case "btcturk":
        btcturkItf := &btcturk{}
        btcturkItf.Init(exchangeArgs)
        return btcturkItf, true
    case "bybit":
        bybitItf := &bybit{}
        bybitItf.Init(exchangeArgs)
        return bybitItf, true
    case "cex":
        cexItf := &cex{}
        cexItf.Init(exchangeArgs)
        return cexItf, true
    case "coinbase":
        coinbaseItf := &coinbase{}
        coinbaseItf.Init(exchangeArgs)
        return coinbaseItf, true
    case "coinbaseadvanced":
        coinbaseadvancedItf := &coinbaseadvanced{}
        coinbaseadvancedItf.Init(exchangeArgs)
        return coinbaseadvancedItf, true
    case "coinbaseexchange":
        coinbaseexchangeItf := &coinbaseexchange{}
        coinbaseexchangeItf.Init(exchangeArgs)
        return coinbaseexchangeItf, true
    case "coinbaseinternational":
        coinbaseinternationalItf := &coinbaseinternational{}
        coinbaseinternationalItf.Init(exchangeArgs)
        return coinbaseinternationalItf, true
    case "coincatch":
        coincatchItf := &coincatch{}
        coincatchItf.Init(exchangeArgs)
        return coincatchItf, true
    case "coincheck":
        coincheckItf := &coincheck{}
        coincheckItf.Init(exchangeArgs)
        return coincheckItf, true
    case "coinex":
        coinexItf := &coinex{}
        coinexItf.Init(exchangeArgs)
        return coinexItf, true
    case "coinlist":
        coinlistItf := &coinlist{}
        coinlistItf.Init(exchangeArgs)
        return coinlistItf, true
    case "coinmate":
        coinmateItf := &coinmate{}
        coinmateItf.Init(exchangeArgs)
        return coinmateItf, true
    case "coinmetro":
        coinmetroItf := &coinmetro{}
        coinmetroItf.Init(exchangeArgs)
        return coinmetroItf, true
    case "coinone":
        coinoneItf := &coinone{}
        coinoneItf.Init(exchangeArgs)
        return coinoneItf, true
    case "coinsph":
        coinsphItf := &coinsph{}
        coinsphItf.Init(exchangeArgs)
        return coinsphItf, true
    case "coinspot":
        coinspotItf := &coinspot{}
        coinspotItf.Init(exchangeArgs)
        return coinspotItf, true
    case "cryptocom":
        cryptocomItf := &cryptocom{}
        cryptocomItf.Init(exchangeArgs)
        return cryptocomItf, true
    case "currencycom":
        currencycomItf := &currencycom{}
        currencycomItf.Init(exchangeArgs)
        return currencycomItf, true
    case "defx":
        defxItf := &defx{}
        defxItf.Init(exchangeArgs)
        return defxItf, true
    case "delta":
        deltaItf := &delta{}
        deltaItf.Init(exchangeArgs)
        return deltaItf, true
    case "deribit":
        deribitItf := &deribit{}
        deribitItf.Init(exchangeArgs)
        return deribitItf, true
    case "digifinex":
        digifinexItf := &digifinex{}
        digifinexItf.Init(exchangeArgs)
        return digifinexItf, true
    case "ellipx":
        ellipxItf := &ellipx{}
        ellipxItf.Init(exchangeArgs)
        return ellipxItf, true
    case "exmo":
        exmoItf := &exmo{}
        exmoItf.Init(exchangeArgs)
        return exmoItf, true
    case "fmfwio":
        fmfwioItf := &fmfwio{}
        fmfwioItf.Init(exchangeArgs)
        return fmfwioItf, true
    case "gate":
        gateItf := &gate{}
        gateItf.Init(exchangeArgs)
        return gateItf, true
    case "gateio":
        gateioItf := &gateio{}
        gateioItf.Init(exchangeArgs)
        return gateioItf, true
    case "gemini":
        geminiItf := &gemini{}
        geminiItf.Init(exchangeArgs)
        return geminiItf, true
    case "hashkey":
        hashkeyItf := &hashkey{}
        hashkeyItf.Init(exchangeArgs)
        return hashkeyItf, true
    case "hitbtc":
        hitbtcItf := &hitbtc{}
        hitbtcItf.Init(exchangeArgs)
        return hitbtcItf, true
    case "hollaex":
        hollaexItf := &hollaex{}
        hollaexItf.Init(exchangeArgs)
        return hollaexItf, true
    case "htx":
        htxItf := &htx{}
        htxItf.Init(exchangeArgs)
        return htxItf, true
    case "huobi":
        huobiItf := &huobi{}
        huobiItf.Init(exchangeArgs)
        return huobiItf, true
    case "huobijp":
        huobijpItf := &huobijp{}
        huobijpItf.Init(exchangeArgs)
        return huobijpItf, true
    case "hyperliquid":
        hyperliquidItf := &hyperliquid{}
        hyperliquidItf.Init(exchangeArgs)
        return hyperliquidItf, true
    case "idex":
        idexItf := &idex{}
        idexItf.Init(exchangeArgs)
        return idexItf, true
    case "independentreserve":
        independentreserveItf := &independentreserve{}
        independentreserveItf.Init(exchangeArgs)
        return independentreserveItf, true
    case "indodax":
        indodaxItf := &indodax{}
        indodaxItf.Init(exchangeArgs)
        return indodaxItf, true
    case "kraken":
        krakenItf := &kraken{}
        krakenItf.Init(exchangeArgs)
        return krakenItf, true
    case "krakenfutures":
        krakenfuturesItf := &krakenfutures{}
        krakenfuturesItf.Init(exchangeArgs)
        return krakenfuturesItf, true
    case "kucoin":
        kucoinItf := &kucoin{}
        kucoinItf.Init(exchangeArgs)
        return kucoinItf, true
    case "kucoinfutures":
        kucoinfuturesItf := &kucoinfutures{}
        kucoinfuturesItf.Init(exchangeArgs)
        return kucoinfuturesItf, true
    case "kuna":
        kunaItf := &kuna{}
        kunaItf.Init(exchangeArgs)
        return kunaItf, true
    case "latoken":
        latokenItf := &latoken{}
        latokenItf.Init(exchangeArgs)
        return latokenItf, true
    case "lbank":
        lbankItf := &lbank{}
        lbankItf.Init(exchangeArgs)
        return lbankItf, true
    case "luno":
        lunoItf := &luno{}
        lunoItf.Init(exchangeArgs)
        return lunoItf, true
    case "mercado":
        mercadoItf := &mercado{}
        mercadoItf.Init(exchangeArgs)
        return mercadoItf, true
    case "mexc":
        mexcItf := &mexc{}
        mexcItf.Init(exchangeArgs)
        return mexcItf, true
    case "myokx":
        myokxItf := &myokx{}
        myokxItf.Init(exchangeArgs)
        return myokxItf, true
    case "ndax":
        ndaxItf := &ndax{}
        ndaxItf.Init(exchangeArgs)
        return ndaxItf, true
    case "novadax":
        novadaxItf := &novadax{}
        novadaxItf.Init(exchangeArgs)
        return novadaxItf, true
    case "oceanex":
        oceanexItf := &oceanex{}
        oceanexItf.Init(exchangeArgs)
        return oceanexItf, true
    case "okcoin":
        okcoinItf := &okcoin{}
        okcoinItf.Init(exchangeArgs)
        return okcoinItf, true
    case "okx":
        okxItf := &okx{}
        okxItf.Init(exchangeArgs)
        return okxItf, true
    case "onetrading":
        onetradingItf := &onetrading{}
        onetradingItf.Init(exchangeArgs)
        return onetradingItf, true
    case "oxfun":
        oxfunItf := &oxfun{}
        oxfunItf.Init(exchangeArgs)
        return oxfunItf, true
    case "p2b":
        p2bItf := &p2b{}
        p2bItf.Init(exchangeArgs)
        return p2bItf, true
    case "paradex":
        paradexItf := &paradex{}
        paradexItf.Init(exchangeArgs)
        return paradexItf, true
    case "paymium":
        paymiumItf := &paymium{}
        paymiumItf.Init(exchangeArgs)
        return paymiumItf, true
    case "phemex":
        phemexItf := &phemex{}
        phemexItf.Init(exchangeArgs)
        return phemexItf, true
    case "poloniex":
        poloniexItf := &poloniex{}
        poloniexItf.Init(exchangeArgs)
        return poloniexItf, true
    case "poloniexfutures":
        poloniexfuturesItf := &poloniexfutures{}
        poloniexfuturesItf.Init(exchangeArgs)
        return poloniexfuturesItf, true
    case "probit":
        probitItf := &probit{}
        probitItf.Init(exchangeArgs)
        return probitItf, true
    case "timex":
        timexItf := &timex{}
        timexItf.Init(exchangeArgs)
        return timexItf, true
    case "tokocrypto":
        tokocryptoItf := &tokocrypto{}
        tokocryptoItf.Init(exchangeArgs)
        return tokocryptoItf, true
    case "tradeogre":
        tradeogreItf := &tradeogre{}
        tradeogreItf.Init(exchangeArgs)
        return tradeogreItf, true
    case "upbit":
        upbitItf := &upbit{}
        upbitItf.Init(exchangeArgs)
        return upbitItf, true
    case "vertex":
        vertexItf := &vertex{}
        vertexItf.Init(exchangeArgs)
        return vertexItf, true
    case "wavesexchange":
        wavesexchangeItf := &wavesexchange{}
        wavesexchangeItf.Init(exchangeArgs)
        return wavesexchangeItf, true
    case "wazirx":
        wazirxItf := &wazirx{}
        wazirxItf.Init(exchangeArgs)
        return wazirxItf, true
    case "whitebit":
        whitebitItf := &whitebit{}
        whitebitItf.Init(exchangeArgs)
        return whitebitItf, true
    case "woo":
        wooItf := &woo{}
        wooItf.Init(exchangeArgs)
        return wooItf, true
    case "woofipro":
        woofiproItf := &woofipro{}
        woofiproItf.Init(exchangeArgs)
        return woofiproItf, true
    case "xt":
        xtItf := &xt{}
        xtItf.Init(exchangeArgs)
        return xtItf, true
    case "yobit":
        yobitItf := &yobit{}
        yobitItf.Init(exchangeArgs)
        return yobitItf, true
    case "zaif":
        zaifItf := &zaif{}
        zaifItf.Init(exchangeArgs)
        return zaifItf, true
    case "zonda":
        zondaItf := &zonda{}
        zondaItf.Init(exchangeArgs)
        return zondaItf, true
        default:
            return nil, false
    }
    return nil, false
}
