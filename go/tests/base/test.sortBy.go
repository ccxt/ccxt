package base
import "github.com/ccxt/ccxt/go/v4"

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

func TestSortBy()  {
    // todo: other argument checks
    exchange := ccxt.NewExchange().(*ccxt.Exchange); exchange.DerivedExchange = exchange; exchange.InitParent(map[string]interface{} {
        "id": "sampleexchange",
    }, map[string]interface{}{}, exchange)
    var arr interface{} = []interface{}{map[string]interface{} {
    "x": 5,
}, map[string]interface{} {
    "x": 2,
}, map[string]interface{} {
    "x": 4,
}, map[string]interface{} {
    "x": 0,
}, map[string]interface{} {
    "x": 1,
}, map[string]interface{} {
    "x": 3,
}}
    var newArray interface{} = exchange.SortBy(arr, "x")
    AssertDeepEqual(exchange, nil, "sortBy", newArray, []interface{}{map[string]interface{} {
    "x": 0,
}, map[string]interface{} {
    "x": 1,
}, map[string]interface{} {
    "x": 2,
}, map[string]interface{} {
    "x": 3,
}, map[string]interface{} {
    "x": 4,
}, map[string]interface{} {
    "x": 5,
}})
    var newArrayDescending interface{} = exchange.SortBy(arr, "x", true)
    AssertDeepEqual(exchange, nil, "sortBy", newArrayDescending, []interface{}{map[string]interface{} {
    "x": 5,
}, map[string]interface{} {
    "x": 4,
}, map[string]interface{} {
    "x": 3,
}, map[string]interface{} {
    "x": 2,
}, map[string]interface{} {
    "x": 1,
}, map[string]interface{} {
    "x": 0,
}})
    var emptyArray interface{} = exchange.SortBy([]interface{}{}, "x")
    AssertDeepEqual(exchange, nil, "sortBy", emptyArray, []interface{}{})
}