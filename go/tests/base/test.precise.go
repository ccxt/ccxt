package base
import "github.com/ccxt/ccxt/go/v4"

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

func TestPrecise()  {
    var w interface{} = "-1.123e-6"
    var x interface{} = "0.00000002"
    var y interface{} = "69696900000"
    var z interface{} = "0"
    var a interface{} = "1e8"
    Assert(IsEqual(ccxt.Precise.StringMul(x, y), "1393.938"))
    Assert(IsEqual(ccxt.Precise.StringMul(y, x), "1393.938"))
    Assert(IsEqual(ccxt.Precise.StringAdd(x, y), "69696900000.00000002"))
    Assert(IsEqual(ccxt.Precise.StringAdd(y, x), "69696900000.00000002"))
    Assert(IsEqual(ccxt.Precise.StringSub(x, y), "-69696899999.99999998"))
    Assert(IsEqual(ccxt.Precise.StringSub(y, x), "69696899999.99999998"))
    Assert(IsEqual(ccxt.Precise.StringDiv(x, y, 1), "0"))
    Assert(IsEqual(ccxt.Precise.StringDiv(x, y), "0"))
    Assert(IsEqual(ccxt.Precise.StringDiv(x, y, 19), "0.0000000000000000002"))
    Assert(IsEqual(ccxt.Precise.StringDiv(x, y, 20), "0.00000000000000000028"))
    Assert(IsEqual(ccxt.Precise.StringDiv(x, y, 21), "0.000000000000000000286"))
    Assert(IsEqual(ccxt.Precise.StringDiv(x, y, 22), "0.0000000000000000002869"))
    Assert(IsEqual(ccxt.Precise.StringDiv(y, x), "3484845000000000000"))
    Assert(IsEqual(ccxt.Precise.StringMul(x, w), "-0.00000000000002246"))
    Assert(IsEqual(ccxt.Precise.StringMul(w, x), "-0.00000000000002246"))
    Assert(IsEqual(ccxt.Precise.StringAdd(x, w), "-0.000001103"))
    Assert(IsEqual(ccxt.Precise.StringAdd(w, x), "-0.000001103"))
    Assert(IsEqual(ccxt.Precise.StringSub(x, w), "0.000001143"))
    Assert(IsEqual(ccxt.Precise.StringSub(w, x), "-0.000001143"))
    Assert(IsEqual(ccxt.Precise.StringDiv(x, w), "-0.017809439002671415"))
    Assert(IsEqual(ccxt.Precise.StringDiv(w, x), "-56.15"))
    Assert(IsEqual(ccxt.Precise.StringMul(z, w), "0"))
    Assert(IsEqual(ccxt.Precise.StringMul(z, x), "0"))
    Assert(IsEqual(ccxt.Precise.StringMul(z, y), "0"))
    Assert(IsEqual(ccxt.Precise.StringMul(w, z), "0"))
    Assert(IsEqual(ccxt.Precise.StringMul(x, z), "0"))
    Assert(IsEqual(ccxt.Precise.StringMul(y, z), "0"))
    Assert(IsEqual(ccxt.Precise.StringAdd(z, w), "-0.000001123"))
    Assert(IsEqual(ccxt.Precise.StringAdd(z, x), "0.00000002"))
    Assert(IsEqual(ccxt.Precise.StringAdd(z, y), "69696900000"))
    Assert(IsEqual(ccxt.Precise.StringAdd(w, z), "-0.000001123"))
    Assert(IsEqual(ccxt.Precise.StringAdd(x, z), "0.00000002"))
    Assert(IsEqual(ccxt.Precise.StringAdd(y, z), "69696900000"))
    Assert(IsEqual(ccxt.Precise.StringMul(x, a), "2"))
    Assert(IsEqual(ccxt.Precise.StringMul(a, x), "2"))
    Assert(IsEqual(ccxt.Precise.StringMul(y, a), "6969690000000000000"))
    Assert(IsEqual(ccxt.Precise.StringMul(a, y), "6969690000000000000"))
    Assert(IsEqual(ccxt.Precise.StringDiv(y, a), "696.969"))
    Assert(IsEqual(ccxt.Precise.StringDiv(y, a, OpNeg(1)), "690"))
    Assert(IsEqual(ccxt.Precise.StringDiv(y, a, 0), "696"))
    Assert(IsEqual(ccxt.Precise.StringDiv(y, a, 1), "696.9"))
    Assert(IsEqual(ccxt.Precise.StringDiv(y, a, 2), "696.96"))
    Assert(IsEqual(ccxt.Precise.StringDiv(a, y), "0.001434784043479695"))
    Assert(IsEqual(ccxt.Precise.StringAbs("0"), "0"))
    Assert(IsEqual(ccxt.Precise.StringAbs("-0"), "0"))
    Assert(IsEqual(ccxt.Precise.StringAbs("-500.1"), "500.1"))
    Assert(IsEqual(ccxt.Precise.StringAbs("213"), "213"))
    Assert(IsEqual(ccxt.Precise.StringNeg("0"), "0"))
    Assert(IsEqual(ccxt.Precise.StringNeg("-0"), "0"))
    Assert(IsEqual(ccxt.Precise.StringNeg("-500.1"), "500.1"))
    Assert(IsEqual(ccxt.Precise.StringNeg("213"), "-213"))
    Assert(IsEqual(ccxt.Precise.StringMod("57.123", "10"), "7.123"))
    Assert(IsEqual(ccxt.Precise.StringMod("18", "6"), "0"))
    Assert(IsEqual(ccxt.Precise.StringMod("10.1", "0.5"), "0.1"))
    Assert(IsEqual(ccxt.Precise.StringMod("10000000", "5555"), "1000"))
    Assert(IsEqual(ccxt.Precise.StringMod("5550", "120"), "30"))
    Assert(ccxt.Precise.StringEquals("1.0000", "1"))
    Assert(ccxt.Precise.StringEquals("-0.0", "0"))
    Assert(ccxt.Precise.StringEquals("-0.0", "0.0"))
    Assert(ccxt.Precise.StringEquals("5.534000", "5.5340"))
    Assert(IsEqual(ccxt.Precise.StringMin("1.0000", "2"), "1"))
    Assert(IsEqual(ccxt.Precise.StringMin("2", "1.2345"), "1.2345"))
    Assert(IsEqual(ccxt.Precise.StringMin("3.1415", "-2"), "-2"))
    Assert(IsEqual(ccxt.Precise.StringMin("-3.1415", "-2"), "-3.1415"))
    Assert(IsEqual(ccxt.Precise.StringMin("0.000", "-0.0"), "0"))
    Assert(IsEqual(ccxt.Precise.StringMax("1.0000", "2"), "2"))
    Assert(IsEqual(ccxt.Precise.StringMax("2", "1.2345"), "2"))
    Assert(IsEqual(ccxt.Precise.StringMax("3.1415", "-2"), "3.1415"))
    Assert(IsEqual(ccxt.Precise.StringMax("-3.1415", "-2"), "-2"))
    Assert(IsEqual(ccxt.Precise.StringMax("0.000", "-0.0"), "0"))
    Assert(!IsTrue(ccxt.Precise.StringGt("1.0000", "2")))
    Assert(ccxt.Precise.StringGt("2", "1.2345"))
    Assert(ccxt.Precise.StringGt("3.1415", "-2"))
    Assert(!IsTrue(ccxt.Precise.StringGt("-3.1415", "-2")))
    Assert(!IsTrue(ccxt.Precise.StringGt("3.1415", "3.1415")))
    Assert(ccxt.Precise.StringGt("3.14150000000000000000001", "3.1415"))
    Assert(!IsTrue(ccxt.Precise.StringGe("1.0000", "2")))
    Assert(ccxt.Precise.StringGe("2", "1.2345"))
    Assert(ccxt.Precise.StringGe("3.1415", "-2"))
    Assert(!IsTrue(ccxt.Precise.StringGe("-3.1415", "-2")))
    Assert(ccxt.Precise.StringGe("3.1415", "3.1415"))
    Assert(ccxt.Precise.StringGe("3.14150000000000000000001", "3.1415"))
    Assert(ccxt.Precise.StringLt("1.0000", "2"))
    Assert(!IsTrue(ccxt.Precise.StringLt("2", "1.2345")))
    Assert(!IsTrue(ccxt.Precise.StringLt("3.1415", "-2")))
    Assert(ccxt.Precise.StringLt("-3.1415", "-2"))
    Assert(!IsTrue(ccxt.Precise.StringLt("3.1415", "3.1415")))
    Assert(ccxt.Precise.StringLt("3.1415", "3.14150000000000000000001"))
    Assert(ccxt.Precise.StringLe("1.0000", "2"))
    Assert(!IsTrue(ccxt.Precise.StringLe("2", "1.2345")))
    Assert(!IsTrue(ccxt.Precise.StringLe("3.1415", "-2")))
    Assert(ccxt.Precise.StringLe("-3.1415", "-2"))
    Assert(ccxt.Precise.StringLe("3.1415", "3.1415"))
    Assert(ccxt.Precise.StringLe("3.1415", "3.14150000000000000000001"))
}