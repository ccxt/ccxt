package base
import "github.com/ccxt/ccxt/go/v4"

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


    func TestFetchOrderBooks(exchange ccxt.IExchange, skippedProperties interface{}) <- chan interface{} {
                ch := make(chan interface{})
                go func() interface{} {
                    defer close(ch)
                    defer ReturnPanicError(ch)
                        var method interface{} = "fetchOrderBooks"
                var symbol interface{} = GetValue(exchange.GetSymbols(), 0)
            
                orderBooks:= (<-exchange.FetchOrderBooks([]interface{}{symbol}))
                PanicOnError(orderBooks)
                Assert(IsObject(orderBooks), Add(Add(Add(Add(exchange.GetId(), " "), method), " must return an object. "), exchange.Json(orderBooks)))
                var orderBookKeys interface{} = ObjectKeys(orderBooks)
                Assert(GetArrayLength(orderBookKeys), Add(Add(Add(exchange.GetId(), " "), method), " returned 0 length data"))
                for i := 0; IsLessThan(i, GetArrayLength(orderBookKeys)); i++ {
                    var symbolInner interface{} = GetValue(orderBookKeys, i)
                    TestOrderBook(exchange, skippedProperties, method, GetValue(orderBooks, symbolInner), symbolInner)
                }
            
                ch <- true
                return nil
            
                }()
                return ch
            }
