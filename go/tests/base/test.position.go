package base
import "github.com/ccxt/ccxt/go/v4"

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


    func TestPosition(exchange ccxt.IExchange, skippedProperties interface{}, method interface{}, entry interface{}, symbol interface{}, now interface{})  {
        var format interface{} = map[string]interface{} {
            "info": map[string]interface{} {},
            "symbol": "XYZ/USDT",
            "timestamp": 1504224000000,
            "datetime": "2017-09-01T00:00:00",
            "initialMargin": exchange.ParseNumber("1.234"),
            "initialMarginPercentage": exchange.ParseNumber("0.123"),
            "maintenanceMargin": exchange.ParseNumber("1.234"),
            "maintenanceMarginPercentage": exchange.ParseNumber("0.123"),
            "entryPrice": exchange.ParseNumber("1.234"),
            "notional": exchange.ParseNumber("1.234"),
            "leverage": exchange.ParseNumber("1.234"),
            "unrealizedPnl": exchange.ParseNumber("1.234"),
            "contracts": exchange.ParseNumber("1"),
            "contractSize": exchange.ParseNumber("1.234"),
            "marginRatio": exchange.ParseNumber("1.234"),
            "liquidationPrice": exchange.ParseNumber("1.234"),
            "markPrice": exchange.ParseNumber("1.234"),
            "collateral": exchange.ParseNumber("1.234"),
            "marginMode": "cross",
            "side": "long",
            "percentage": exchange.ParseNumber("1.234"),
        }
        var emptyotAllowedFor interface{} = []interface{}{"liquidationPrice", "initialMargin", "initialMarginPercentage", "maintenanceMargin", "maintenanceMarginPercentage", "marginRatio"}
        AssertStructure(exchange, skippedProperties, method, entry, format, emptyotAllowedFor)
        AssertTimestampAndDatetime(exchange, skippedProperties, method, entry, now)
        AssertSymbol(exchange, skippedProperties, method, entry, "symbol", symbol)
        AssertInArray(exchange, skippedProperties, method, entry, "side", []interface{}{"long", "short"})
        AssertInArray(exchange, skippedProperties, method, entry, "marginMode", []interface{}{"cross", "isolated"})
        AssertGreater(exchange, skippedProperties, method, entry, "leverage", "0")
        AssertLessOrEqual(exchange, skippedProperties, method, entry, "leverage", "200")
        AssertGreater(exchange, skippedProperties, method, entry, "initialMargin", "0")
        AssertGreater(exchange, skippedProperties, method, entry, "initialMarginPercentage", "0")
        AssertGreater(exchange, skippedProperties, method, entry, "maintenanceMargin", "0")
        AssertGreater(exchange, skippedProperties, method, entry, "maintenanceMarginPercentage", "0")
        AssertGreater(exchange, skippedProperties, method, entry, "entryPrice", "0")
        AssertGreater(exchange, skippedProperties, method, entry, "notional", "0")
        AssertGreater(exchange, skippedProperties, method, entry, "contracts", "0")
        AssertGreater(exchange, skippedProperties, method, entry, "contractSize", "0")
        AssertGreater(exchange, skippedProperties, method, entry, "marginRatio", "0")
        AssertGreater(exchange, skippedProperties, method, entry, "liquidationPrice", "0")
        AssertGreater(exchange, skippedProperties, method, entry, "markPrice", "0")
        AssertGreater(exchange, skippedProperties, method, entry, "collateral", "0")
    }
