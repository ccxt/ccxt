package base
import "github.com/ccxt/ccxt/go/v4"

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


    func TestFetchTrades(exchange ccxt.IExchange, skippedProperties interface{}, symbol interface{}) <- chan interface{} {
                ch := make(chan interface{})
                go func() interface{} {
                    defer close(ch)
                    defer ReturnPanicError(ch)
                        var method interface{} = "fetchTrades"
            
                trades:= (<-exchange.FetchTrades(symbol))
                PanicOnError(trades)
                AssertNonEmtpyArray(exchange, skippedProperties, method, trades)
                var now interface{} = exchange.Milliseconds()
                for i := 0; IsLessThan(i, GetArrayLength(trades)); i++ {
                    TestTrade(exchange, skippedProperties, method, GetValue(trades, i), symbol, now)
                    AssertInArray(exchange, skippedProperties, method, GetValue(trades, i), "takerOrMaker", []interface{}{"taker", nil})
                }
                if !IsTrue((InOp(skippedProperties, "timestamp"))) {
                    AssertTimestampOrder(exchange, method, symbol, trades)
                }
            
                ch <- true
                return nil
            
                }()
                return ch
            }
