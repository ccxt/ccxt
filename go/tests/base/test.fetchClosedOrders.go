package base
import "github.com/ccxt/ccxt/go/v4"

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


    func TestFetchClosedOrders(exchange ccxt.IExchange, skippedProperties interface{}, symbol interface{}) <- chan interface{} {
                ch := make(chan interface{})
                go func() interface{} {
                    defer close(ch)
                    defer ReturnPanicError(ch)
                        var method interface{} = "fetchClosedOrders"
            
                orders:= (<-exchange.FetchClosedOrders(symbol))
                PanicOnError(orders)
                AssertNonEmtpyArray(exchange, skippedProperties, method, orders, symbol)
                var now interface{} = exchange.Milliseconds()
                for i := 0; IsLessThan(i, GetArrayLength(orders)); i++ {
                    var order interface{} = GetValue(orders, i)
                    TestOrder(exchange, skippedProperties, method, order, symbol, now)
                    AssertInArray(exchange, skippedProperties, method, order, "status", []interface{}{"closed", "canceled"})
                }
                AssertTimestampOrder(exchange, method, symbol, orders)
            
                ch <- true
                return nil
            
                }()
                return ch
            }
