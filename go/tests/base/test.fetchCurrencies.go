package base
import "github.com/ccxt/ccxt/go/v4"

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


    func TestFetchCurrencies(exchange ccxt.IExchange, skippedProperties interface{}) <- chan interface{} {
                ch := make(chan interface{})
                go func() interface{} {
                    defer close(ch)
                    defer ReturnPanicError(ch)
                        var method interface{} = "fetchCurrencies"
                // const isNative = exchange.has['fetchCurrencies'] && exchange.has['fetchCurrencies'] !== 'emulated';
            
                currencies:= (<-exchange.FetchCurrencies())
                PanicOnError(currencies)
                // todo: try to invent something to avoid undefined undefined, i.e. maybe move into private and force it to have a value
                if IsTrue(!IsEqual(currencies, nil)) {
                    var values interface{} = ObjectValues(currencies)
                    AssertNonEmtpyArray(exchange, skippedProperties, method, values)
                    for i := 0; IsLessThan(i, GetArrayLength(values)); i++ {
                        TestCurrency(exchange, skippedProperties, method, GetValue(values, i))
                    }
                }
            
                ch <- true
                return nil
            
                }()
                return ch
            }
