package base
import "github.com/ccxt/ccxt/go/v4"

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


    func TestFetchMarginModes(exchange ccxt.IExchange, skippedProperties interface{}, symbol interface{}) <- chan interface{} {
                ch := make(chan interface{})
                go func() interface{} {
                    defer close(ch)
                    defer ReturnPanicError(ch)
                        var method interface{} = "fetchMarginModes"
            
                marginModes:= (<-exchange.FetchMarginModes([]interface{}{"symbol"}))
                PanicOnError(marginModes)
                Assert(IsObject(marginModes), Add(Add(Add(Add(Add(Add(exchange.GetId(), " "), method), " "), symbol), " must return an object. "), exchange.Json(marginModes)))
                var marginModeKeys interface{} = ObjectKeys(marginModes)
                AssertNonEmtpyArray(exchange, skippedProperties, method, marginModes, symbol)
                for i := 0; IsLessThan(i, GetArrayLength(marginModeKeys)); i++ {
                    var marginMode interface{} = GetValue(marginModes, GetValue(marginModeKeys, i))
                    AssertNonEmtpyArray(exchange, skippedProperties, method, marginMode, symbol)
                    TestMarginMode(exchange, skippedProperties, method, marginMode)
                }
            
                ch <- true
                return nil
            
                }()
                return ch
            }
