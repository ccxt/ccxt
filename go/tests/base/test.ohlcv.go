package base
import "github.com/ccxt/ccxt/go/v4"

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


    func TestOHLCV(exchange ccxt.IExchange, skippedProperties interface{}, method interface{}, entry interface{}, symbol interface{}, now interface{})  {
        var format interface{} = []interface{}{1638230400000, exchange.ParseNumber("0.123"), exchange.ParseNumber("0.125"), exchange.ParseNumber("0.121"), exchange.ParseNumber("0.122"), exchange.ParseNumber("123.456")}
        var emptyNotAllowedFor interface{} = []interface{}{0, 1, 2, 3, 4, 5}
        AssertStructure(exchange, skippedProperties, method, entry, format, emptyNotAllowedFor)
        AssertTimestampAndDatetime(exchange, skippedProperties, method, entry, now, 0)
        var logText interface{} = LogTemplate(exchange, method, entry)
        //
        Assert(IsGreaterThanOrEqual(GetArrayLength(entry), 6), Add("ohlcv array length should be >= 6;", logText))
        if !IsTrue((InOp(skippedProperties, "roundTimestamp"))) {
            AssertRoundMinuteTimestamp(exchange, skippedProperties, method, entry, 0)
        }
        var high interface{} = exchange.SafeString(entry, 2)
        var low interface{} = exchange.SafeString(entry, 3)
        AssertLessOrEqual(exchange, skippedProperties, method, entry, "1", high)
        AssertGreaterOrEqual(exchange, skippedProperties, method, entry, "1", low)
        AssertLessOrEqual(exchange, skippedProperties, method, entry, "4", high)
        AssertGreaterOrEqual(exchange, skippedProperties, method, entry, "4", low)
        Assert(IsTrue((IsEqual(symbol, nil))) || IsTrue((IsString(symbol))), Add(Add(Add("symbol ", symbol), " is incorrect"), logText)) // todo: check with standard symbol check
    }
