package base
import "github.com/ccxt/ccxt/go/v4"

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


    func TestLedgerEntry(exchange ccxt.IExchange, skippedProperties interface{}, method interface{}, entry interface{}, requestedCode interface{}, now interface{})  {
        var format interface{} = map[string]interface{} {
            "info": map[string]interface{} {},
            "id": "x1234",
            "currency": "BTC",
            "account": "spot",
            "referenceId": "foo",
            "referenceAccount": "bar",
            "status": "ok",
            "amount": exchange.ParseNumber("22"),
            "before": exchange.ParseNumber("111"),
            "after": exchange.ParseNumber("133"),
            "fee": map[string]interface{} {},
            "direction": "in",
            "timestamp": 1638230400000,
            "datetime": "2021-11-30T00:00:00.000Z",
            "type": "deposit",
        }
        var emptyAllowedFor interface{} = []interface{}{"referenceId", "referenceAccount", "id"}
        AssertStructure(exchange, skippedProperties, method, entry, format, emptyAllowedFor)
        AssertTimestampAndDatetime(exchange, skippedProperties, method, entry, now)
        AssertCurrencyCode(exchange, skippedProperties, method, entry, GetValue(entry, "currency"), requestedCode)
        //
        AssertInArray(exchange, skippedProperties, method, entry, "direction", []interface{}{"in", "out"})
        AssertInArray(exchange, skippedProperties, method, entry, "type", []interface{}{"trade", "transaction", "margin", "cashback", "referral", "transfer", "fee"})
        // AssertInArray (exchange, skippedProperties, method, entry, 'account', ['spot', 'swap', .. ]); // todo
        AssertGreaterOrEqual(exchange, skippedProperties, method, entry, "amount", "0")
        AssertGreaterOrEqual(exchange, skippedProperties, method, entry, "before", "0")
        AssertGreaterOrEqual(exchange, skippedProperties, method, entry, "after", "0")
    }
