<?php

namespace ccxt\async\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class kuna extends \ccxt\async\Exchange {
    public function xreserve_get_nonce($params = array()) {
        return $this->request('nonce', 'xreserve', 'GET', $params, null, null, array("cost" => 1));
    }
    public function xreserve_get_fee($params = array()) {
        return $this->request('fee', 'xreserve', 'GET', $params, null, null, array("cost" => 1));
    }
    public function xreserve_get_delegated_transactions($params = array()) {
        return $this->request('delegated-transactions', 'xreserve', 'GET', $params, null, null, array("cost" => 1));
    }
    public function xreserve_post_delegate_transfer($params = array()) {
        return $this->request('delegate-transfer', 'xreserve', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_private_me($params = array()) {
        return $this->request('private/me', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_private_getbalance($params = array()) {
        return $this->request('private/getBalance', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_order_private_active($params = array()) {
        return $this->request('order/private/active', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_order_private_history($params = array()) {
        return $this->request('order/private/history', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_order_private_id_trades($params = array()) {
        return $this->request('order/private/{id}/trades', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_order_private_details_id($params = array()) {
        return $this->request('order/private/details/{id}', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_trade_private_history($params = array()) {
        return $this->request('trade/private/history', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_transaction_private_hash($params = array()) {
        return $this->request('transaction/private/{hash}', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_deposit_private_prerequest($params = array()) {
        return $this->request('deposit/private/preRequest', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_deposit_private_crypto_address($params = array()) {
        return $this->request('deposit/private/crypto/address', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_deposit_private_crypto_getmerchantaddress($params = array()) {
        return $this->request('deposit/private/crypto/getMerchantAddress', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_deposit_private_history($params = array()) {
        return $this->request('deposit/private/history', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_deposit_private_details_depositid($params = array()) {
        return $this->request('deposit/private/details/{depositId}', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_withdraw_private_prerequest($params = array()) {
        return $this->request('withdraw/private/preRequest', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_withdraw_private_history($params = array()) {
        return $this->request('withdraw/private/history', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_withdraw_private_details_withdrawid($params = array()) {
        return $this->request('withdraw/private/details/{withdrawId}', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_kuna_code_id($params = array()) {
        return $this->request('kuna-code/{id}', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_kuna_code_code_check($params = array()) {
        return $this->request('kuna-code/{code}/check', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_kuna_code_issued_by_me($params = array()) {
        return $this->request('kuna-code/issued-by-me', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_get_kuna_code_redeemed_by_me($params = array()) {
        return $this->request('kuna-code/redeemed-by-me', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_private_post_order_private_create($params = array()) {
        return $this->request('order/private/create', array('v4', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4_private_post_order_private_cancel($params = array()) {
        return $this->request('order/private/cancel', array('v4', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4_private_post_order_private_cancel_multi($params = array()) {
        return $this->request('order/private/cancel/multi', array('v4', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4_private_post_deposit_private_crypto_generateaddress($params = array()) {
        return $this->request('deposit/private/crypto/generateAddress', array('v4', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4_private_post_deposit_private_crypto_generatemerchantaddress($params = array()) {
        return $this->request('deposit/private/crypto/generateMerchantAddress', array('v4', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4_private_post_withdraw_private_create($params = array()) {
        return $this->request('withdraw/private/create', array('v4', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4_private_post_kuna_code($params = array()) {
        return $this->request('kuna-code', array('v4', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4_private_put_kuna_code_redeem($params = array()) {
        return $this->request('kuna-code/redeem', array('v4', 'private'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v4_public_get_public_timestamp($params = array()) {
        return $this->request('public/timestamp', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_public_get_public_fees($params = array()) {
        return $this->request('public/fees', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_public_get_public_currencies_type_type($params = array()) {
        return $this->request('public/currencies?type={type}', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_public_get_public_currencies($params = array()) {
        return $this->request('public/currencies', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_public_get_markets_public_getall($params = array()) {
        return $this->request('markets/public/getAll', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_public_get_markets_public_tickers_pairs_pairs($params = array()) {
        return $this->request('markets/public/tickers?pairs={pairs}', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_public_get_order_public_book_pairs($params = array()) {
        return $this->request('order/public/book/{pairs}', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4_public_get_trade_public_book_pairs($params = array()) {
        return $this->request('trade/public/book/{pairs}', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_get_timestamp($params = array()) {
        return $this->request('timestamp', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_get_currencies($params = array()) {
        return $this->request('currencies', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_get_markets($params = array()) {
        return $this->request('markets', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_get_tickers($params = array()) {
        return $this->request('tickers', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_get_k($params = array()) {
        return $this->request('k', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_get_trades_history($params = array()) {
        return $this->request('trades_history', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_get_fees($params = array()) {
        return $this->request('fees', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_get_exchange_rates($params = array()) {
        return $this->request('exchange-rates', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_get_exchange_rates_currency($params = array()) {
        return $this->request('exchange-rates/currency', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_get_book_market($params = array()) {
        return $this->request('book/market', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_get_kuna_codes_code_check($params = array()) {
        return $this->request('kuna_codes/code/check', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_get_landing_page_statistic($params = array()) {
        return $this->request('landing_page_statistic', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_get_translations_locale($params = array()) {
        return $this->request('translations/locale', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_get_trades_market_hist($params = array()) {
        return $this->request('trades/market/hist', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_public_post_http_test($params = array()) {
        return $this->request('http_test', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_public_post_deposit_channels($params = array()) {
        return $this->request('deposit_channels', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_public_post_withdraw_channels($params = array()) {
        return $this->request('withdraw_channels', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_public_post_subscription_plans($params = array()) {
        return $this->request('subscription_plans', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_public_post_send_to($params = array()) {
        return $this->request('send_to', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_public_post_confirm_token($params = array()) {
        return $this->request('confirm_token', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_public_post_kunaid($params = array()) {
        return $this->request('kunaid', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_public_post_withdraw_prerequest($params = array()) {
        return $this->request('withdraw/prerequest', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_public_post_deposit_prerequest($params = array()) {
        return $this->request('deposit/prerequest', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_public_post_deposit_exchange_rates($params = array()) {
        return $this->request('deposit/exchange-rates', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_sign_get_reset_password_token($params = array()) {
        return $this->request('reset_password/token', array('v3', 'sign'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3_sign_post_signup_google($params = array()) {
        return $this->request('signup/google', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_sign_post_signup_resend_confirmation($params = array()) {
        return $this->request('signup/resend_confirmation', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_sign_post_signup($params = array()) {
        return $this->request('signup', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_sign_post_signin($params = array()) {
        return $this->request('signin', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_sign_post_signin_two_factor($params = array()) {
        return $this->request('signin/two_factor', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_sign_post_signin_resend_confirm_device($params = array()) {
        return $this->request('signin/resend_confirm_device', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_sign_post_signin_confirm_device($params = array()) {
        return $this->request('signin/confirm_device', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_sign_post_reset_password($params = array()) {
        return $this->request('reset_password', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_sign_post_cool_signin($params = array()) {
        return $this->request('cool-signin', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_sign_put_reset_password_token($params = array()) {
        return $this->request('reset_password/token', array('v3', 'sign'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v3_sign_put_signup_code_confirm($params = array()) {
        return $this->request('signup/code/confirm', array('v3', 'sign'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_w_order_submit($params = array()) {
        return $this->request('auth/w/order/submit', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_r_orders($params = array()) {
        return $this->request('auth/r/orders', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_r_orders_market($params = array()) {
        return $this->request('auth/r/orders/market', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_r_orders_markets($params = array()) {
        return $this->request('auth/r/orders/markets', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_api_tokens_delete($params = array()) {
        return $this->request('auth/api_tokens/delete', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_api_tokens_create($params = array()) {
        return $this->request('auth/api_tokens/create', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_api_tokens($params = array()) {
        return $this->request('auth/api_tokens', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_signin_history_uniq($params = array()) {
        return $this->request('auth/signin_history/uniq', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_signin_history($params = array()) {
        return $this->request('auth/signin_history', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_disable_withdraw_confirmation($params = array()) {
        return $this->request('auth/disable_withdraw_confirmation', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_change_password($params = array()) {
        return $this->request('auth/change_password', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_deposit_address($params = array()) {
        return $this->request('auth/deposit_address', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_announcements_accept($params = array()) {
        return $this->request('auth/announcements/accept', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_announcements_unaccepted($params = array()) {
        return $this->request('auth/announcements/unaccepted', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_otp_deactivate($params = array()) {
        return $this->request('auth/otp/deactivate', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_otp_activate($params = array()) {
        return $this->request('auth/otp/activate', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_otp_secret($params = array()) {
        return $this->request('auth/otp/secret', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_r_order_market_order_id_trades($params = array()) {
        return $this->request('auth/r/order/market/:order_id/trades', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_r_orders_market_hist($params = array()) {
        return $this->request('auth/r/orders/market/hist', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_r_orders_hist($params = array()) {
        return $this->request('auth/r/orders/hist', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_r_orders_hist_markets($params = array()) {
        return $this->request('auth/r/orders/hist/markets', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_r_orders_details($params = array()) {
        return $this->request('auth/r/orders/details', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_assets_history($params = array()) {
        return $this->request('auth/assets-history', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_assets_history_withdraws($params = array()) {
        return $this->request('auth/assets-history/withdraws', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_assets_history_deposits($params = array()) {
        return $this->request('auth/assets-history/deposits', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_r_wallets($params = array()) {
        return $this->request('auth/r/wallets', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_markets_favorites($params = array()) {
        return $this->request('auth/markets/favorites', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_markets_favorites_list($params = array()) {
        return $this->request('auth/markets/favorites/list', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_me_update($params = array()) {
        return $this->request('auth/me/update', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_me($params = array()) {
        return $this->request('auth/me', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_fund_sources($params = array()) {
        return $this->request('auth/fund_sources', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_fund_sources_list($params = array()) {
        return $this->request('auth/fund_sources/list', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_withdraw_resend_confirmation($params = array()) {
        return $this->request('auth/withdraw/resend_confirmation', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_withdraw($params = array()) {
        return $this->request('auth/withdraw', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_withdraw_details($params = array()) {
        return $this->request('auth/withdraw/details', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_withdraw_info($params = array()) {
        return $this->request('auth/withdraw/info', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_payment_addresses($params = array()) {
        return $this->request('auth/payment_addresses', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_deposit_prerequest($params = array()) {
        return $this->request('auth/deposit/prerequest', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_deposit_exchange_rates($params = array()) {
        return $this->request('auth/deposit/exchange-rates', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_deposit($params = array()) {
        return $this->request('auth/deposit', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_deposit_details($params = array()) {
        return $this->request('auth/deposit/details', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_deposit_info($params = array()) {
        return $this->request('auth/deposit/info', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_kuna_codes_count($params = array()) {
        return $this->request('auth/kuna_codes/count', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_kuna_codes_details($params = array()) {
        return $this->request('auth/kuna_codes/details', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_kuna_codes_edit($params = array()) {
        return $this->request('auth/kuna_codes/edit', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_kuna_codes_send_pdf($params = array()) {
        return $this->request('auth/kuna_codes/send-pdf', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_kuna_codes($params = array()) {
        return $this->request('auth/kuna_codes', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_kuna_codes_redeemed_by_me($params = array()) {
        return $this->request('auth/kuna_codes/redeemed-by-me', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_kuna_codes_issued_by_me($params = array()) {
        return $this->request('auth/kuna_codes/issued-by-me', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_payment_requests_invoice($params = array()) {
        return $this->request('auth/payment_requests/invoice', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_payment_requests_type($params = array()) {
        return $this->request('auth/payment_requests/type', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_referral_program_weekly_earnings($params = array()) {
        return $this->request('auth/referral_program/weekly_earnings', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_referral_program_stats($params = array()) {
        return $this->request('auth/referral_program/stats', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_merchant_payout_services($params = array()) {
        return $this->request('auth/merchant/payout_services', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_merchant_withdraw($params = array()) {
        return $this->request('auth/merchant/withdraw', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_merchant_payment_services($params = array()) {
        return $this->request('auth/merchant/payment_services', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_merchant_deposit($params = array()) {
        return $this->request('auth/merchant/deposit', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_verification_auth_token($params = array()) {
        return $this->request('auth/verification/auth_token', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_kunaid_purchase_create($params = array()) {
        return $this->request('auth/kunaid_purchase/create', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_devices_list($params = array()) {
        return $this->request('auth/devices/list', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_sessions_list($params = array()) {
        return $this->request('auth/sessions/list', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_subscriptions_reactivate($params = array()) {
        return $this->request('auth/subscriptions/reactivate', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_subscriptions_cancel($params = array()) {
        return $this->request('auth/subscriptions/cancel', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_subscriptions_prolong($params = array()) {
        return $this->request('auth/subscriptions/prolong', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_subscriptions_create($params = array()) {
        return $this->request('auth/subscriptions/create', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_subscriptions_list($params = array()) {
        return $this->request('auth/subscriptions/list', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_auth_kuna_ids_list($params = array()) {
        return $this->request('auth/kuna_ids/list', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_order_cancel_multi($params = array()) {
        return $this->request('order/cancel/multi', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_post_order_cancel($params = array()) {
        return $this->request('order/cancel', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3_private_put_auth_fund_sources_id($params = array()) {
        return $this->request('auth/fund_sources/id', array('v3', 'private'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v3_private_put_auth_kuna_codes_redeem($params = array()) {
        return $this->request('auth/kuna_codes/redeem', array('v3', 'private'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v3_private_delete_auth_markets_favorites($params = array()) {
        return $this->request('auth/markets/favorites', array('v3', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v3_private_delete_auth_fund_sources($params = array()) {
        return $this->request('auth/fund_sources', array('v3', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v3_private_delete_auth_devices($params = array()) {
        return $this->request('auth/devices', array('v3', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v3_private_delete_auth_devices_list($params = array()) {
        return $this->request('auth/devices/list', array('v3', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v3_private_delete_auth_sessions_list($params = array()) {
        return $this->request('auth/sessions/list', array('v3', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v3_private_delete_auth_sessions($params = array()) {
        return $this->request('auth/sessions', array('v3', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function public_get_depth($params = array()) {
        return $this->request('depth', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_k_with_pending_trades($params = array()) {
        return $this->request('k_with_pending_trades', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_k($params = array()) {
        return $this->request('k', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_markets($params = array()) {
        return $this->request('markets', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_order_book($params = array()) {
        return $this->request('order_book', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_order_book_market($params = array()) {
        return $this->request('order_book/{market}', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_tickers($params = array()) {
        return $this->request('tickers', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_tickers_market($params = array()) {
        return $this->request('tickers/{market}', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_timestamp($params = array()) {
        return $this->request('timestamp', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_trades($params = array()) {
        return $this->request('trades', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_trades_market($params = array()) {
        return $this->request('trades/{market}', 'public', 'GET', $params, null, null, array());
    }
    public function private_get_members_me($params = array()) {
        return $this->request('members/me', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_deposits($params = array()) {
        return $this->request('deposits', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_deposit($params = array()) {
        return $this->request('deposit', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_deposit_address($params = array()) {
        return $this->request('deposit_address', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_orders($params = array()) {
        return $this->request('orders', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_order($params = array()) {
        return $this->request('order', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_trades_my($params = array()) {
        return $this->request('trades/my', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_withdraws($params = array()) {
        return $this->request('withdraws', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_withdraw($params = array()) {
        return $this->request('withdraw', 'private', 'GET', $params, null, null, array());
    }
    public function private_post_orders($params = array()) {
        return $this->request('orders', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_orders_multi($params = array()) {
        return $this->request('orders/multi', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_orders_clear($params = array()) {
        return $this->request('orders/clear', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_delete($params = array()) {
        return $this->request('order/delete', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_withdraw($params = array()) {
        return $this->request('withdraw', 'private', 'POST', $params, null, null, array());
    }
    public function xreserveGetNonce($params = array()) {
        return $this->request('nonce', 'xreserve', 'GET', $params, null, null, array("cost" => 1));
    }
    public function xreserveGetFee($params = array()) {
        return $this->request('fee', 'xreserve', 'GET', $params, null, null, array("cost" => 1));
    }
    public function xreserveGetDelegatedTransactions($params = array()) {
        return $this->request('delegated-transactions', 'xreserve', 'GET', $params, null, null, array("cost" => 1));
    }
    public function xreservePostDelegateTransfer($params = array()) {
        return $this->request('delegate-transfer', 'xreserve', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetPrivateMe($params = array()) {
        return $this->request('private/me', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetPrivateGetBalance($params = array()) {
        return $this->request('private/getBalance', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetOrderPrivateActive($params = array()) {
        return $this->request('order/private/active', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetOrderPrivateHistory($params = array()) {
        return $this->request('order/private/history', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetOrderPrivateIdTrades($params = array()) {
        return $this->request('order/private/{id}/trades', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetOrderPrivateDetailsId($params = array()) {
        return $this->request('order/private/details/{id}', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetTradePrivateHistory($params = array()) {
        return $this->request('trade/private/history', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetTransactionPrivateHash($params = array()) {
        return $this->request('transaction/private/{hash}', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetDepositPrivatePreRequest($params = array()) {
        return $this->request('deposit/private/preRequest', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetDepositPrivateCryptoAddress($params = array()) {
        return $this->request('deposit/private/crypto/address', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetDepositPrivateCryptoGetMerchantAddress($params = array()) {
        return $this->request('deposit/private/crypto/getMerchantAddress', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetDepositPrivateHistory($params = array()) {
        return $this->request('deposit/private/history', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetDepositPrivateDetailsDepositId($params = array()) {
        return $this->request('deposit/private/details/{depositId}', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetWithdrawPrivatePreRequest($params = array()) {
        return $this->request('withdraw/private/preRequest', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetWithdrawPrivateHistory($params = array()) {
        return $this->request('withdraw/private/history', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetWithdrawPrivateDetailsWithdrawId($params = array()) {
        return $this->request('withdraw/private/details/{withdrawId}', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetKunaCodeId($params = array()) {
        return $this->request('kuna-code/{id}', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetKunaCodeCodeCheck($params = array()) {
        return $this->request('kuna-code/{code}/check', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetKunaCodeIssuedByMe($params = array()) {
        return $this->request('kuna-code/issued-by-me', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivateGetKunaCodeRedeemedByMe($params = array()) {
        return $this->request('kuna-code/redeemed-by-me', array('v4', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PrivatePostOrderPrivateCreate($params = array()) {
        return $this->request('order/private/create', array('v4', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4PrivatePostOrderPrivateCancel($params = array()) {
        return $this->request('order/private/cancel', array('v4', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4PrivatePostOrderPrivateCancelMulti($params = array()) {
        return $this->request('order/private/cancel/multi', array('v4', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4PrivatePostDepositPrivateCryptoGenerateAddress($params = array()) {
        return $this->request('deposit/private/crypto/generateAddress', array('v4', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4PrivatePostDepositPrivateCryptoGenerateMerchantAddress($params = array()) {
        return $this->request('deposit/private/crypto/generateMerchantAddress', array('v4', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4PrivatePostWithdrawPrivateCreate($params = array()) {
        return $this->request('withdraw/private/create', array('v4', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4PrivatePostKunaCode($params = array()) {
        return $this->request('kuna-code', array('v4', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v4PrivatePutKunaCodeRedeem($params = array()) {
        return $this->request('kuna-code/redeem', array('v4', 'private'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v4PublicGetPublicTimestamp($params = array()) {
        return $this->request('public/timestamp', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PublicGetPublicFees($params = array()) {
        return $this->request('public/fees', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PublicGetPublicCurrenciesTypeType($params = array()) {
        return $this->request('public/currencies?type={type}', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PublicGetPublicCurrencies($params = array()) {
        return $this->request('public/currencies', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PublicGetMarketsPublicGetAll($params = array()) {
        return $this->request('markets/public/getAll', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PublicGetMarketsPublicTickersPairsPairs($params = array()) {
        return $this->request('markets/public/tickers?pairs={pairs}', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PublicGetOrderPublicBookPairs($params = array()) {
        return $this->request('order/public/book/{pairs}', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v4PublicGetTradePublicBookPairs($params = array()) {
        return $this->request('trade/public/book/{pairs}', array('v4', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicGetTimestamp($params = array()) {
        return $this->request('timestamp', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicGetCurrencies($params = array()) {
        return $this->request('currencies', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicGetMarkets($params = array()) {
        return $this->request('markets', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicGetTickers($params = array()) {
        return $this->request('tickers', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicGetK($params = array()) {
        return $this->request('k', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicGetTradesHistory($params = array()) {
        return $this->request('trades_history', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicGetFees($params = array()) {
        return $this->request('fees', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicGetExchangeRates($params = array()) {
        return $this->request('exchange-rates', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicGetExchangeRatesCurrency($params = array()) {
        return $this->request('exchange-rates/currency', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicGetBookMarket($params = array()) {
        return $this->request('book/market', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicGetKunaCodesCodeCheck($params = array()) {
        return $this->request('kuna_codes/code/check', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicGetLandingPageStatistic($params = array()) {
        return $this->request('landing_page_statistic', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicGetTranslationsLocale($params = array()) {
        return $this->request('translations/locale', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicGetTradesMarketHist($params = array()) {
        return $this->request('trades/market/hist', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3PublicPostHttpTest($params = array()) {
        return $this->request('http_test', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PublicPostDepositChannels($params = array()) {
        return $this->request('deposit_channels', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PublicPostWithdrawChannels($params = array()) {
        return $this->request('withdraw_channels', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PublicPostSubscriptionPlans($params = array()) {
        return $this->request('subscription_plans', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PublicPostSendTo($params = array()) {
        return $this->request('send_to', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PublicPostConfirmToken($params = array()) {
        return $this->request('confirm_token', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PublicPostKunaid($params = array()) {
        return $this->request('kunaid', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PublicPostWithdrawPrerequest($params = array()) {
        return $this->request('withdraw/prerequest', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PublicPostDepositPrerequest($params = array()) {
        return $this->request('deposit/prerequest', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PublicPostDepositExchangeRates($params = array()) {
        return $this->request('deposit/exchange-rates', array('v3', 'public'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3SignGetResetPasswordToken($params = array()) {
        return $this->request('reset_password/token', array('v3', 'sign'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v3SignPostSignupGoogle($params = array()) {
        return $this->request('signup/google', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3SignPostSignupResendConfirmation($params = array()) {
        return $this->request('signup/resend_confirmation', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3SignPostSignup($params = array()) {
        return $this->request('signup', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3SignPostSignin($params = array()) {
        return $this->request('signin', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3SignPostSigninTwoFactor($params = array()) {
        return $this->request('signin/two_factor', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3SignPostSigninResendConfirmDevice($params = array()) {
        return $this->request('signin/resend_confirm_device', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3SignPostSigninConfirmDevice($params = array()) {
        return $this->request('signin/confirm_device', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3SignPostResetPassword($params = array()) {
        return $this->request('reset_password', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3SignPostCoolSignin($params = array()) {
        return $this->request('cool-signin', array('v3', 'sign'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3SignPutResetPasswordToken($params = array()) {
        return $this->request('reset_password/token', array('v3', 'sign'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v3SignPutSignupCodeConfirm($params = array()) {
        return $this->request('signup/code/confirm', array('v3', 'sign'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthWOrderSubmit($params = array()) {
        return $this->request('auth/w/order/submit', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthROrders($params = array()) {
        return $this->request('auth/r/orders', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthROrdersMarket($params = array()) {
        return $this->request('auth/r/orders/market', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthROrdersMarkets($params = array()) {
        return $this->request('auth/r/orders/markets', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthApiTokensDelete($params = array()) {
        return $this->request('auth/api_tokens/delete', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthApiTokensCreate($params = array()) {
        return $this->request('auth/api_tokens/create', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthApiTokens($params = array()) {
        return $this->request('auth/api_tokens', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthSigninHistoryUniq($params = array()) {
        return $this->request('auth/signin_history/uniq', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthSigninHistory($params = array()) {
        return $this->request('auth/signin_history', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthDisableWithdrawConfirmation($params = array()) {
        return $this->request('auth/disable_withdraw_confirmation', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthChangePassword($params = array()) {
        return $this->request('auth/change_password', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthDepositAddress($params = array()) {
        return $this->request('auth/deposit_address', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthAnnouncementsAccept($params = array()) {
        return $this->request('auth/announcements/accept', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthAnnouncementsUnaccepted($params = array()) {
        return $this->request('auth/announcements/unaccepted', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthOtpDeactivate($params = array()) {
        return $this->request('auth/otp/deactivate', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthOtpActivate($params = array()) {
        return $this->request('auth/otp/activate', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthOtpSecret($params = array()) {
        return $this->request('auth/otp/secret', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthROrderMarketOrderIdTrades($params = array()) {
        return $this->request('auth/r/order/market/:order_id/trades', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthROrdersMarketHist($params = array()) {
        return $this->request('auth/r/orders/market/hist', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthROrdersHist($params = array()) {
        return $this->request('auth/r/orders/hist', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthROrdersHistMarkets($params = array()) {
        return $this->request('auth/r/orders/hist/markets', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthROrdersDetails($params = array()) {
        return $this->request('auth/r/orders/details', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthAssetsHistory($params = array()) {
        return $this->request('auth/assets-history', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthAssetsHistoryWithdraws($params = array()) {
        return $this->request('auth/assets-history/withdraws', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthAssetsHistoryDeposits($params = array()) {
        return $this->request('auth/assets-history/deposits', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthRWallets($params = array()) {
        return $this->request('auth/r/wallets', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthMarketsFavorites($params = array()) {
        return $this->request('auth/markets/favorites', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthMarketsFavoritesList($params = array()) {
        return $this->request('auth/markets/favorites/list', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthMeUpdate($params = array()) {
        return $this->request('auth/me/update', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthMe($params = array()) {
        return $this->request('auth/me', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthFundSources($params = array()) {
        return $this->request('auth/fund_sources', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthFundSourcesList($params = array()) {
        return $this->request('auth/fund_sources/list', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthWithdrawResendConfirmation($params = array()) {
        return $this->request('auth/withdraw/resend_confirmation', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthWithdraw($params = array()) {
        return $this->request('auth/withdraw', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthWithdrawDetails($params = array()) {
        return $this->request('auth/withdraw/details', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthWithdrawInfo($params = array()) {
        return $this->request('auth/withdraw/info', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthPaymentAddresses($params = array()) {
        return $this->request('auth/payment_addresses', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthDepositPrerequest($params = array()) {
        return $this->request('auth/deposit/prerequest', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthDepositExchangeRates($params = array()) {
        return $this->request('auth/deposit/exchange-rates', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthDeposit($params = array()) {
        return $this->request('auth/deposit', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthDepositDetails($params = array()) {
        return $this->request('auth/deposit/details', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthDepositInfo($params = array()) {
        return $this->request('auth/deposit/info', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthKunaCodesCount($params = array()) {
        return $this->request('auth/kuna_codes/count', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthKunaCodesDetails($params = array()) {
        return $this->request('auth/kuna_codes/details', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthKunaCodesEdit($params = array()) {
        return $this->request('auth/kuna_codes/edit', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthKunaCodesSendPdf($params = array()) {
        return $this->request('auth/kuna_codes/send-pdf', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthKunaCodes($params = array()) {
        return $this->request('auth/kuna_codes', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthKunaCodesRedeemedByMe($params = array()) {
        return $this->request('auth/kuna_codes/redeemed-by-me', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthKunaCodesIssuedByMe($params = array()) {
        return $this->request('auth/kuna_codes/issued-by-me', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthPaymentRequestsInvoice($params = array()) {
        return $this->request('auth/payment_requests/invoice', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthPaymentRequestsType($params = array()) {
        return $this->request('auth/payment_requests/type', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthReferralProgramWeeklyEarnings($params = array()) {
        return $this->request('auth/referral_program/weekly_earnings', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthReferralProgramStats($params = array()) {
        return $this->request('auth/referral_program/stats', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthMerchantPayoutServices($params = array()) {
        return $this->request('auth/merchant/payout_services', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthMerchantWithdraw($params = array()) {
        return $this->request('auth/merchant/withdraw', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthMerchantPaymentServices($params = array()) {
        return $this->request('auth/merchant/payment_services', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthMerchantDeposit($params = array()) {
        return $this->request('auth/merchant/deposit', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthVerificationAuthToken($params = array()) {
        return $this->request('auth/verification/auth_token', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthKunaidPurchaseCreate($params = array()) {
        return $this->request('auth/kunaid_purchase/create', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthDevicesList($params = array()) {
        return $this->request('auth/devices/list', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthSessionsList($params = array()) {
        return $this->request('auth/sessions/list', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthSubscriptionsReactivate($params = array()) {
        return $this->request('auth/subscriptions/reactivate', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthSubscriptionsCancel($params = array()) {
        return $this->request('auth/subscriptions/cancel', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthSubscriptionsProlong($params = array()) {
        return $this->request('auth/subscriptions/prolong', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthSubscriptionsCreate($params = array()) {
        return $this->request('auth/subscriptions/create', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthSubscriptionsList($params = array()) {
        return $this->request('auth/subscriptions/list', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostAuthKunaIdsList($params = array()) {
        return $this->request('auth/kuna_ids/list', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostOrderCancelMulti($params = array()) {
        return $this->request('order/cancel/multi', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePostOrderCancel($params = array()) {
        return $this->request('order/cancel', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePutAuthFundSourcesId($params = array()) {
        return $this->request('auth/fund_sources/id', array('v3', 'private'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v3PrivatePutAuthKunaCodesRedeem($params = array()) {
        return $this->request('auth/kuna_codes/redeem', array('v3', 'private'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v3PrivateDeleteAuthMarketsFavorites($params = array()) {
        return $this->request('auth/markets/favorites', array('v3', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v3PrivateDeleteAuthFundSources($params = array()) {
        return $this->request('auth/fund_sources', array('v3', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v3PrivateDeleteAuthDevices($params = array()) {
        return $this->request('auth/devices', array('v3', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v3PrivateDeleteAuthDevicesList($params = array()) {
        return $this->request('auth/devices/list', array('v3', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v3PrivateDeleteAuthSessionsList($params = array()) {
        return $this->request('auth/sessions/list', array('v3', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v3PrivateDeleteAuthSessions($params = array()) {
        return $this->request('auth/sessions', array('v3', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function publicGetDepth($params = array()) {
        return $this->request('depth', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetKWithPendingTrades($params = array()) {
        return $this->request('k_with_pending_trades', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetK($params = array()) {
        return $this->request('k', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetMarkets($params = array()) {
        return $this->request('markets', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetOrderBook($params = array()) {
        return $this->request('order_book', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetOrderBookMarket($params = array()) {
        return $this->request('order_book/{market}', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetTickers($params = array()) {
        return $this->request('tickers', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetTickersMarket($params = array()) {
        return $this->request('tickers/{market}', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetTimestamp($params = array()) {
        return $this->request('timestamp', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetTrades($params = array()) {
        return $this->request('trades', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetTradesMarket($params = array()) {
        return $this->request('trades/{market}', 'public', 'GET', $params, null, null, array());
    }
    public function privateGetMembersMe($params = array()) {
        return $this->request('members/me', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetDeposits($params = array()) {
        return $this->request('deposits', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetDeposit($params = array()) {
        return $this->request('deposit', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetDepositAddress($params = array()) {
        return $this->request('deposit_address', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetOrders($params = array()) {
        return $this->request('orders', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetOrder($params = array()) {
        return $this->request('order', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetTradesMy($params = array()) {
        return $this->request('trades/my', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetWithdraws($params = array()) {
        return $this->request('withdraws', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetWithdraw($params = array()) {
        return $this->request('withdraw', 'private', 'GET', $params, null, null, array());
    }
    public function privatePostOrders($params = array()) {
        return $this->request('orders', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrdersMulti($params = array()) {
        return $this->request('orders/multi', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrdersClear($params = array()) {
        return $this->request('orders/clear', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderDelete($params = array()) {
        return $this->request('order/delete', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostWithdraw($params = array()) {
        return $this->request('withdraw', 'private', 'POST', $params, null, null, array());
    }
}
