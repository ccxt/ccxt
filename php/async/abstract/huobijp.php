<?php

namespace ccxt\async\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class huobijp extends \ccxt\async\Exchange {
    public function v2public_get_reference_currencies($params = array()) {
        return $this->request('reference/currencies', 'v2Public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2public_get_market_status($params = array()) {
        return $this->request('market-status', 'v2Public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_account_ledger($params = array()) {
        return $this->request('account/ledger', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_account_withdraw_quota($params = array()) {
        return $this->request('account/withdraw/quota', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_account_withdraw_address($params = array()) {
        return $this->request('account/withdraw/address', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_account_deposit_address($params = array()) {
        return $this->request('account/deposit/address', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_account_repayment($params = array()) {
        return $this->request('account/repayment', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2private_get_reference_transact_fee_rate($params = array()) {
        return $this->request('reference/transact-fee-rate', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_account_asset_valuation($params = array()) {
        return $this->request('account/asset-valuation', 'v2Private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function v2private_get_point_account($params = array()) {
        return $this->request('point/account', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2private_get_sub_user_user_list($params = array()) {
        return $this->request('sub-user/user-list', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_sub_user_user_state($params = array()) {
        return $this->request('sub-user/user-state', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_sub_user_account_list($params = array()) {
        return $this->request('sub-user/account-list', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_sub_user_deposit_address($params = array()) {
        return $this->request('sub-user/deposit-address', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_sub_user_query_deposit($params = array()) {
        return $this->request('sub-user/query-deposit', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_user_api_key($params = array()) {
        return $this->request('user/api-key', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_user_uid($params = array()) {
        return $this->request('user/uid', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_algo_orders_opening($params = array()) {
        return $this->request('algo-orders/opening', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_algo_orders_history($params = array()) {
        return $this->request('algo-orders/history', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_algo_orders_specific($params = array()) {
        return $this->request('algo-orders/specific', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_c2c_offers($params = array()) {
        return $this->request('c2c/offers', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_c2c_offer($params = array()) {
        return $this->request('c2c/offer', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_c2c_transactions($params = array()) {
        return $this->request('c2c/transactions', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_c2c_repayment($params = array()) {
        return $this->request('c2c/repayment', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_c2c_account($params = array()) {
        return $this->request('c2c/account', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_etp_reference($params = array()) {
        return $this->request('etp/reference', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_etp_transactions($params = array()) {
        return $this->request('etp/transactions', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2private_get_etp_transaction($params = array()) {
        return $this->request('etp/transaction', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2private_get_etp_rebalance($params = array()) {
        return $this->request('etp/rebalance', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_etp_limit($params = array()) {
        return $this->request('etp/limit', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_account_transfer($params = array()) {
        return $this->request('account/transfer', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_account_repayment($params = array()) {
        return $this->request('account/repayment', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2private_post_point_transfer($params = array()) {
        return $this->request('point/transfer', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2private_post_sub_user_management($params = array()) {
        return $this->request('sub-user/management', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_sub_user_creation($params = array()) {
        return $this->request('sub-user/creation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_sub_user_tradable_market($params = array()) {
        return $this->request('sub-user/tradable-market', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_sub_user_transferability($params = array()) {
        return $this->request('sub-user/transferability', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_sub_user_api_key_generation($params = array()) {
        return $this->request('sub-user/api-key-generation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_sub_user_api_key_modification($params = array()) {
        return $this->request('sub-user/api-key-modification', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_sub_user_api_key_deletion($params = array()) {
        return $this->request('sub-user/api-key-deletion', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_sub_user_deduct_mode($params = array()) {
        return $this->request('sub-user/deduct-mode', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_algo_orders($params = array()) {
        return $this->request('algo-orders', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_algo_orders_cancel_all_after($params = array()) {
        return $this->request('algo-orders/cancel-all-after', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_algo_orders_cancellation($params = array()) {
        return $this->request('algo-orders/cancellation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_c2c_offer($params = array()) {
        return $this->request('c2c/offer', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_c2c_cancellation($params = array()) {
        return $this->request('c2c/cancellation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_c2c_cancel_all($params = array()) {
        return $this->request('c2c/cancel-all', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_c2c_repayment($params = array()) {
        return $this->request('c2c/repayment', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_c2c_transfer($params = array()) {
        return $this->request('c2c/transfer', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_etp_creation($params = array()) {
        return $this->request('etp/creation', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2private_post_etp_redemption($params = array()) {
        return $this->request('etp/redemption', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2private_post_etp_transactid_cancel($params = array()) {
        return $this->request('etp/{transactId}/cancel', 'v2Private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function v2private_post_etp_batch_cancel($params = array()) {
        return $this->request('etp/batch-cancel', 'v2Private', 'POST', $params, null, null, array("cost" => 50));
    }
    public function market_get_history_kline($params = array()) {
        return $this->request('history/kline', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function market_get_detail_merged($params = array()) {
        return $this->request('detail/merged', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function market_get_depth($params = array()) {
        return $this->request('depth', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function market_get_trade($params = array()) {
        return $this->request('trade', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function market_get_history_trade($params = array()) {
        return $this->request('history/trade', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function market_get_detail($params = array()) {
        return $this->request('detail', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function market_get_tickers($params = array()) {
        return $this->request('tickers', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function market_get_etp($params = array()) {
        return $this->request('etp', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_common_symbols($params = array()) {
        return $this->request('common/symbols', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_common_currencys($params = array()) {
        return $this->request('common/currencys', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_common_timestamp($params = array()) {
        return $this->request('common/timestamp', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_common_exchange($params = array()) {
        return $this->request('common/exchange', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_settings_currencys($params = array()) {
        return $this->request('settings/currencys', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_account_accounts($params = array()) {
        return $this->request('account/accounts', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function private_get_account_accounts_id_balance($params = array()) {
        return $this->request('account/accounts/{id}/balance', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function private_get_account_accounts_sub_uid($params = array()) {
        return $this->request('account/accounts/{sub-uid}', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_account_history($params = array()) {
        return $this->request('account/history', 'private', 'GET', $params, null, null, array("cost" => 4));
    }
    public function private_get_cross_margin_loan_info($params = array()) {
        return $this->request('cross-margin/loan-info', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_margin_loan_info($params = array()) {
        return $this->request('margin/loan-info', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_fee_fee_rate_get($params = array()) {
        return $this->request('fee/fee-rate/get', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_order_openorders($params = array()) {
        return $this->request('order/openOrders', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function private_get_order_orders($params = array()) {
        return $this->request('order/orders', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function private_get_order_orders_id($params = array()) {
        return $this->request('order/orders/{id}', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function private_get_order_orders_id_matchresults($params = array()) {
        return $this->request('order/orders/{id}/matchresults', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function private_get_order_orders_getclientorder($params = array()) {
        return $this->request('order/orders/getClientOrder', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function private_get_order_history($params = array()) {
        return $this->request('order/history', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_order_matchresults($params = array()) {
        return $this->request('order/matchresults', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_query_deposit_withdraw($params = array()) {
        return $this->request('query/deposit-withdraw', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_margin_loan_orders($params = array()) {
        return $this->request('margin/loan-orders', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function private_get_margin_accounts_balance($params = array()) {
        return $this->request('margin/accounts/balance', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function private_get_cross_margin_loan_orders($params = array()) {
        return $this->request('cross-margin/loan-orders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_cross_margin_accounts_balance($params = array()) {
        return $this->request('cross-margin/accounts/balance', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_points_actions($params = array()) {
        return $this->request('points/actions', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_points_orders($params = array()) {
        return $this->request('points/orders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_subuser_aggregate_balance($params = array()) {
        return $this->request('subuser/aggregate-balance', 'private', 'GET', $params, null, null, array("cost" => 10));
    }
    public function private_get_stable_coin_exchange_rate($params = array()) {
        return $this->request('stable-coin/exchange_rate', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_stable_coin_quote($params = array()) {
        return $this->request('stable-coin/quote', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_post_account_transfer($params = array()) {
        return $this->request('account/transfer', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_futures_transfer($params = array()) {
        return $this->request('futures/transfer', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_order_batch_orders($params = array()) {
        return $this->request('order/batch-orders', 'private', 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function private_post_order_orders_place($params = array()) {
        return $this->request('order/orders/place', 'private', 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function private_post_order_orders_submitcancelclientorder($params = array()) {
        return $this->request('order/orders/submitCancelClientOrder', 'private', 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function private_post_order_orders_batchcancelopenorders($params = array()) {
        return $this->request('order/orders/batchCancelOpenOrders', 'private', 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function private_post_order_orders_id_submitcancel($params = array()) {
        return $this->request('order/orders/{id}/submitcancel', 'private', 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function private_post_order_orders_batchcancel($params = array()) {
        return $this->request('order/orders/batchcancel', 'private', 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function private_post_dw_withdraw_api_create($params = array()) {
        return $this->request('dw/withdraw/api/create', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_dw_withdraw_virtual_id_cancel($params = array()) {
        return $this->request('dw/withdraw-virtual/{id}/cancel', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_dw_transfer_in_margin($params = array()) {
        return $this->request('dw/transfer-in/margin', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function private_post_dw_transfer_out_margin($params = array()) {
        return $this->request('dw/transfer-out/margin', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function private_post_margin_orders($params = array()) {
        return $this->request('margin/orders', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function private_post_margin_orders_id_repay($params = array()) {
        return $this->request('margin/orders/{id}/repay', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function private_post_cross_margin_transfer_in($params = array()) {
        return $this->request('cross-margin/transfer-in', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_cross_margin_transfer_out($params = array()) {
        return $this->request('cross-margin/transfer-out', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_cross_margin_orders($params = array()) {
        return $this->request('cross-margin/orders', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_cross_margin_orders_id_repay($params = array()) {
        return $this->request('cross-margin/orders/{id}/repay', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_stable_coin_exchange($params = array()) {
        return $this->request('stable-coin/exchange', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_subuser_transfer($params = array()) {
        return $this->request('subuser/transfer', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function v2PublicGetReferenceCurrencies($params = array()) {
        return $this->request('reference/currencies', 'v2Public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PublicGetMarketStatus($params = array()) {
        return $this->request('market-status', 'v2Public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAccountLedger($params = array()) {
        return $this->request('account/ledger', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAccountWithdrawQuota($params = array()) {
        return $this->request('account/withdraw/quota', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAccountWithdrawAddress($params = array()) {
        return $this->request('account/withdraw/address', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAccountDepositAddress($params = array()) {
        return $this->request('account/deposit/address', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAccountRepayment($params = array()) {
        return $this->request('account/repayment', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2PrivateGetReferenceTransactFeeRate($params = array()) {
        return $this->request('reference/transact-fee-rate', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAccountAssetValuation($params = array()) {
        return $this->request('account/asset-valuation', 'v2Private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function v2PrivateGetPointAccount($params = array()) {
        return $this->request('point/account', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2PrivateGetSubUserUserList($params = array()) {
        return $this->request('sub-user/user-list', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetSubUserUserState($params = array()) {
        return $this->request('sub-user/user-state', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetSubUserAccountList($params = array()) {
        return $this->request('sub-user/account-list', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetSubUserDepositAddress($params = array()) {
        return $this->request('sub-user/deposit-address', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetSubUserQueryDeposit($params = array()) {
        return $this->request('sub-user/query-deposit', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetUserApiKey($params = array()) {
        return $this->request('user/api-key', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetUserUid($params = array()) {
        return $this->request('user/uid', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAlgoOrdersOpening($params = array()) {
        return $this->request('algo-orders/opening', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAlgoOrdersHistory($params = array()) {
        return $this->request('algo-orders/history', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAlgoOrdersSpecific($params = array()) {
        return $this->request('algo-orders/specific', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetC2cOffers($params = array()) {
        return $this->request('c2c/offers', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetC2cOffer($params = array()) {
        return $this->request('c2c/offer', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetC2cTransactions($params = array()) {
        return $this->request('c2c/transactions', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetC2cRepayment($params = array()) {
        return $this->request('c2c/repayment', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetC2cAccount($params = array()) {
        return $this->request('c2c/account', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetEtpReference($params = array()) {
        return $this->request('etp/reference', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetEtpTransactions($params = array()) {
        return $this->request('etp/transactions', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2PrivateGetEtpTransaction($params = array()) {
        return $this->request('etp/transaction', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2PrivateGetEtpRebalance($params = array()) {
        return $this->request('etp/rebalance', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetEtpLimit($params = array()) {
        return $this->request('etp/limit', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostAccountTransfer($params = array()) {
        return $this->request('account/transfer', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostAccountRepayment($params = array()) {
        return $this->request('account/repayment', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2PrivatePostPointTransfer($params = array()) {
        return $this->request('point/transfer', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2PrivatePostSubUserManagement($params = array()) {
        return $this->request('sub-user/management', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostSubUserCreation($params = array()) {
        return $this->request('sub-user/creation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostSubUserTradableMarket($params = array()) {
        return $this->request('sub-user/tradable-market', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostSubUserTransferability($params = array()) {
        return $this->request('sub-user/transferability', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostSubUserApiKeyGeneration($params = array()) {
        return $this->request('sub-user/api-key-generation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostSubUserApiKeyModification($params = array()) {
        return $this->request('sub-user/api-key-modification', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostSubUserApiKeyDeletion($params = array()) {
        return $this->request('sub-user/api-key-deletion', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostSubUserDeductMode($params = array()) {
        return $this->request('sub-user/deduct-mode', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostAlgoOrders($params = array()) {
        return $this->request('algo-orders', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostAlgoOrdersCancelAllAfter($params = array()) {
        return $this->request('algo-orders/cancel-all-after', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostAlgoOrdersCancellation($params = array()) {
        return $this->request('algo-orders/cancellation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostC2cOffer($params = array()) {
        return $this->request('c2c/offer', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostC2cCancellation($params = array()) {
        return $this->request('c2c/cancellation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostC2cCancelAll($params = array()) {
        return $this->request('c2c/cancel-all', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostC2cRepayment($params = array()) {
        return $this->request('c2c/repayment', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostC2cTransfer($params = array()) {
        return $this->request('c2c/transfer', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostEtpCreation($params = array()) {
        return $this->request('etp/creation', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2PrivatePostEtpRedemption($params = array()) {
        return $this->request('etp/redemption', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2PrivatePostEtpTransactIdCancel($params = array()) {
        return $this->request('etp/{transactId}/cancel', 'v2Private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function v2PrivatePostEtpBatchCancel($params = array()) {
        return $this->request('etp/batch-cancel', 'v2Private', 'POST', $params, null, null, array("cost" => 50));
    }
    public function marketGetHistoryKline($params = array()) {
        return $this->request('history/kline', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function marketGetDetailMerged($params = array()) {
        return $this->request('detail/merged', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function marketGetDepth($params = array()) {
        return $this->request('depth', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function marketGetTrade($params = array()) {
        return $this->request('trade', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function marketGetHistoryTrade($params = array()) {
        return $this->request('history/trade', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function marketGetDetail($params = array()) {
        return $this->request('detail', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function marketGetTickers($params = array()) {
        return $this->request('tickers', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function marketGetEtp($params = array()) {
        return $this->request('etp', 'market', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetCommonSymbols($params = array()) {
        return $this->request('common/symbols', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetCommonCurrencys($params = array()) {
        return $this->request('common/currencys', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetCommonTimestamp($params = array()) {
        return $this->request('common/timestamp', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetCommonExchange($params = array()) {
        return $this->request('common/exchange', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetSettingsCurrencys($params = array()) {
        return $this->request('settings/currencys', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetAccountAccounts($params = array()) {
        return $this->request('account/accounts', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function privateGetAccountAccountsIdBalance($params = array()) {
        return $this->request('account/accounts/{id}/balance', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function privateGetAccountAccountsSubUid($params = array()) {
        return $this->request('account/accounts/{sub-uid}', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetAccountHistory($params = array()) {
        return $this->request('account/history', 'private', 'GET', $params, null, null, array("cost" => 4));
    }
    public function privateGetCrossMarginLoanInfo($params = array()) {
        return $this->request('cross-margin/loan-info', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetMarginLoanInfo($params = array()) {
        return $this->request('margin/loan-info', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetFeeFeeRateGet($params = array()) {
        return $this->request('fee/fee-rate/get', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetOrderOpenOrders($params = array()) {
        return $this->request('order/openOrders', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function privateGetOrderOrders($params = array()) {
        return $this->request('order/orders', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function privateGetOrderOrdersId($params = array()) {
        return $this->request('order/orders/{id}', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function privateGetOrderOrdersIdMatchresults($params = array()) {
        return $this->request('order/orders/{id}/matchresults', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function privateGetOrderOrdersGetClientOrder($params = array()) {
        return $this->request('order/orders/getClientOrder', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function privateGetOrderHistory($params = array()) {
        return $this->request('order/history', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetOrderMatchresults($params = array()) {
        return $this->request('order/matchresults', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetQueryDepositWithdraw($params = array()) {
        return $this->request('query/deposit-withdraw', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetMarginLoanOrders($params = array()) {
        return $this->request('margin/loan-orders', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function privateGetMarginAccountsBalance($params = array()) {
        return $this->request('margin/accounts/balance', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function privateGetCrossMarginLoanOrders($params = array()) {
        return $this->request('cross-margin/loan-orders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetCrossMarginAccountsBalance($params = array()) {
        return $this->request('cross-margin/accounts/balance', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetPointsActions($params = array()) {
        return $this->request('points/actions', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetPointsOrders($params = array()) {
        return $this->request('points/orders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetSubuserAggregateBalance($params = array()) {
        return $this->request('subuser/aggregate-balance', 'private', 'GET', $params, null, null, array("cost" => 10));
    }
    public function privateGetStableCoinExchangeRate($params = array()) {
        return $this->request('stable-coin/exchange_rate', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetStableCoinQuote($params = array()) {
        return $this->request('stable-coin/quote', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privatePostAccountTransfer($params = array()) {
        return $this->request('account/transfer', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostFuturesTransfer($params = array()) {
        return $this->request('futures/transfer', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostOrderBatchOrders($params = array()) {
        return $this->request('order/batch-orders', 'private', 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function privatePostOrderOrdersPlace($params = array()) {
        return $this->request('order/orders/place', 'private', 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function privatePostOrderOrdersSubmitCancelClientOrder($params = array()) {
        return $this->request('order/orders/submitCancelClientOrder', 'private', 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function privatePostOrderOrdersBatchCancelOpenOrders($params = array()) {
        return $this->request('order/orders/batchCancelOpenOrders', 'private', 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function privatePostOrderOrdersIdSubmitcancel($params = array()) {
        return $this->request('order/orders/{id}/submitcancel', 'private', 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function privatePostOrderOrdersBatchcancel($params = array()) {
        return $this->request('order/orders/batchcancel', 'private', 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function privatePostDwWithdrawApiCreate($params = array()) {
        return $this->request('dw/withdraw/api/create', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostDwWithdrawVirtualIdCancel($params = array()) {
        return $this->request('dw/withdraw-virtual/{id}/cancel', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostDwTransferInMargin($params = array()) {
        return $this->request('dw/transfer-in/margin', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function privatePostDwTransferOutMargin($params = array()) {
        return $this->request('dw/transfer-out/margin', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function privatePostMarginOrders($params = array()) {
        return $this->request('margin/orders', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function privatePostMarginOrdersIdRepay($params = array()) {
        return $this->request('margin/orders/{id}/repay', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function privatePostCrossMarginTransferIn($params = array()) {
        return $this->request('cross-margin/transfer-in', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostCrossMarginTransferOut($params = array()) {
        return $this->request('cross-margin/transfer-out', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostCrossMarginOrders($params = array()) {
        return $this->request('cross-margin/orders', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostCrossMarginOrdersIdRepay($params = array()) {
        return $this->request('cross-margin/orders/{id}/repay', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostStableCoinExchange($params = array()) {
        return $this->request('stable-coin/exchange', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostSubuserTransfer($params = array()) {
        return $this->request('subuser/transfer', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
}
