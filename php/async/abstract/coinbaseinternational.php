<?php

namespace ccxt\async\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class coinbaseinternational extends \ccxt\async\Exchange {
    public function v1_public_get_assets($params = array()) {
        return $this->request('assets', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1_public_get_assets_assets($params = array()) {
        return $this->request('assets/{assets}', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1_public_get_assets_asset_networks($params = array()) {
        return $this->request('assets/{asset}/networks', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1_public_get_instruments($params = array()) {
        return $this->request('instruments', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1_public_get_instruments_instrument($params = array()) {
        return $this->request('instruments/{instrument}', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1_public_get_instruments_instrument_quote($params = array()) {
        return $this->request('instruments/{instrument}/quote', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1_public_get_instruments_instrument_funding($params = array()) {
        return $this->request('instruments/{instrument}/funding', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1_public_get($params = array()) {
        return $this->request('', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1_private_get_orders($params = array()) {
        return $this->request('orders', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1_private_get_orders_id($params = array()) {
        return $this->request('orders/{id}', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1_private_get_portfolios($params = array()) {
        return $this->request('portfolios', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1_private_get_portfolios_portfolio($params = array()) {
        return $this->request('portfolios/{portfolio}', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1_private_get_portfolios_portfolio_detail($params = array()) {
        return $this->request('portfolios/{portfolio}/detail', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1_private_get_portfolios_portfolio_summary($params = array()) {
        return $this->request('portfolios/{portfolio}/summary', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1_private_get_portfolios_portfolio_balances($params = array()) {
        return $this->request('portfolios/{portfolio}/balances', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1_private_get_portfolios_portfolio_balances_asset($params = array()) {
        return $this->request('portfolios/{portfolio}/balances/{asset}', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1_private_get_portfolios_portfolio_positions($params = array()) {
        return $this->request('portfolios/{portfolio}/positions', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1_private_get_portfolios_portfolio_positions_instrument($params = array()) {
        return $this->request('portfolios/{portfolio}/positions/{instrument}', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1_private_get_portfolios_fills($params = array()) {
        return $this->request('portfolios/fills', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1_private_get_portfolios_portfolio_fills($params = array()) {
        return $this->request('portfolios/{portfolio}/fills', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1_private_get_transfers($params = array()) {
        return $this->request('transfers', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1_private_get_transfers_transfer_uuid($params = array()) {
        return $this->request('transfers/{transfer_uuid}', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1_private_post_orders($params = array()) {
        return $this->request('orders', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1_private_post_portfolios($params = array()) {
        return $this->request('portfolios', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1_private_post_portfolios_margin($params = array()) {
        return $this->request('portfolios/margin', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1_private_post_portfolios_transfer($params = array()) {
        return $this->request('portfolios/transfer', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1_private_post_transfers_withdraw($params = array()) {
        return $this->request('transfers/withdraw', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1_private_post_transfers_address($params = array()) {
        return $this->request('transfers/address', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1_private_post_transfers_create_counterparty_id($params = array()) {
        return $this->request('transfers/create-counterparty-id', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1_private_post_transfers_validate_counterparty_id($params = array()) {
        return $this->request('transfers/validate-counterparty-id', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1_private_post_transfers_withdraw_counterparty($params = array()) {
        return $this->request('transfers/withdraw/counterparty', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1_private_put_orders_id($params = array()) {
        return $this->request('orders/{id}', array('v1', 'private'), 'PUT', $params, null, null, array());
    }
    public function v1_private_put_portfolios_portfolio($params = array()) {
        return $this->request('portfolios/{portfolio}', array('v1', 'private'), 'PUT', $params, null, null, array());
    }
    public function v1_private_delete_orders($params = array()) {
        return $this->request('orders', array('v1', 'private'), 'DELETE', $params, null, null, array());
    }
    public function v1_private_delete_orders_id($params = array()) {
        return $this->request('orders/{id}', array('v1', 'private'), 'DELETE', $params, null, null, array());
    }
    public function v1PublicGetAssets($params = array()) {
        return $this->request('assets', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1PublicGetAssetsAssets($params = array()) {
        return $this->request('assets/{assets}', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1PublicGetAssetsAssetNetworks($params = array()) {
        return $this->request('assets/{asset}/networks', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1PublicGetInstruments($params = array()) {
        return $this->request('instruments', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1PublicGetInstrumentsInstrument($params = array()) {
        return $this->request('instruments/{instrument}', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1PublicGetInstrumentsInstrumentQuote($params = array()) {
        return $this->request('instruments/{instrument}/quote', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1PublicGetInstrumentsInstrumentFunding($params = array()) {
        return $this->request('instruments/{instrument}/funding', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1PublicGet($params = array()) {
        return $this->request('', array('v1', 'public'), 'GET', $params, null, null, array());
    }
    public function v1PrivateGetOrders($params = array()) {
        return $this->request('orders', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1PrivateGetOrdersId($params = array()) {
        return $this->request('orders/{id}', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1PrivateGetPortfolios($params = array()) {
        return $this->request('portfolios', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1PrivateGetPortfoliosPortfolio($params = array()) {
        return $this->request('portfolios/{portfolio}', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1PrivateGetPortfoliosPortfolioDetail($params = array()) {
        return $this->request('portfolios/{portfolio}/detail', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1PrivateGetPortfoliosPortfolioSummary($params = array()) {
        return $this->request('portfolios/{portfolio}/summary', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1PrivateGetPortfoliosPortfolioBalances($params = array()) {
        return $this->request('portfolios/{portfolio}/balances', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1PrivateGetPortfoliosPortfolioBalancesAsset($params = array()) {
        return $this->request('portfolios/{portfolio}/balances/{asset}', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1PrivateGetPortfoliosPortfolioPositions($params = array()) {
        return $this->request('portfolios/{portfolio}/positions', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1PrivateGetPortfoliosPortfolioPositionsInstrument($params = array()) {
        return $this->request('portfolios/{portfolio}/positions/{instrument}', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1PrivateGetPortfoliosFills($params = array()) {
        return $this->request('portfolios/fills', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1PrivateGetPortfoliosPortfolioFills($params = array()) {
        return $this->request('portfolios/{portfolio}/fills', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1PrivateGetTransfers($params = array()) {
        return $this->request('transfers', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1PrivateGetTransfersTransferUuid($params = array()) {
        return $this->request('transfers/{transfer_uuid}', array('v1', 'private'), 'GET', $params, null, null, array());
    }
    public function v1PrivatePostOrders($params = array()) {
        return $this->request('orders', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1PrivatePostPortfolios($params = array()) {
        return $this->request('portfolios', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1PrivatePostPortfoliosMargin($params = array()) {
        return $this->request('portfolios/margin', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1PrivatePostPortfoliosTransfer($params = array()) {
        return $this->request('portfolios/transfer', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1PrivatePostTransfersWithdraw($params = array()) {
        return $this->request('transfers/withdraw', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1PrivatePostTransfersAddress($params = array()) {
        return $this->request('transfers/address', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1PrivatePostTransfersCreateCounterpartyId($params = array()) {
        return $this->request('transfers/create-counterparty-id', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1PrivatePostTransfersValidateCounterpartyId($params = array()) {
        return $this->request('transfers/validate-counterparty-id', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1PrivatePostTransfersWithdrawCounterparty($params = array()) {
        return $this->request('transfers/withdraw/counterparty', array('v1', 'private'), 'POST', $params, null, null, array());
    }
    public function v1PrivatePutOrdersId($params = array()) {
        return $this->request('orders/{id}', array('v1', 'private'), 'PUT', $params, null, null, array());
    }
    public function v1PrivatePutPortfoliosPortfolio($params = array()) {
        return $this->request('portfolios/{portfolio}', array('v1', 'private'), 'PUT', $params, null, null, array());
    }
    public function v1PrivateDeleteOrders($params = array()) {
        return $this->request('orders', array('v1', 'private'), 'DELETE', $params, null, null, array());
    }
    public function v1PrivateDeleteOrdersId($params = array()) {
        return $this->request('orders/{id}', array('v1', 'private'), 'DELETE', $params, null, null, array());
    }
}
