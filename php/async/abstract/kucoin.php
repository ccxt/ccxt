<?php

namespace ccxt\async\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class kucoin extends \ccxt\async\Exchange {
    public function public_get_currencies($params = array()) {
        return $this->request('currencies', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function public_get_currencies_currency($params = array()) {
        return $this->request('currencies/{currency}', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function public_get_symbols($params = array()) {
        return $this->request('symbols', 'public', 'GET', $params, null, null, array("cost" => 6));
    }
    public function public_get_market_orderbook_level1($params = array()) {
        return $this->request('market/orderbook/level1', 'public', 'GET', $params, null, null, array("cost" => 3));
    }
    public function public_get_market_alltickers($params = array()) {
        return $this->request('market/allTickers', 'public', 'GET', $params, null, null, array("cost" => 22.5));
    }
    public function public_get_market_stats($params = array()) {
        return $this->request('market/stats', 'public', 'GET', $params, null, null, array("cost" => 22.5));
    }
    public function public_get_markets($params = array()) {
        return $this->request('markets', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function public_get_market_orderbook_level_level_limit($params = array()) {
        return $this->request('market/orderbook/level{level}_{limit}', 'public', 'GET', $params, null, null, array("cost" => 6));
    }
    public function public_get_market_orderbook_level2_20($params = array()) {
        return $this->request('market/orderbook/level2_20', 'public', 'GET', $params, null, null, array("cost" => 3));
    }
    public function public_get_market_orderbook_level2_100($params = array()) {
        return $this->request('market/orderbook/level2_100', 'public', 'GET', $params, null, null, array("cost" => 6));
    }
    public function public_get_market_histories($params = array()) {
        return $this->request('market/histories', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function public_get_market_candles($params = array()) {
        return $this->request('market/candles', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function public_get_prices($params = array()) {
        return $this->request('prices', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function public_get_timestamp($params = array()) {
        return $this->request('timestamp', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function public_get_status($params = array()) {
        return $this->request('status', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function public_get_mark_price_symbol_current($params = array()) {
        return $this->request('mark-price/{symbol}/current', 'public', 'GET', $params, null, null, array("cost" => 3));
    }
    public function public_get_margin_config($params = array()) {
        return $this->request('margin/config', 'public', 'GET', $params, null, null, array("cost" => 25));
    }
    public function public_post_bullet_public($params = array()) {
        return $this->request('bullet-public', 'public', 'POST', $params, null, null, array("cost" => 15));
    }
    public function private_get_user_info($params = array()) {
        return $this->request('user-info', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function private_get_accounts($params = array()) {
        return $this->request('accounts', 'private', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function private_get_accounts_accountid($params = array()) {
        return $this->request('accounts/{accountId}', 'private', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function private_get_accounts_ledgers($params = array()) {
        return $this->request('accounts/ledgers', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function private_get_hf_accounts_ledgers($params = array()) {
        return $this->request('hf/accounts/ledgers', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_hf_margin_account_ledgers($params = array()) {
        return $this->request('hf/margin/account/ledgers', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_transaction_history($params = array()) {
        return $this->request('transaction-history', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function private_get_sub_user($params = array()) {
        return $this->request('sub/user', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function private_get_sub_accounts_subuserid($params = array()) {
        return $this->request('sub-accounts/{subUserId}', 'private', 'GET', $params, null, null, array("cost" => 22.5));
    }
    public function private_get_sub_accounts($params = array()) {
        return $this->request('sub-accounts', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function private_get_sub_api_key($params = array()) {
        return $this->request('sub/api-key', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function private_get_margin_account($params = array()) {
        return $this->request('margin/account', 'private', 'GET', $params, null, null, array("cost" => 40));
    }
    public function private_get_margin_accounts($params = array()) {
        return $this->request('margin/accounts', 'private', 'GET', $params, null, null, array("cost" => 15));
    }
    public function private_get_isolated_accounts($params = array()) {
        return $this->request('isolated/accounts', 'private', 'GET', $params, null, null, array("cost" => 15));
    }
    public function private_get_deposit_addresses($params = array()) {
        return $this->request('deposit-addresses', 'private', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function private_get_deposits($params = array()) {
        return $this->request('deposits', 'private', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function private_get_hist_deposits($params = array()) {
        return $this->request('hist-deposits', 'private', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function private_get_withdrawals($params = array()) {
        return $this->request('withdrawals', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function private_get_hist_withdrawals($params = array()) {
        return $this->request('hist-withdrawals', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function private_get_withdrawals_quotas($params = array()) {
        return $this->request('withdrawals/quotas', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function private_get_accounts_transferable($params = array()) {
        return $this->request('accounts/transferable', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function private_get_transfer_list($params = array()) {
        return $this->request('transfer-list', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function private_get_base_fee($params = array()) {
        return $this->request('base-fee', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function private_get_trade_fees($params = array()) {
        return $this->request('trade-fees', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function private_get_market_orderbook_level_level($params = array()) {
        return $this->request('market/orderbook/level{level}', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function private_get_market_orderbook_level2($params = array()) {
        return $this->request('market/orderbook/level2', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function private_get_market_orderbook_level3($params = array()) {
        return $this->request('market/orderbook/level3', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function private_get_hf_orders_active($params = array()) {
        return $this->request('hf/orders/active', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_hf_orders_active_symbols($params = array()) {
        return $this->request('hf/orders/active/symbols', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_hf_orders_done($params = array()) {
        return $this->request('hf/orders/done', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_hf_orders_orderid($params = array()) {
        return $this->request('hf/orders/{orderId}', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_hf_orders_client_order_clientoid($params = array()) {
        return $this->request('hf/orders/client-order/{clientOid}', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_hf_orders_dead_cancel_all_query($params = array()) {
        return $this->request('hf/orders/dead-cancel-all/query', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_hf_fills($params = array()) {
        return $this->request('hf/fills', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_orders($params = array()) {
        return $this->request('orders', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_limit_orders($params = array()) {
        return $this->request('limit/orders', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function private_get_orders_orderid($params = array()) {
        return $this->request('orders/{orderId}', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_order_client_order_clientoid($params = array()) {
        return $this->request('order/client-order/{clientOid}', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function private_get_fills($params = array()) {
        return $this->request('fills', 'private', 'GET', $params, null, null, array("cost" => 10));
    }
    public function private_get_limit_fills($params = array()) {
        return $this->request('limit/fills', 'private', 'GET', $params, null, null, array("cost" => 20));
    }
    public function private_get_stop_order($params = array()) {
        return $this->request('stop-order', 'private', 'GET', $params, null, null, array("cost" => 8));
    }
    public function private_get_stop_order_orderid($params = array()) {
        return $this->request('stop-order/{orderId}', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function private_get_stop_order_queryorderbyclientoid($params = array()) {
        return $this->request('stop-order/queryOrderByClientOid', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function private_get_oco_order_orderid($params = array()) {
        return $this->request('oco/order/{orderId}', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_oco_order_details_orderid($params = array()) {
        return $this->request('oco/order/details/{orderId}', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_oco_client_order_clientoid($params = array()) {
        return $this->request('oco/client-order/{clientOid}', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_oco_orders($params = array()) {
        return $this->request('oco/orders', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function private_get_hf_margin_orders_active($params = array()) {
        return $this->request('hf/margin/orders/active', 'private', 'GET', $params, null, null, array("cost" => 4));
    }
    public function private_get_hf_margin_orders_done($params = array()) {
        return $this->request('hf/margin/orders/done', 'private', 'GET', $params, null, null, array("cost" => 10));
    }
    public function private_get_hf_margin_orders_orderid($params = array()) {
        return $this->request('hf/margin/orders/{orderId}', 'private', 'GET', $params, null, null, array("cost" => 4));
    }
    public function private_get_hf_margin_orders_client_order_clientoid($params = array()) {
        return $this->request('hf/margin/orders/client-order/{clientOid}', 'private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function private_get_hf_margin_fills($params = array()) {
        return $this->request('hf/margin/fills', 'private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function private_get_etf_info($params = array()) {
        return $this->request('etf/info', 'private', 'GET', $params, null, null, array("cost" => 25));
    }
    public function private_get_margin_currencies($params = array()) {
        return $this->request('margin/currencies', 'private', 'GET', $params, null, null, array("cost" => 20));
    }
    public function private_get_risk_limit_strategy($params = array()) {
        return $this->request('risk/limit/strategy', 'private', 'GET', $params, null, null, array("cost" => 20));
    }
    public function private_get_isolated_symbols($params = array()) {
        return $this->request('isolated/symbols', 'private', 'GET', $params, null, null, array("cost" => 20));
    }
    public function private_get_isolated_account_symbol($params = array()) {
        return $this->request('isolated/account/{symbol}', 'private', 'GET', $params, null, null, array("cost" => 50));
    }
    public function private_get_margin_borrow($params = array()) {
        return $this->request('margin/borrow', 'private', 'GET', $params, null, null, array("cost" => 15));
    }
    public function private_get_margin_repay($params = array()) {
        return $this->request('margin/repay', 'private', 'GET', $params, null, null, array("cost" => 15));
    }
    public function private_get_project_list($params = array()) {
        return $this->request('project/list', 'private', 'GET', $params, null, null, array("cost" => 10));
    }
    public function private_get_project_marketinterestrate($params = array()) {
        return $this->request('project/marketInterestRate', 'private', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function private_get_redeem_orders($params = array()) {
        return $this->request('redeem/orders', 'private', 'GET', $params, null, null, array("cost" => 10));
    }
    public function private_get_purchase_orders($params = array()) {
        return $this->request('purchase/orders', 'private', 'GET', $params, null, null, array("cost" => 10));
    }
    public function private_post_sub_user_created($params = array()) {
        return $this->request('sub/user/created', 'private', 'POST', $params, null, null, array("cost" => 22.5));
    }
    public function private_post_sub_api_key($params = array()) {
        return $this->request('sub/api-key', 'private', 'POST', $params, null, null, array("cost" => 30));
    }
    public function private_post_sub_api_key_update($params = array()) {
        return $this->request('sub/api-key/update', 'private', 'POST', $params, null, null, array("cost" => 45));
    }
    public function private_post_deposit_addresses($params = array()) {
        return $this->request('deposit-addresses', 'private', 'POST', $params, null, null, array("cost" => 30));
    }
    public function private_post_withdrawals($params = array()) {
        return $this->request('withdrawals', 'private', 'POST', $params, null, null, array("cost" => 7.5));
    }
    public function private_post_accounts_universal_transfer($params = array()) {
        return $this->request('accounts/universal-transfer', 'private', 'POST', $params, null, null, array("cost" => 6));
    }
    public function private_post_accounts_sub_transfer($params = array()) {
        return $this->request('accounts/sub-transfer', 'private', 'POST', $params, null, null, array("cost" => 45));
    }
    public function private_post_accounts_inner_transfer($params = array()) {
        return $this->request('accounts/inner-transfer', 'private', 'POST', $params, null, null, array("cost" => 15));
    }
    public function private_post_transfer_out($params = array()) {
        return $this->request('transfer-out', 'private', 'POST', $params, null, null, array("cost" => 30));
    }
    public function private_post_transfer_in($params = array()) {
        return $this->request('transfer-in', 'private', 'POST', $params, null, null, array("cost" => 30));
    }
    public function private_post_hf_orders($params = array()) {
        return $this->request('hf/orders', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_hf_orders_test($params = array()) {
        return $this->request('hf/orders/test', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_hf_orders_sync($params = array()) {
        return $this->request('hf/orders/sync', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_hf_orders_multi($params = array()) {
        return $this->request('hf/orders/multi', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_hf_orders_multi_sync($params = array()) {
        return $this->request('hf/orders/multi/sync', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_hf_orders_alter($params = array()) {
        return $this->request('hf/orders/alter', 'private', 'POST', $params, null, null, array("cost" => 3));
    }
    public function private_post_hf_orders_dead_cancel_all($params = array()) {
        return $this->request('hf/orders/dead-cancel-all', 'private', 'POST', $params, null, null, array("cost" => 2));
    }
    public function private_post_orders($params = array()) {
        return $this->request('orders', 'private', 'POST', $params, null, null, array("cost" => 2));
    }
    public function private_post_orders_test($params = array()) {
        return $this->request('orders/test', 'private', 'POST', $params, null, null, array("cost" => 2));
    }
    public function private_post_orders_multi($params = array()) {
        return $this->request('orders/multi', 'private', 'POST', $params, null, null, array("cost" => 3));
    }
    public function private_post_stop_order($params = array()) {
        return $this->request('stop-order', 'private', 'POST', $params, null, null, array("cost" => 2));
    }
    public function private_post_oco_order($params = array()) {
        return $this->request('oco/order', 'private', 'POST', $params, null, null, array("cost" => 2));
    }
    public function private_post_hf_margin_order($params = array()) {
        return $this->request('hf/margin/order', 'private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function private_post_hf_margin_order_test($params = array()) {
        return $this->request('hf/margin/order/test', 'private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function private_post_margin_order($params = array()) {
        return $this->request('margin/order', 'private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function private_post_margin_order_test($params = array()) {
        return $this->request('margin/order/test', 'private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function private_post_margin_borrow($params = array()) {
        return $this->request('margin/borrow', 'private', 'POST', $params, null, null, array("cost" => 15));
    }
    public function private_post_margin_repay($params = array()) {
        return $this->request('margin/repay', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function private_post_purchase($params = array()) {
        return $this->request('purchase', 'private', 'POST', $params, null, null, array("cost" => 15));
    }
    public function private_post_redeem($params = array()) {
        return $this->request('redeem', 'private', 'POST', $params, null, null, array("cost" => 15));
    }
    public function private_post_lend_purchase_update($params = array()) {
        return $this->request('lend/purchase/update', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function private_post_bullet_private($params = array()) {
        return $this->request('bullet-private', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function private_delete_sub_api_key($params = array()) {
        return $this->request('sub/api-key', 'private', 'DELETE', $params, null, null, array("cost" => 45));
    }
    public function private_delete_withdrawals_withdrawalid($params = array()) {
        return $this->request('withdrawals/{withdrawalId}', 'private', 'DELETE', $params, null, null, array("cost" => 30));
    }
    public function private_delete_hf_orders_orderid($params = array()) {
        return $this->request('hf/orders/{orderId}', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function private_delete_hf_orders_sync_orderid($params = array()) {
        return $this->request('hf/orders/sync/{orderId}', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function private_delete_hf_orders_client_order_clientoid($params = array()) {
        return $this->request('hf/orders/client-order/{clientOid}', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function private_delete_hf_orders_sync_client_order_clientoid($params = array()) {
        return $this->request('hf/orders/sync/client-order/{clientOid}', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function private_delete_hf_orders_cancel_orderid($params = array()) {
        return $this->request('hf/orders/cancel/{orderId}', 'private', 'DELETE', $params, null, null, array("cost" => 2));
    }
    public function private_delete_hf_orders($params = array()) {
        return $this->request('hf/orders', 'private', 'DELETE', $params, null, null, array("cost" => 2));
    }
    public function private_delete_hf_orders_cancelall($params = array()) {
        return $this->request('hf/orders/cancelAll', 'private', 'DELETE', $params, null, null, array("cost" => 30));
    }
    public function private_delete_orders_orderid($params = array()) {
        return $this->request('orders/{orderId}', 'private', 'DELETE', $params, null, null, array("cost" => 3));
    }
    public function private_delete_order_client_order_clientoid($params = array()) {
        return $this->request('order/client-order/{clientOid}', 'private', 'DELETE', $params, null, null, array("cost" => 5));
    }
    public function private_delete_orders($params = array()) {
        return $this->request('orders', 'private', 'DELETE', $params, null, null, array("cost" => 20));
    }
    public function private_delete_stop_order_orderid($params = array()) {
        return $this->request('stop-order/{orderId}', 'private', 'DELETE', $params, null, null, array("cost" => 3));
    }
    public function private_delete_stop_order_cancelorderbyclientoid($params = array()) {
        return $this->request('stop-order/cancelOrderByClientOid', 'private', 'DELETE', $params, null, null, array("cost" => 5));
    }
    public function private_delete_stop_order_cancel($params = array()) {
        return $this->request('stop-order/cancel', 'private', 'DELETE', $params, null, null, array("cost" => 3));
    }
    public function private_delete_oco_order_orderid($params = array()) {
        return $this->request('oco/order/{orderId}', 'private', 'DELETE', $params, null, null, array("cost" => 3));
    }
    public function private_delete_oco_client_order_clientoid($params = array()) {
        return $this->request('oco/client-order/{clientOid}', 'private', 'DELETE', $params, null, null, array("cost" => 3));
    }
    public function private_delete_oco_orders($params = array()) {
        return $this->request('oco/orders', 'private', 'DELETE', $params, null, null, array("cost" => 3));
    }
    public function private_delete_hf_margin_orders_orderid($params = array()) {
        return $this->request('hf/margin/orders/{orderId}', 'private', 'DELETE', $params, null, null, array("cost" => 5));
    }
    public function private_delete_hf_margin_orders_client_order_clientoid($params = array()) {
        return $this->request('hf/margin/orders/client-order/{clientOid}', 'private', 'DELETE', $params, null, null, array("cost" => 5));
    }
    public function private_delete_hf_margin_orders($params = array()) {
        return $this->request('hf/margin/orders', 'private', 'DELETE', $params, null, null, array("cost" => 10));
    }
    public function futurespublic_get_contracts_active($params = array()) {
        return $this->request('contracts/active', 'futuresPublic', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futurespublic_get_contracts_symbol($params = array()) {
        return $this->request('contracts/{symbol}', 'futuresPublic', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futurespublic_get_ticker($params = array()) {
        return $this->request('ticker', 'futuresPublic', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futurespublic_get_level2_snapshot($params = array()) {
        return $this->request('level2/snapshot', 'futuresPublic', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futurespublic_get_level2_depth20($params = array()) {
        return $this->request('level2/depth20', 'futuresPublic', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futurespublic_get_level2_depth100($params = array()) {
        return $this->request('level2/depth100', 'futuresPublic', 'GET', $params, null, null, array("cost" => 15));
    }
    public function futurespublic_get_trade_history($params = array()) {
        return $this->request('trade/history', 'futuresPublic', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futurespublic_get_kline_query($params = array()) {
        return $this->request('kline/query', 'futuresPublic', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futurespublic_get_interest_query($params = array()) {
        return $this->request('interest/query', 'futuresPublic', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futurespublic_get_index_query($params = array()) {
        return $this->request('index/query', 'futuresPublic', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futurespublic_get_mark_price_symbol_current($params = array()) {
        return $this->request('mark-price/{symbol}/current', 'futuresPublic', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futurespublic_get_premium_query($params = array()) {
        return $this->request('premium/query', 'futuresPublic', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futurespublic_get_trade_statistics($params = array()) {
        return $this->request('trade-statistics', 'futuresPublic', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futurespublic_get_funding_rate_symbol_current($params = array()) {
        return $this->request('funding-rate/{symbol}/current', 'futuresPublic', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futurespublic_get_contract_funding_rates($params = array()) {
        return $this->request('contract/funding-rates', 'futuresPublic', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futurespublic_get_timestamp($params = array()) {
        return $this->request('timestamp', 'futuresPublic', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futurespublic_get_status($params = array()) {
        return $this->request('status', 'futuresPublic', 'GET', $params, null, null, array("cost" => 6));
    }
    public function futurespublic_get_level2_message_query($params = array()) {
        return $this->request('level2/message/query', 'futuresPublic', 'GET', $params, null, null, array("cost" => 1.3953));
    }
    public function futurespublic_post_bullet_public($params = array()) {
        return $this->request('bullet-public', 'futuresPublic', 'POST', $params, null, null, array("cost" => 15));
    }
    public function futuresprivate_get_transaction_history($params = array()) {
        return $this->request('transaction-history', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futuresprivate_get_account_overview($params = array()) {
        return $this->request('account-overview', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresprivate_get_account_overview_all($params = array()) {
        return $this->request('account-overview-all', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 9));
    }
    public function futuresprivate_get_transfer_list($params = array()) {
        return $this->request('transfer-list', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 30));
    }
    public function futuresprivate_get_orders($params = array()) {
        return $this->request('orders', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futuresprivate_get_stoporders($params = array()) {
        return $this->request('stopOrders', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 9));
    }
    public function futuresprivate_get_recentdoneorders($params = array()) {
        return $this->request('recentDoneOrders', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresprivate_get_orders_orderid($params = array()) {
        return $this->request('orders/{orderId}', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresprivate_get_orders_byclientoid($params = array()) {
        return $this->request('orders/byClientOid', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresprivate_get_fills($params = array()) {
        return $this->request('fills', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresprivate_get_recentfills($params = array()) {
        return $this->request('recentFills', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futuresprivate_get_openorderstatistics($params = array()) {
        return $this->request('openOrderStatistics', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 15));
    }
    public function futuresprivate_get_position($params = array()) {
        return $this->request('position', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futuresprivate_get_positions($params = array()) {
        return $this->request('positions', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futuresprivate_get_margin_maxwithdrawmargin($params = array()) {
        return $this->request('margin/maxWithdrawMargin', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 15));
    }
    public function futuresprivate_get_contracts_risk_limit_symbol($params = array()) {
        return $this->request('contracts/risk-limit/{symbol}', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresprivate_get_funding_history($params = array()) {
        return $this->request('funding-history', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresprivate_post_transfer_out($params = array()) {
        return $this->request('transfer-out', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 30));
    }
    public function futuresprivate_post_transfer_in($params = array()) {
        return $this->request('transfer-in', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 30));
    }
    public function futuresprivate_post_orders($params = array()) {
        return $this->request('orders', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 3));
    }
    public function futuresprivate_post_orders_test($params = array()) {
        return $this->request('orders/test', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 3));
    }
    public function futuresprivate_post_orders_multi($params = array()) {
        return $this->request('orders/multi', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 4.5));
    }
    public function futuresprivate_post_position_margin_auto_deposit_status($params = array()) {
        return $this->request('position/margin/auto-deposit-status', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 6));
    }
    public function futuresprivate_post_margin_withdrawmargin($params = array()) {
        return $this->request('margin/withdrawMargin', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 15));
    }
    public function futuresprivate_post_position_margin_deposit_margin($params = array()) {
        return $this->request('position/margin/deposit-margin', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 6));
    }
    public function futuresprivate_post_position_risk_limit_level_change($params = array()) {
        return $this->request('position/risk-limit-level/change', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 6));
    }
    public function futuresprivate_post_bullet_private($params = array()) {
        return $this->request('bullet-private', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 15));
    }
    public function futuresprivate_delete_orders_orderid($params = array()) {
        return $this->request('orders/{orderId}', 'futuresPrivate', 'DELETE', $params, null, null, array("cost" => 1.5));
    }
    public function futuresprivate_delete_orders_client_order_clientoid($params = array()) {
        return $this->request('orders/client-order/{clientOid}', 'futuresPrivate', 'DELETE', $params, null, null, array("cost" => 1.5));
    }
    public function futuresprivate_delete_orders($params = array()) {
        return $this->request('orders', 'futuresPrivate', 'DELETE', $params, null, null, array("cost" => 45));
    }
    public function futuresprivate_delete_stoporders($params = array()) {
        return $this->request('stopOrders', 'futuresPrivate', 'DELETE', $params, null, null, array("cost" => 22.5));
    }
    public function webexchange_get_currency_currency_chain_info($params = array()) {
        return $this->request('currency/currency/chain-info', 'webExchange', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetCurrencies($params = array()) {
        return $this->request('currencies', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function publicGetCurrenciesCurrency($params = array()) {
        return $this->request('currencies/{currency}', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function publicGetSymbols($params = array()) {
        return $this->request('symbols', 'public', 'GET', $params, null, null, array("cost" => 6));
    }
    public function publicGetMarketOrderbookLevel1($params = array()) {
        return $this->request('market/orderbook/level1', 'public', 'GET', $params, null, null, array("cost" => 3));
    }
    public function publicGetMarketAllTickers($params = array()) {
        return $this->request('market/allTickers', 'public', 'GET', $params, null, null, array("cost" => 22.5));
    }
    public function publicGetMarketStats($params = array()) {
        return $this->request('market/stats', 'public', 'GET', $params, null, null, array("cost" => 22.5));
    }
    public function publicGetMarkets($params = array()) {
        return $this->request('markets', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function publicGetMarketOrderbookLevelLevelLimit($params = array()) {
        return $this->request('market/orderbook/level{level}_{limit}', 'public', 'GET', $params, null, null, array("cost" => 6));
    }
    public function publicGetMarketOrderbookLevel220($params = array()) {
        return $this->request('market/orderbook/level2_20', 'public', 'GET', $params, null, null, array("cost" => 3));
    }
    public function publicGetMarketOrderbookLevel2100($params = array()) {
        return $this->request('market/orderbook/level2_100', 'public', 'GET', $params, null, null, array("cost" => 6));
    }
    public function publicGetMarketHistories($params = array()) {
        return $this->request('market/histories', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function publicGetMarketCandles($params = array()) {
        return $this->request('market/candles', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function publicGetPrices($params = array()) {
        return $this->request('prices', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function publicGetTimestamp($params = array()) {
        return $this->request('timestamp', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function publicGetStatus($params = array()) {
        return $this->request('status', 'public', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function publicGetMarkPriceSymbolCurrent($params = array()) {
        return $this->request('mark-price/{symbol}/current', 'public', 'GET', $params, null, null, array("cost" => 3));
    }
    public function publicGetMarginConfig($params = array()) {
        return $this->request('margin/config', 'public', 'GET', $params, null, null, array("cost" => 25));
    }
    public function publicPostBulletPublic($params = array()) {
        return $this->request('bullet-public', 'public', 'POST', $params, null, null, array("cost" => 15));
    }
    public function privateGetUserInfo($params = array()) {
        return $this->request('user-info', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function privateGetAccounts($params = array()) {
        return $this->request('accounts', 'private', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function privateGetAccountsAccountId($params = array()) {
        return $this->request('accounts/{accountId}', 'private', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function privateGetAccountsLedgers($params = array()) {
        return $this->request('accounts/ledgers', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function privateGetHfAccountsLedgers($params = array()) {
        return $this->request('hf/accounts/ledgers', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetHfMarginAccountLedgers($params = array()) {
        return $this->request('hf/margin/account/ledgers', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetTransactionHistory($params = array()) {
        return $this->request('transaction-history', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function privateGetSubUser($params = array()) {
        return $this->request('sub/user', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function privateGetSubAccountsSubUserId($params = array()) {
        return $this->request('sub-accounts/{subUserId}', 'private', 'GET', $params, null, null, array("cost" => 22.5));
    }
    public function privateGetSubAccounts($params = array()) {
        return $this->request('sub-accounts', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function privateGetSubApiKey($params = array()) {
        return $this->request('sub/api-key', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function privateGetMarginAccount($params = array()) {
        return $this->request('margin/account', 'private', 'GET', $params, null, null, array("cost" => 40));
    }
    public function privateGetMarginAccounts($params = array()) {
        return $this->request('margin/accounts', 'private', 'GET', $params, null, null, array("cost" => 15));
    }
    public function privateGetIsolatedAccounts($params = array()) {
        return $this->request('isolated/accounts', 'private', 'GET', $params, null, null, array("cost" => 15));
    }
    public function privateGetDepositAddresses($params = array()) {
        return $this->request('deposit-addresses', 'private', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function privateGetDeposits($params = array()) {
        return $this->request('deposits', 'private', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function privateGetHistDeposits($params = array()) {
        return $this->request('hist-deposits', 'private', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function privateGetWithdrawals($params = array()) {
        return $this->request('withdrawals', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function privateGetHistWithdrawals($params = array()) {
        return $this->request('hist-withdrawals', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function privateGetWithdrawalsQuotas($params = array()) {
        return $this->request('withdrawals/quotas', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function privateGetAccountsTransferable($params = array()) {
        return $this->request('accounts/transferable', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function privateGetTransferList($params = array()) {
        return $this->request('transfer-list', 'private', 'GET', $params, null, null, array("cost" => 30));
    }
    public function privateGetBaseFee($params = array()) {
        return $this->request('base-fee', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function privateGetTradeFees($params = array()) {
        return $this->request('trade-fees', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function privateGetMarketOrderbookLevelLevel($params = array()) {
        return $this->request('market/orderbook/level{level}', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function privateGetMarketOrderbookLevel2($params = array()) {
        return $this->request('market/orderbook/level2', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function privateGetMarketOrderbookLevel3($params = array()) {
        return $this->request('market/orderbook/level3', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function privateGetHfOrdersActive($params = array()) {
        return $this->request('hf/orders/active', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetHfOrdersActiveSymbols($params = array()) {
        return $this->request('hf/orders/active/symbols', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetHfOrdersDone($params = array()) {
        return $this->request('hf/orders/done', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetHfOrdersOrderId($params = array()) {
        return $this->request('hf/orders/{orderId}', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetHfOrdersClientOrderClientOid($params = array()) {
        return $this->request('hf/orders/client-order/{clientOid}', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetHfOrdersDeadCancelAllQuery($params = array()) {
        return $this->request('hf/orders/dead-cancel-all/query', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetHfFills($params = array()) {
        return $this->request('hf/fills', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetOrders($params = array()) {
        return $this->request('orders', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetLimitOrders($params = array()) {
        return $this->request('limit/orders', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function privateGetOrdersOrderId($params = array()) {
        return $this->request('orders/{orderId}', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetOrderClientOrderClientOid($params = array()) {
        return $this->request('order/client-order/{clientOid}', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function privateGetFills($params = array()) {
        return $this->request('fills', 'private', 'GET', $params, null, null, array("cost" => 10));
    }
    public function privateGetLimitFills($params = array()) {
        return $this->request('limit/fills', 'private', 'GET', $params, null, null, array("cost" => 20));
    }
    public function privateGetStopOrder($params = array()) {
        return $this->request('stop-order', 'private', 'GET', $params, null, null, array("cost" => 8));
    }
    public function privateGetStopOrderOrderId($params = array()) {
        return $this->request('stop-order/{orderId}', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function privateGetStopOrderQueryOrderByClientOid($params = array()) {
        return $this->request('stop-order/queryOrderByClientOid', 'private', 'GET', $params, null, null, array("cost" => 3));
    }
    public function privateGetOcoOrderOrderId($params = array()) {
        return $this->request('oco/order/{orderId}', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetOcoOrderDetailsOrderId($params = array()) {
        return $this->request('oco/order/details/{orderId}', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetOcoClientOrderClientOid($params = array()) {
        return $this->request('oco/client-order/{clientOid}', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetOcoOrders($params = array()) {
        return $this->request('oco/orders', 'private', 'GET', $params, null, null, array("cost" => 2));
    }
    public function privateGetHfMarginOrdersActive($params = array()) {
        return $this->request('hf/margin/orders/active', 'private', 'GET', $params, null, null, array("cost" => 4));
    }
    public function privateGetHfMarginOrdersDone($params = array()) {
        return $this->request('hf/margin/orders/done', 'private', 'GET', $params, null, null, array("cost" => 10));
    }
    public function privateGetHfMarginOrdersOrderId($params = array()) {
        return $this->request('hf/margin/orders/{orderId}', 'private', 'GET', $params, null, null, array("cost" => 4));
    }
    public function privateGetHfMarginOrdersClientOrderClientOid($params = array()) {
        return $this->request('hf/margin/orders/client-order/{clientOid}', 'private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function privateGetHfMarginFills($params = array()) {
        return $this->request('hf/margin/fills', 'private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function privateGetEtfInfo($params = array()) {
        return $this->request('etf/info', 'private', 'GET', $params, null, null, array("cost" => 25));
    }
    public function privateGetMarginCurrencies($params = array()) {
        return $this->request('margin/currencies', 'private', 'GET', $params, null, null, array("cost" => 20));
    }
    public function privateGetRiskLimitStrategy($params = array()) {
        return $this->request('risk/limit/strategy', 'private', 'GET', $params, null, null, array("cost" => 20));
    }
    public function privateGetIsolatedSymbols($params = array()) {
        return $this->request('isolated/symbols', 'private', 'GET', $params, null, null, array("cost" => 20));
    }
    public function privateGetIsolatedAccountSymbol($params = array()) {
        return $this->request('isolated/account/{symbol}', 'private', 'GET', $params, null, null, array("cost" => 50));
    }
    public function privateGetMarginBorrow($params = array()) {
        return $this->request('margin/borrow', 'private', 'GET', $params, null, null, array("cost" => 15));
    }
    public function privateGetMarginRepay($params = array()) {
        return $this->request('margin/repay', 'private', 'GET', $params, null, null, array("cost" => 15));
    }
    public function privateGetProjectList($params = array()) {
        return $this->request('project/list', 'private', 'GET', $params, null, null, array("cost" => 10));
    }
    public function privateGetProjectMarketInterestRate($params = array()) {
        return $this->request('project/marketInterestRate', 'private', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function privateGetRedeemOrders($params = array()) {
        return $this->request('redeem/orders', 'private', 'GET', $params, null, null, array("cost" => 10));
    }
    public function privateGetPurchaseOrders($params = array()) {
        return $this->request('purchase/orders', 'private', 'GET', $params, null, null, array("cost" => 10));
    }
    public function privatePostSubUserCreated($params = array()) {
        return $this->request('sub/user/created', 'private', 'POST', $params, null, null, array("cost" => 22.5));
    }
    public function privatePostSubApiKey($params = array()) {
        return $this->request('sub/api-key', 'private', 'POST', $params, null, null, array("cost" => 30));
    }
    public function privatePostSubApiKeyUpdate($params = array()) {
        return $this->request('sub/api-key/update', 'private', 'POST', $params, null, null, array("cost" => 45));
    }
    public function privatePostDepositAddresses($params = array()) {
        return $this->request('deposit-addresses', 'private', 'POST', $params, null, null, array("cost" => 30));
    }
    public function privatePostWithdrawals($params = array()) {
        return $this->request('withdrawals', 'private', 'POST', $params, null, null, array("cost" => 7.5));
    }
    public function privatePostAccountsUniversalTransfer($params = array()) {
        return $this->request('accounts/universal-transfer', 'private', 'POST', $params, null, null, array("cost" => 6));
    }
    public function privatePostAccountsSubTransfer($params = array()) {
        return $this->request('accounts/sub-transfer', 'private', 'POST', $params, null, null, array("cost" => 45));
    }
    public function privatePostAccountsInnerTransfer($params = array()) {
        return $this->request('accounts/inner-transfer', 'private', 'POST', $params, null, null, array("cost" => 15));
    }
    public function privatePostTransferOut($params = array()) {
        return $this->request('transfer-out', 'private', 'POST', $params, null, null, array("cost" => 30));
    }
    public function privatePostTransferIn($params = array()) {
        return $this->request('transfer-in', 'private', 'POST', $params, null, null, array("cost" => 30));
    }
    public function privatePostHfOrders($params = array()) {
        return $this->request('hf/orders', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostHfOrdersTest($params = array()) {
        return $this->request('hf/orders/test', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostHfOrdersSync($params = array()) {
        return $this->request('hf/orders/sync', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostHfOrdersMulti($params = array()) {
        return $this->request('hf/orders/multi', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostHfOrdersMultiSync($params = array()) {
        return $this->request('hf/orders/multi/sync', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostHfOrdersAlter($params = array()) {
        return $this->request('hf/orders/alter', 'private', 'POST', $params, null, null, array("cost" => 3));
    }
    public function privatePostHfOrdersDeadCancelAll($params = array()) {
        return $this->request('hf/orders/dead-cancel-all', 'private', 'POST', $params, null, null, array("cost" => 2));
    }
    public function privatePostOrders($params = array()) {
        return $this->request('orders', 'private', 'POST', $params, null, null, array("cost" => 2));
    }
    public function privatePostOrdersTest($params = array()) {
        return $this->request('orders/test', 'private', 'POST', $params, null, null, array("cost" => 2));
    }
    public function privatePostOrdersMulti($params = array()) {
        return $this->request('orders/multi', 'private', 'POST', $params, null, null, array("cost" => 3));
    }
    public function privatePostStopOrder($params = array()) {
        return $this->request('stop-order', 'private', 'POST', $params, null, null, array("cost" => 2));
    }
    public function privatePostOcoOrder($params = array()) {
        return $this->request('oco/order', 'private', 'POST', $params, null, null, array("cost" => 2));
    }
    public function privatePostHfMarginOrder($params = array()) {
        return $this->request('hf/margin/order', 'private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function privatePostHfMarginOrderTest($params = array()) {
        return $this->request('hf/margin/order/test', 'private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function privatePostMarginOrder($params = array()) {
        return $this->request('margin/order', 'private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function privatePostMarginOrderTest($params = array()) {
        return $this->request('margin/order/test', 'private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function privatePostMarginBorrow($params = array()) {
        return $this->request('margin/borrow', 'private', 'POST', $params, null, null, array("cost" => 15));
    }
    public function privatePostMarginRepay($params = array()) {
        return $this->request('margin/repay', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function privatePostPurchase($params = array()) {
        return $this->request('purchase', 'private', 'POST', $params, null, null, array("cost" => 15));
    }
    public function privatePostRedeem($params = array()) {
        return $this->request('redeem', 'private', 'POST', $params, null, null, array("cost" => 15));
    }
    public function privatePostLendPurchaseUpdate($params = array()) {
        return $this->request('lend/purchase/update', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function privatePostBulletPrivate($params = array()) {
        return $this->request('bullet-private', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function privateDeleteSubApiKey($params = array()) {
        return $this->request('sub/api-key', 'private', 'DELETE', $params, null, null, array("cost" => 45));
    }
    public function privateDeleteWithdrawalsWithdrawalId($params = array()) {
        return $this->request('withdrawals/{withdrawalId}', 'private', 'DELETE', $params, null, null, array("cost" => 30));
    }
    public function privateDeleteHfOrdersOrderId($params = array()) {
        return $this->request('hf/orders/{orderId}', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function privateDeleteHfOrdersSyncOrderId($params = array()) {
        return $this->request('hf/orders/sync/{orderId}', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function privateDeleteHfOrdersClientOrderClientOid($params = array()) {
        return $this->request('hf/orders/client-order/{clientOid}', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function privateDeleteHfOrdersSyncClientOrderClientOid($params = array()) {
        return $this->request('hf/orders/sync/client-order/{clientOid}', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function privateDeleteHfOrdersCancelOrderId($params = array()) {
        return $this->request('hf/orders/cancel/{orderId}', 'private', 'DELETE', $params, null, null, array("cost" => 2));
    }
    public function privateDeleteHfOrders($params = array()) {
        return $this->request('hf/orders', 'private', 'DELETE', $params, null, null, array("cost" => 2));
    }
    public function privateDeleteHfOrdersCancelAll($params = array()) {
        return $this->request('hf/orders/cancelAll', 'private', 'DELETE', $params, null, null, array("cost" => 30));
    }
    public function privateDeleteOrdersOrderId($params = array()) {
        return $this->request('orders/{orderId}', 'private', 'DELETE', $params, null, null, array("cost" => 3));
    }
    public function privateDeleteOrderClientOrderClientOid($params = array()) {
        return $this->request('order/client-order/{clientOid}', 'private', 'DELETE', $params, null, null, array("cost" => 5));
    }
    public function privateDeleteOrders($params = array()) {
        return $this->request('orders', 'private', 'DELETE', $params, null, null, array("cost" => 20));
    }
    public function privateDeleteStopOrderOrderId($params = array()) {
        return $this->request('stop-order/{orderId}', 'private', 'DELETE', $params, null, null, array("cost" => 3));
    }
    public function privateDeleteStopOrderCancelOrderByClientOid($params = array()) {
        return $this->request('stop-order/cancelOrderByClientOid', 'private', 'DELETE', $params, null, null, array("cost" => 5));
    }
    public function privateDeleteStopOrderCancel($params = array()) {
        return $this->request('stop-order/cancel', 'private', 'DELETE', $params, null, null, array("cost" => 3));
    }
    public function privateDeleteOcoOrderOrderId($params = array()) {
        return $this->request('oco/order/{orderId}', 'private', 'DELETE', $params, null, null, array("cost" => 3));
    }
    public function privateDeleteOcoClientOrderClientOid($params = array()) {
        return $this->request('oco/client-order/{clientOid}', 'private', 'DELETE', $params, null, null, array("cost" => 3));
    }
    public function privateDeleteOcoOrders($params = array()) {
        return $this->request('oco/orders', 'private', 'DELETE', $params, null, null, array("cost" => 3));
    }
    public function privateDeleteHfMarginOrdersOrderId($params = array()) {
        return $this->request('hf/margin/orders/{orderId}', 'private', 'DELETE', $params, null, null, array("cost" => 5));
    }
    public function privateDeleteHfMarginOrdersClientOrderClientOid($params = array()) {
        return $this->request('hf/margin/orders/client-order/{clientOid}', 'private', 'DELETE', $params, null, null, array("cost" => 5));
    }
    public function privateDeleteHfMarginOrders($params = array()) {
        return $this->request('hf/margin/orders', 'private', 'DELETE', $params, null, null, array("cost" => 10));
    }
    public function futuresPublicGetContractsActive($params = array()) {
        return $this->request('contracts/active', 'futuresPublic', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futuresPublicGetContractsSymbol($params = array()) {
        return $this->request('contracts/{symbol}', 'futuresPublic', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futuresPublicGetTicker($params = array()) {
        return $this->request('ticker', 'futuresPublic', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futuresPublicGetLevel2Snapshot($params = array()) {
        return $this->request('level2/snapshot', 'futuresPublic', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futuresPublicGetLevel2Depth20($params = array()) {
        return $this->request('level2/depth20', 'futuresPublic', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresPublicGetLevel2Depth100($params = array()) {
        return $this->request('level2/depth100', 'futuresPublic', 'GET', $params, null, null, array("cost" => 15));
    }
    public function futuresPublicGetTradeHistory($params = array()) {
        return $this->request('trade/history', 'futuresPublic', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresPublicGetKlineQuery($params = array()) {
        return $this->request('kline/query', 'futuresPublic', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futuresPublicGetInterestQuery($params = array()) {
        return $this->request('interest/query', 'futuresPublic', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresPublicGetIndexQuery($params = array()) {
        return $this->request('index/query', 'futuresPublic', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futuresPublicGetMarkPriceSymbolCurrent($params = array()) {
        return $this->request('mark-price/{symbol}/current', 'futuresPublic', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futuresPublicGetPremiumQuery($params = array()) {
        return $this->request('premium/query', 'futuresPublic', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futuresPublicGetTradeStatistics($params = array()) {
        return $this->request('trade-statistics', 'futuresPublic', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futuresPublicGetFundingRateSymbolCurrent($params = array()) {
        return $this->request('funding-rate/{symbol}/current', 'futuresPublic', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futuresPublicGetContractFundingRates($params = array()) {
        return $this->request('contract/funding-rates', 'futuresPublic', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresPublicGetTimestamp($params = array()) {
        return $this->request('timestamp', 'futuresPublic', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futuresPublicGetStatus($params = array()) {
        return $this->request('status', 'futuresPublic', 'GET', $params, null, null, array("cost" => 6));
    }
    public function futuresPublicGetLevel2MessageQuery($params = array()) {
        return $this->request('level2/message/query', 'futuresPublic', 'GET', $params, null, null, array("cost" => 1.3953));
    }
    public function futuresPublicPostBulletPublic($params = array()) {
        return $this->request('bullet-public', 'futuresPublic', 'POST', $params, null, null, array("cost" => 15));
    }
    public function futuresPrivateGetTransactionHistory($params = array()) {
        return $this->request('transaction-history', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futuresPrivateGetAccountOverview($params = array()) {
        return $this->request('account-overview', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresPrivateGetAccountOverviewAll($params = array()) {
        return $this->request('account-overview-all', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 9));
    }
    public function futuresPrivateGetTransferList($params = array()) {
        return $this->request('transfer-list', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 30));
    }
    public function futuresPrivateGetOrders($params = array()) {
        return $this->request('orders', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futuresPrivateGetStopOrders($params = array()) {
        return $this->request('stopOrders', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 9));
    }
    public function futuresPrivateGetRecentDoneOrders($params = array()) {
        return $this->request('recentDoneOrders', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresPrivateGetOrdersOrderId($params = array()) {
        return $this->request('orders/{orderId}', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresPrivateGetOrdersByClientOid($params = array()) {
        return $this->request('orders/byClientOid', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresPrivateGetFills($params = array()) {
        return $this->request('fills', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresPrivateGetRecentFills($params = array()) {
        return $this->request('recentFills', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 4.5));
    }
    public function futuresPrivateGetOpenOrderStatistics($params = array()) {
        return $this->request('openOrderStatistics', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 15));
    }
    public function futuresPrivateGetPosition($params = array()) {
        return $this->request('position', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futuresPrivateGetPositions($params = array()) {
        return $this->request('positions', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 3));
    }
    public function futuresPrivateGetMarginMaxWithdrawMargin($params = array()) {
        return $this->request('margin/maxWithdrawMargin', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 15));
    }
    public function futuresPrivateGetContractsRiskLimitSymbol($params = array()) {
        return $this->request('contracts/risk-limit/{symbol}', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresPrivateGetFundingHistory($params = array()) {
        return $this->request('funding-history', 'futuresPrivate', 'GET', $params, null, null, array("cost" => 7.5));
    }
    public function futuresPrivatePostTransferOut($params = array()) {
        return $this->request('transfer-out', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 30));
    }
    public function futuresPrivatePostTransferIn($params = array()) {
        return $this->request('transfer-in', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 30));
    }
    public function futuresPrivatePostOrders($params = array()) {
        return $this->request('orders', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 3));
    }
    public function futuresPrivatePostOrdersTest($params = array()) {
        return $this->request('orders/test', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 3));
    }
    public function futuresPrivatePostOrdersMulti($params = array()) {
        return $this->request('orders/multi', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 4.5));
    }
    public function futuresPrivatePostPositionMarginAutoDepositStatus($params = array()) {
        return $this->request('position/margin/auto-deposit-status', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 6));
    }
    public function futuresPrivatePostMarginWithdrawMargin($params = array()) {
        return $this->request('margin/withdrawMargin', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 15));
    }
    public function futuresPrivatePostPositionMarginDepositMargin($params = array()) {
        return $this->request('position/margin/deposit-margin', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 6));
    }
    public function futuresPrivatePostPositionRiskLimitLevelChange($params = array()) {
        return $this->request('position/risk-limit-level/change', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 6));
    }
    public function futuresPrivatePostBulletPrivate($params = array()) {
        return $this->request('bullet-private', 'futuresPrivate', 'POST', $params, null, null, array("cost" => 15));
    }
    public function futuresPrivateDeleteOrdersOrderId($params = array()) {
        return $this->request('orders/{orderId}', 'futuresPrivate', 'DELETE', $params, null, null, array("cost" => 1.5));
    }
    public function futuresPrivateDeleteOrdersClientOrderClientOid($params = array()) {
        return $this->request('orders/client-order/{clientOid}', 'futuresPrivate', 'DELETE', $params, null, null, array("cost" => 1.5));
    }
    public function futuresPrivateDeleteOrders($params = array()) {
        return $this->request('orders', 'futuresPrivate', 'DELETE', $params, null, null, array("cost" => 45));
    }
    public function futuresPrivateDeleteStopOrders($params = array()) {
        return $this->request('stopOrders', 'futuresPrivate', 'DELETE', $params, null, null, array("cost" => 22.5));
    }
    public function webExchangeGetCurrencyCurrencyChainInfo($params = array()) {
        return $this->request('currency/currency/chain-info', 'webExchange', 'GET', $params, null, null, array("cost" => 1));
    }
}
