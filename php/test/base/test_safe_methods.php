<?php
namespace ccxt;

// ----------------------------------------------------------------------------

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

// -----------------------------------------------------------------------------


function test_safe_methods() {
    $exchange = new \ccxt\Exchange(array(
        'id' => 'regirock',
    ));
    $input_dict = array(
        'a' => 1,
        'bool' => true,
        'list' => [1, 2, 3],
        'dict' => array(
            'a' => 1,
        ),
        'str' => 'hello',
    );
    $input_list = ['hi', 2];
    // safeValue
    assert($exchange->safe_value($input_dict, 'a') === 1);
    assert($exchange->safe_value($input_dict, 'bool') === true);
    assert(equals($exchange->safe_value($input_dict, 'list'), [1, 2, 3]));
    $dict_object = $exchange->safe_value($input_dict, 'dict');
    assert(equals($dict_object, array(
        'a' => 1,
    )));
    assert($exchange->safe_value($input_list, 0) === 'hi');
    // safeValue2
    assert($exchange->safe_value_2($input_dict, 'b', 'a') === 1);
    assert($exchange->safe_value_2($input_dict, 's', 'bool') === true);
    // safeString
    assert($exchange->safe_string($input_dict, 'a') === '1');
    // assert (exchange.safeString (inputDict, 'bool') === 'true'); returns True in python and 'true' in js
    assert($exchange->safe_string($input_list, 0) === 'hi');
    assert($exchange->safe_string($input_dict, 'str') === 'hello');
    // safeInteger
    assert($exchange->safe_integer($input_dict, 'a') === 1);
    assert($exchange->safe_integer_2($input_dict, 'b', 'a') === 1);
}
