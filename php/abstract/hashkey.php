<?php

namespace ccxt\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class hashkey extends \ccxt\Exchange {
    public function public_get_api_v1_exchangeinfo($params = array()) {
        return $this->request('api/v1/exchangeInfo', 'public', 'GET', $params, null, null, array("cost" => 5));
    }
    public function public_get_quote_v1_depth($params = array()) {
        return $this->request('quote/v1/depth', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_quote_v1_trades($params = array()) {
        return $this->request('quote/v1/trades', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_quote_v1_klines($params = array()) {
        return $this->request('quote/v1/klines', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_quote_v1_ticker_24hr($params = array()) {
        return $this->request('quote/v1/ticker/24hr', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_quote_v1_ticker_price($params = array()) {
        return $this->request('quote/v1/ticker/price', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_quote_v1_ticker_bookticker($params = array()) {
        return $this->request('quote/v1/ticker/bookTicker', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_quote_v1_depth_merged($params = array()) {
        return $this->request('quote/v1/depth/merged', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_quote_v1_markprice($params = array()) {
        return $this->request('quote/v1/markPrice', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_quote_v1_index($params = array()) {
        return $this->request('quote/v1/index', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_api_v1_futures_fundingrate($params = array()) {
        return $this->request('api/v1/futures/fundingRate', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_api_v1_futures_historyfundingrate($params = array()) {
        return $this->request('api/v1/futures/historyFundingRate', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_api_v1_ping($params = array()) {
        return $this->request('api/v1/ping', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_api_v1_time($params = array()) {
        return $this->request('api/v1/time', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_spot_order($params = array()) {
        return $this->request('api/v1/spot/order', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_spot_openorders($params = array()) {
        return $this->request('api/v1/spot/openOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_spot_tradeorders($params = array()) {
        return $this->request('api/v1/spot/tradeOrders', 'private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function private_get_api_v1_futures_leverage($params = array()) {
        return $this->request('api/v1/futures/leverage', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_futures_order($params = array()) {
        return $this->request('api/v1/futures/order', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_futures_openorders($params = array()) {
        return $this->request('api/v1/futures/openOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_futures_usertrades($params = array()) {
        return $this->request('api/v1/futures/userTrades', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_futures_positions($params = array()) {
        return $this->request('api/v1/futures/positions', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_futures_historyorders($params = array()) {
        return $this->request('api/v1/futures/historyOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_futures_balance($params = array()) {
        return $this->request('api/v1/futures/balance', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_futures_liquidationassignstatus($params = array()) {
        return $this->request('api/v1/futures/liquidationAssignStatus', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_futures_risklimit($params = array()) {
        return $this->request('api/v1/futures/riskLimit', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_futures_commissionrate($params = array()) {
        return $this->request('api/v1/futures/commissionRate', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_futures_getbestorder($params = array()) {
        return $this->request('api/v1/futures/getBestOrder', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_account_vipinfo($params = array()) {
        return $this->request('api/v1/account/vipInfo', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_account($params = array()) {
        return $this->request('api/v1/account', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_account_trades($params = array()) {
        return $this->request('api/v1/account/trades', 'private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function private_get_api_v1_account_type($params = array()) {
        return $this->request('api/v1/account/type', 'private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function private_get_api_v1_account_checkapikey($params = array()) {
        return $this->request('api/v1/account/checkApiKey', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_account_balanceflow($params = array()) {
        return $this->request('api/v1/account/balanceFlow', 'private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function private_get_api_v1_spot_subaccount_openorders($params = array()) {
        return $this->request('api/v1/spot/subAccount/openOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_spot_subaccount_tradeorders($params = array()) {
        return $this->request('api/v1/spot/subAccount/tradeOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_subaccount_trades($params = array()) {
        return $this->request('api/v1/subAccount/trades', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_futures_subaccount_openorders($params = array()) {
        return $this->request('api/v1/futures/subAccount/openOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_futures_subaccount_historyorders($params = array()) {
        return $this->request('api/v1/futures/subAccount/historyOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_futures_subaccount_usertrades($params = array()) {
        return $this->request('api/v1/futures/subAccount/userTrades', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_account_deposit_address($params = array()) {
        return $this->request('api/v1/account/deposit/address', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_account_depositorders($params = array()) {
        return $this->request('api/v1/account/depositOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_api_v1_account_withdraworders($params = array()) {
        return $this->request('api/v1/account/withdrawOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_post_api_v1_userdatastream($params = array()) {
        return $this->request('api/v1/userDataStream', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_api_v1_spot_ordertest($params = array()) {
        return $this->request('api/v1/spot/orderTest', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_api_v1_spot_order($params = array()) {
        return $this->request('api/v1/spot/order', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_api_v1_1_spot_order($params = array()) {
        return $this->request('api/v1.1/spot/order', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_api_v1_spot_batchorders($params = array()) {
        return $this->request('api/v1/spot/batchOrders', 'private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function private_post_api_v1_futures_leverage($params = array()) {
        return $this->request('api/v1/futures/leverage', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_api_v1_futures_order($params = array()) {
        return $this->request('api/v1/futures/order', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_api_v1_futures_position_trading_stop($params = array()) {
        return $this->request('api/v1/futures/position/trading-stop', 'private', 'POST', $params, null, null, array("cost" => 3));
    }
    public function private_post_api_v1_futures_batchorders($params = array()) {
        return $this->request('api/v1/futures/batchOrders', 'private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function private_post_api_v1_account_assettransfer($params = array()) {
        return $this->request('api/v1/account/assetTransfer', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_api_v1_account_authaddress($params = array()) {
        return $this->request('api/v1/account/authAddress', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_api_v1_account_withdraw($params = array()) {
        return $this->request('api/v1/account/withdraw', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_put_api_v1_userdatastream($params = array()) {
        return $this->request('api/v1/userDataStream', 'private', 'PUT', $params, null, null, array("cost" => 1));
    }
    public function private_delete_api_v1_spot_order($params = array()) {
        return $this->request('api/v1/spot/order', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function private_delete_api_v1_spot_openorders($params = array()) {
        return $this->request('api/v1/spot/openOrders', 'private', 'DELETE', $params, null, null, array("cost" => 5));
    }
    public function private_delete_api_v1_spot_cancelorderbyids($params = array()) {
        return $this->request('api/v1/spot/cancelOrderByIds', 'private', 'DELETE', $params, null, null, array("cost" => 5));
    }
    public function private_delete_api_v1_futures_order($params = array()) {
        return $this->request('api/v1/futures/order', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function private_delete_api_v1_futures_batchorders($params = array()) {
        return $this->request('api/v1/futures/batchOrders', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function private_delete_api_v1_futures_cancelorderbyids($params = array()) {
        return $this->request('api/v1/futures/cancelOrderByIds', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function private_delete_api_v1_userdatastream($params = array()) {
        return $this->request('api/v1/userDataStream', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function publicGetApiV1ExchangeInfo($params = array()) {
        return $this->request('api/v1/exchangeInfo', 'public', 'GET', $params, null, null, array("cost" => 5));
    }
    public function publicGetQuoteV1Depth($params = array()) {
        return $this->request('quote/v1/depth', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetQuoteV1Trades($params = array()) {
        return $this->request('quote/v1/trades', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetQuoteV1Klines($params = array()) {
        return $this->request('quote/v1/klines', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetQuoteV1Ticker24hr($params = array()) {
        return $this->request('quote/v1/ticker/24hr', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetQuoteV1TickerPrice($params = array()) {
        return $this->request('quote/v1/ticker/price', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetQuoteV1TickerBookTicker($params = array()) {
        return $this->request('quote/v1/ticker/bookTicker', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetQuoteV1DepthMerged($params = array()) {
        return $this->request('quote/v1/depth/merged', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetQuoteV1MarkPrice($params = array()) {
        return $this->request('quote/v1/markPrice', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetQuoteV1Index($params = array()) {
        return $this->request('quote/v1/index', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetApiV1FuturesFundingRate($params = array()) {
        return $this->request('api/v1/futures/fundingRate', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetApiV1FuturesHistoryFundingRate($params = array()) {
        return $this->request('api/v1/futures/historyFundingRate', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetApiV1Ping($params = array()) {
        return $this->request('api/v1/ping', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetApiV1Time($params = array()) {
        return $this->request('api/v1/time', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1SpotOrder($params = array()) {
        return $this->request('api/v1/spot/order', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1SpotOpenOrders($params = array()) {
        return $this->request('api/v1/spot/openOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1SpotTradeOrders($params = array()) {
        return $this->request('api/v1/spot/tradeOrders', 'private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function privateGetApiV1FuturesLeverage($params = array()) {
        return $this->request('api/v1/futures/leverage', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1FuturesOrder($params = array()) {
        return $this->request('api/v1/futures/order', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1FuturesOpenOrders($params = array()) {
        return $this->request('api/v1/futures/openOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1FuturesUserTrades($params = array()) {
        return $this->request('api/v1/futures/userTrades', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1FuturesPositions($params = array()) {
        return $this->request('api/v1/futures/positions', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1FuturesHistoryOrders($params = array()) {
        return $this->request('api/v1/futures/historyOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1FuturesBalance($params = array()) {
        return $this->request('api/v1/futures/balance', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1FuturesLiquidationAssignStatus($params = array()) {
        return $this->request('api/v1/futures/liquidationAssignStatus', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1FuturesRiskLimit($params = array()) {
        return $this->request('api/v1/futures/riskLimit', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1FuturesCommissionRate($params = array()) {
        return $this->request('api/v1/futures/commissionRate', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1FuturesGetBestOrder($params = array()) {
        return $this->request('api/v1/futures/getBestOrder', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1AccountVipInfo($params = array()) {
        return $this->request('api/v1/account/vipInfo', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1Account($params = array()) {
        return $this->request('api/v1/account', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1AccountTrades($params = array()) {
        return $this->request('api/v1/account/trades', 'private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function privateGetApiV1AccountType($params = array()) {
        return $this->request('api/v1/account/type', 'private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function privateGetApiV1AccountCheckApiKey($params = array()) {
        return $this->request('api/v1/account/checkApiKey', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1AccountBalanceFlow($params = array()) {
        return $this->request('api/v1/account/balanceFlow', 'private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function privateGetApiV1SpotSubAccountOpenOrders($params = array()) {
        return $this->request('api/v1/spot/subAccount/openOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1SpotSubAccountTradeOrders($params = array()) {
        return $this->request('api/v1/spot/subAccount/tradeOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1SubAccountTrades($params = array()) {
        return $this->request('api/v1/subAccount/trades', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1FuturesSubAccountOpenOrders($params = array()) {
        return $this->request('api/v1/futures/subAccount/openOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1FuturesSubAccountHistoryOrders($params = array()) {
        return $this->request('api/v1/futures/subAccount/historyOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1FuturesSubAccountUserTrades($params = array()) {
        return $this->request('api/v1/futures/subAccount/userTrades', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1AccountDepositAddress($params = array()) {
        return $this->request('api/v1/account/deposit/address', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1AccountDepositOrders($params = array()) {
        return $this->request('api/v1/account/depositOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetApiV1AccountWithdrawOrders($params = array()) {
        return $this->request('api/v1/account/withdrawOrders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privatePostApiV1UserDataStream($params = array()) {
        return $this->request('api/v1/userDataStream', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostApiV1SpotOrderTest($params = array()) {
        return $this->request('api/v1/spot/orderTest', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostApiV1SpotOrder($params = array()) {
        return $this->request('api/v1/spot/order', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostApiV11SpotOrder($params = array()) {
        return $this->request('api/v1.1/spot/order', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostApiV1SpotBatchOrders($params = array()) {
        return $this->request('api/v1/spot/batchOrders', 'private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function privatePostApiV1FuturesLeverage($params = array()) {
        return $this->request('api/v1/futures/leverage', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostApiV1FuturesOrder($params = array()) {
        return $this->request('api/v1/futures/order', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostApiV1FuturesPositionTradingStop($params = array()) {
        return $this->request('api/v1/futures/position/trading-stop', 'private', 'POST', $params, null, null, array("cost" => 3));
    }
    public function privatePostApiV1FuturesBatchOrders($params = array()) {
        return $this->request('api/v1/futures/batchOrders', 'private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function privatePostApiV1AccountAssetTransfer($params = array()) {
        return $this->request('api/v1/account/assetTransfer', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostApiV1AccountAuthAddress($params = array()) {
        return $this->request('api/v1/account/authAddress', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostApiV1AccountWithdraw($params = array()) {
        return $this->request('api/v1/account/withdraw', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePutApiV1UserDataStream($params = array()) {
        return $this->request('api/v1/userDataStream', 'private', 'PUT', $params, null, null, array("cost" => 1));
    }
    public function privateDeleteApiV1SpotOrder($params = array()) {
        return $this->request('api/v1/spot/order', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function privateDeleteApiV1SpotOpenOrders($params = array()) {
        return $this->request('api/v1/spot/openOrders', 'private', 'DELETE', $params, null, null, array("cost" => 5));
    }
    public function privateDeleteApiV1SpotCancelOrderByIds($params = array()) {
        return $this->request('api/v1/spot/cancelOrderByIds', 'private', 'DELETE', $params, null, null, array("cost" => 5));
    }
    public function privateDeleteApiV1FuturesOrder($params = array()) {
        return $this->request('api/v1/futures/order', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function privateDeleteApiV1FuturesBatchOrders($params = array()) {
        return $this->request('api/v1/futures/batchOrders', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function privateDeleteApiV1FuturesCancelOrderByIds($params = array()) {
        return $this->request('api/v1/futures/cancelOrderByIds', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function privateDeleteApiV1UserDataStream($params = array()) {
        return $this->request('api/v1/userDataStream', 'private', 'DELETE', $params, null, null, array("cost" => 1));
    }
}
