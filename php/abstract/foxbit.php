<?php

namespace ccxt\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class foxbit extends \ccxt\Exchange {
    public function v3_public_get_currencies($params = array()) {
        return $this->request('currencies', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 5));
    }
    public function v3_public_get_markets($params = array()) {
        return $this->request('markets', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 5));
    }
    public function v3_public_get_markets_ticker_24hr($params = array()) {
        return $this->request('markets/ticker/24hr', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 60));
    }
    public function v3_public_get_markets_market_orderbook($params = array()) {
        return $this->request('markets/{market}/orderbook', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 6));
    }
    public function v3_public_get_markets_market_candlesticks($params = array()) {
        return $this->request('markets/{market}/candlesticks', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 12));
    }
    public function v3_public_get_markets_market_trades_history($params = array()) {
        return $this->request('markets/{market}/trades/history', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 12));
    }
    public function v3_public_get_markets_market_ticker_24hr($params = array()) {
        return $this->request('markets/{market}/ticker/24hr', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 15));
    }
    public function v3_private_get_accounts($params = array()) {
        return $this->request('accounts', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 2));
    }
    public function v3_private_get_accounts_symbol_transactions($params = array()) {
        return $this->request('accounts/{symbol}/transactions', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 60));
    }
    public function v3_private_get_orders($params = array()) {
        return $this->request('orders', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 2));
    }
    public function v3_private_get_orders_by_order_id_id($params = array()) {
        return $this->request('orders/by-order-id/{id}', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 2));
    }
    public function v3_private_get_trades($params = array()) {
        return $this->request('trades', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 6));
    }
    public function v3_private_get_deposits_address($params = array()) {
        return $this->request('deposits/address', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 10));
    }
    public function v3_private_get_deposits($params = array()) {
        return $this->request('deposits', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 10));
    }
    public function v3_private_get_withdrawals($params = array()) {
        return $this->request('withdrawals', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 10));
    }
    public function v3_private_get_me_fees_trading($params = array()) {
        return $this->request('me/fees/trading', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 60));
    }
    public function v3_private_post_orders($params = array()) {
        return $this->request('orders', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 2));
    }
    public function v3_private_post_orders_batch($params = array()) {
        return $this->request('orders/batch', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 7.5));
    }
    public function v3_private_post_orders_cancel_replace($params = array()) {
        return $this->request('orders/cancel-replace', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 3));
    }
    public function v3_private_post_withdrawals($params = array()) {
        return $this->request('withdrawals', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 10));
    }
    public function v3_private_put_orders_cancel($params = array()) {
        return $this->request('orders/cancel', array('v3', 'private'), 'PUT', $params, null, null, array("cost" => 2));
    }
    public function status_public_get_status($params = array()) {
        return $this->request('status', array('status', 'public'), 'GET', $params, null, null, array("cost" => 30));
    }
    public function v3PublicGetCurrencies($params = array()) {
        return $this->request('currencies', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 5));
    }
    public function v3PublicGetMarkets($params = array()) {
        return $this->request('markets', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 5));
    }
    public function v3PublicGetMarketsTicker24hr($params = array()) {
        return $this->request('markets/ticker/24hr', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 60));
    }
    public function v3PublicGetMarketsMarketOrderbook($params = array()) {
        return $this->request('markets/{market}/orderbook', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 6));
    }
    public function v3PublicGetMarketsMarketCandlesticks($params = array()) {
        return $this->request('markets/{market}/candlesticks', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 12));
    }
    public function v3PublicGetMarketsMarketTradesHistory($params = array()) {
        return $this->request('markets/{market}/trades/history', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 12));
    }
    public function v3PublicGetMarketsMarketTicker24hr($params = array()) {
        return $this->request('markets/{market}/ticker/24hr', array('v3', 'public'), 'GET', $params, null, null, array("cost" => 15));
    }
    public function v3PrivateGetAccounts($params = array()) {
        return $this->request('accounts', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 2));
    }
    public function v3PrivateGetAccountsSymbolTransactions($params = array()) {
        return $this->request('accounts/{symbol}/transactions', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 60));
    }
    public function v3PrivateGetOrders($params = array()) {
        return $this->request('orders', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 2));
    }
    public function v3PrivateGetOrdersByOrderIdId($params = array()) {
        return $this->request('orders/by-order-id/{id}', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 2));
    }
    public function v3PrivateGetTrades($params = array()) {
        return $this->request('trades', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 6));
    }
    public function v3PrivateGetDepositsAddress($params = array()) {
        return $this->request('deposits/address', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 10));
    }
    public function v3PrivateGetDeposits($params = array()) {
        return $this->request('deposits', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 10));
    }
    public function v3PrivateGetWithdrawals($params = array()) {
        return $this->request('withdrawals', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 10));
    }
    public function v3PrivateGetMeFeesTrading($params = array()) {
        return $this->request('me/fees/trading', array('v3', 'private'), 'GET', $params, null, null, array("cost" => 60));
    }
    public function v3PrivatePostOrders($params = array()) {
        return $this->request('orders', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 2));
    }
    public function v3PrivatePostOrdersBatch($params = array()) {
        return $this->request('orders/batch', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 7.5));
    }
    public function v3PrivatePostOrdersCancelReplace($params = array()) {
        return $this->request('orders/cancel-replace', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 3));
    }
    public function v3PrivatePostWithdrawals($params = array()) {
        return $this->request('withdrawals', array('v3', 'private'), 'POST', $params, null, null, array("cost" => 10));
    }
    public function v3PrivatePutOrdersCancel($params = array()) {
        return $this->request('orders/cancel', array('v3', 'private'), 'PUT', $params, null, null, array("cost" => 2));
    }
    public function statusPublicGetStatus($params = array()) {
        return $this->request('status', array('status', 'public'), 'GET', $params, null, null, array("cost" => 30));
    }
}
