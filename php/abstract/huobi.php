<?php

namespace ccxt\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class huobi extends \ccxt\htx {
    public function v2public_get_reference_currencies($params = array()) {
        return $this->request('reference/currencies', 'v2Public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2public_get_market_status($params = array()) {
        return $this->request('market-status', 'v2Public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_account_ledger($params = array()) {
        return $this->request('account/ledger', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_account_withdraw_quota($params = array()) {
        return $this->request('account/withdraw/quota', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_account_withdraw_address($params = array()) {
        return $this->request('account/withdraw/address', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_account_deposit_address($params = array()) {
        return $this->request('account/deposit/address', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_account_repayment($params = array()) {
        return $this->request('account/repayment', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2private_get_reference_transact_fee_rate($params = array()) {
        return $this->request('reference/transact-fee-rate', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_account_asset_valuation($params = array()) {
        return $this->request('account/asset-valuation', 'v2Private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function v2private_get_point_account($params = array()) {
        return $this->request('point/account', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2private_get_sub_user_user_list($params = array()) {
        return $this->request('sub-user/user-list', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_sub_user_user_state($params = array()) {
        return $this->request('sub-user/user-state', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_sub_user_account_list($params = array()) {
        return $this->request('sub-user/account-list', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_sub_user_deposit_address($params = array()) {
        return $this->request('sub-user/deposit-address', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_sub_user_query_deposit($params = array()) {
        return $this->request('sub-user/query-deposit', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_user_api_key($params = array()) {
        return $this->request('user/api-key', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_user_uid($params = array()) {
        return $this->request('user/uid', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_algo_orders_opening($params = array()) {
        return $this->request('algo-orders/opening', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_algo_orders_history($params = array()) {
        return $this->request('algo-orders/history', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_algo_orders_specific($params = array()) {
        return $this->request('algo-orders/specific', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_c2c_offers($params = array()) {
        return $this->request('c2c/offers', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_c2c_offer($params = array()) {
        return $this->request('c2c/offer', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_c2c_transactions($params = array()) {
        return $this->request('c2c/transactions', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_c2c_repayment($params = array()) {
        return $this->request('c2c/repayment', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_c2c_account($params = array()) {
        return $this->request('c2c/account', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_etp_reference($params = array()) {
        return $this->request('etp/reference', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_etp_transactions($params = array()) {
        return $this->request('etp/transactions', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2private_get_etp_transaction($params = array()) {
        return $this->request('etp/transaction', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2private_get_etp_rebalance($params = array()) {
        return $this->request('etp/rebalance', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_get_etp_limit($params = array()) {
        return $this->request('etp/limit', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_account_transfer($params = array()) {
        return $this->request('account/transfer', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_account_repayment($params = array()) {
        return $this->request('account/repayment', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2private_post_point_transfer($params = array()) {
        return $this->request('point/transfer', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2private_post_sub_user_management($params = array()) {
        return $this->request('sub-user/management', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_sub_user_creation($params = array()) {
        return $this->request('sub-user/creation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_sub_user_tradable_market($params = array()) {
        return $this->request('sub-user/tradable-market', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_sub_user_transferability($params = array()) {
        return $this->request('sub-user/transferability', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_sub_user_api_key_generation($params = array()) {
        return $this->request('sub-user/api-key-generation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_sub_user_api_key_modification($params = array()) {
        return $this->request('sub-user/api-key-modification', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_sub_user_api_key_deletion($params = array()) {
        return $this->request('sub-user/api-key-deletion', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_sub_user_deduct_mode($params = array()) {
        return $this->request('sub-user/deduct-mode', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_algo_orders($params = array()) {
        return $this->request('algo-orders', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_algo_orders_cancel_all_after($params = array()) {
        return $this->request('algo-orders/cancel-all-after', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_algo_orders_cancellation($params = array()) {
        return $this->request('algo-orders/cancellation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_c2c_offer($params = array()) {
        return $this->request('c2c/offer', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_c2c_cancellation($params = array()) {
        return $this->request('c2c/cancellation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_c2c_cancel_all($params = array()) {
        return $this->request('c2c/cancel-all', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_c2c_repayment($params = array()) {
        return $this->request('c2c/repayment', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_c2c_transfer($params = array()) {
        return $this->request('c2c/transfer', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2private_post_etp_creation($params = array()) {
        return $this->request('etp/creation', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2private_post_etp_redemption($params = array()) {
        return $this->request('etp/redemption', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2private_post_etp_transactid_cancel($params = array()) {
        return $this->request('etp/{transactId}/cancel', 'v2Private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function v2private_post_etp_batch_cancel($params = array()) {
        return $this->request('etp/batch-cancel', 'v2Private', 'POST', $params, null, null, array("cost" => 50));
    }
    public function public_get_common_symbols($params = array()) {
        return $this->request('common/symbols', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_common_currencys($params = array()) {
        return $this->request('common/currencys', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_common_timestamp($params = array()) {
        return $this->request('common/timestamp', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_common_exchange($params = array()) {
        return $this->request('common/exchange', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function public_get_settings_currencys($params = array()) {
        return $this->request('settings/currencys', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_account_accounts($params = array()) {
        return $this->request('account/accounts', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function private_get_account_accounts_id_balance($params = array()) {
        return $this->request('account/accounts/{id}/balance', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function private_get_account_accounts_sub_uid($params = array()) {
        return $this->request('account/accounts/{sub-uid}', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_account_history($params = array()) {
        return $this->request('account/history', 'private', 'GET', $params, null, null, array("cost" => 4));
    }
    public function private_get_cross_margin_loan_info($params = array()) {
        return $this->request('cross-margin/loan-info', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_margin_loan_info($params = array()) {
        return $this->request('margin/loan-info', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_fee_fee_rate_get($params = array()) {
        return $this->request('fee/fee-rate/get', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_order_openorders($params = array()) {
        return $this->request('order/openOrders', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function private_get_order_orders($params = array()) {
        return $this->request('order/orders', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function private_get_order_orders_id($params = array()) {
        return $this->request('order/orders/{id}', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function private_get_order_orders_id_matchresults($params = array()) {
        return $this->request('order/orders/{id}/matchresults', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function private_get_order_orders_getclientorder($params = array()) {
        return $this->request('order/orders/getClientOrder', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function private_get_order_history($params = array()) {
        return $this->request('order/history', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_order_matchresults($params = array()) {
        return $this->request('order/matchresults', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_query_deposit_withdraw($params = array()) {
        return $this->request('query/deposit-withdraw', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_margin_loan_orders($params = array()) {
        return $this->request('margin/loan-orders', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function private_get_margin_accounts_balance($params = array()) {
        return $this->request('margin/accounts/balance', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function private_get_cross_margin_loan_orders($params = array()) {
        return $this->request('cross-margin/loan-orders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_cross_margin_accounts_balance($params = array()) {
        return $this->request('cross-margin/accounts/balance', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_points_actions($params = array()) {
        return $this->request('points/actions', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_points_orders($params = array()) {
        return $this->request('points/orders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_subuser_aggregate_balance($params = array()) {
        return $this->request('subuser/aggregate-balance', 'private', 'GET', $params, null, null, array("cost" => 10));
    }
    public function private_get_stable_coin_exchange_rate($params = array()) {
        return $this->request('stable-coin/exchange_rate', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_get_stable_coin_quote($params = array()) {
        return $this->request('stable-coin/quote', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function private_post_account_transfer($params = array()) {
        return $this->request('account/transfer', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_futures_transfer($params = array()) {
        return $this->request('futures/transfer', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_order_batch_orders($params = array()) {
        return $this->request('order/batch-orders', 'private', 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function private_post_order_orders_place($params = array()) {
        return $this->request('order/orders/place', 'private', 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function private_post_order_orders_submitcancelclientorder($params = array()) {
        return $this->request('order/orders/submitCancelClientOrder', 'private', 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function private_post_order_orders_batchcancelopenorders($params = array()) {
        return $this->request('order/orders/batchCancelOpenOrders', 'private', 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function private_post_order_orders_id_submitcancel($params = array()) {
        return $this->request('order/orders/{id}/submitcancel', 'private', 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function private_post_order_orders_batchcancel($params = array()) {
        return $this->request('order/orders/batchcancel', 'private', 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function private_post_dw_withdraw_api_create($params = array()) {
        return $this->request('dw/withdraw/api/create', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_dw_withdraw_virtual_id_cancel($params = array()) {
        return $this->request('dw/withdraw-virtual/{id}/cancel', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_dw_transfer_in_margin($params = array()) {
        return $this->request('dw/transfer-in/margin', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function private_post_dw_transfer_out_margin($params = array()) {
        return $this->request('dw/transfer-out/margin', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function private_post_margin_orders($params = array()) {
        return $this->request('margin/orders', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function private_post_margin_orders_id_repay($params = array()) {
        return $this->request('margin/orders/{id}/repay', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function private_post_cross_margin_transfer_in($params = array()) {
        return $this->request('cross-margin/transfer-in', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_cross_margin_transfer_out($params = array()) {
        return $this->request('cross-margin/transfer-out', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_cross_margin_orders($params = array()) {
        return $this->request('cross-margin/orders', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_cross_margin_orders_id_repay($params = array()) {
        return $this->request('cross-margin/orders/{id}/repay', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_stable_coin_exchange($params = array()) {
        return $this->request('stable-coin/exchange', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function private_post_subuser_transfer($params = array()) {
        return $this->request('subuser/transfer', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function status_public_spot_get_api_v2_summary_json($params = array()) {
        return $this->request('api/v2/summary.json', array('status', 'public', 'spot'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function status_public_future_inverse_get_api_v2_summary_json($params = array()) {
        return $this->request('api/v2/summary.json', array('status', 'public', 'future', 'inverse'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function status_public_future_linear_get_api_v2_summary_json($params = array()) {
        return $this->request('api/v2/summary.json', array('status', 'public', 'future', 'linear'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function status_public_swap_inverse_get_api_v2_summary_json($params = array()) {
        return $this->request('api/v2/summary.json', array('status', 'public', 'swap', 'inverse'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function status_public_swap_linear_get_api_v2_summary_json($params = array()) {
        return $this->request('api/v2/summary.json', array('status', 'public', 'swap', 'linear'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_v2_market_status($params = array()) {
        return $this->request('v2/market-status', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_v1_common_symbols($params = array()) {
        return $this->request('v1/common/symbols', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_v1_common_currencys($params = array()) {
        return $this->request('v1/common/currencys', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_v2_settings_common_currencies($params = array()) {
        return $this->request('v2/settings/common/currencies', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_v2_reference_currencies($params = array()) {
        return $this->request('v2/reference/currencies', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_v1_common_timestamp($params = array()) {
        return $this->request('v1/common/timestamp', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_v1_common_exchange($params = array()) {
        return $this->request('v1/common/exchange', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_v1_settings_common_chains($params = array()) {
        return $this->request('v1/settings/common/chains', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_v1_settings_common_currencys($params = array()) {
        return $this->request('v1/settings/common/currencys', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_v1_settings_common_symbols($params = array()) {
        return $this->request('v1/settings/common/symbols', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_v2_settings_common_symbols($params = array()) {
        return $this->request('v2/settings/common/symbols', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_v1_settings_common_market_symbols($params = array()) {
        return $this->request('v1/settings/common/market-symbols', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_market_history_candles($params = array()) {
        return $this->request('market/history/candles', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_market_history_kline($params = array()) {
        return $this->request('market/history/kline', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_market_detail_merged($params = array()) {
        return $this->request('market/detail/merged', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_market_tickers($params = array()) {
        return $this->request('market/tickers', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_market_detail($params = array()) {
        return $this->request('market/detail', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_market_depth($params = array()) {
        return $this->request('market/depth', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_market_trade($params = array()) {
        return $this->request('market/trade', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_market_history_trade($params = array()) {
        return $this->request('market/history/trade', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_market_etp($params = array()) {
        return $this->request('market/etp', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_v2_etp_reference($params = array()) {
        return $this->request('v2/etp/reference', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_public_get_v2_etp_rebalance($params = array()) {
        return $this->request('v2/etp/rebalance', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v1_account_accounts($params = array()) {
        return $this->request('v1/account/accounts', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function spot_private_get_v1_account_accounts_account_id_balance($params = array()) {
        return $this->request('v1/account/accounts/{account-id}/balance', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function spot_private_get_v2_account_valuation($params = array()) {
        return $this->request('v2/account/valuation', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_account_asset_valuation($params = array()) {
        return $this->request('v2/account/asset-valuation', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function spot_private_get_v1_account_history($params = array()) {
        return $this->request('v1/account/history', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 4));
    }
    public function spot_private_get_v2_account_ledger($params = array()) {
        return $this->request('v2/account/ledger', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_point_account($params = array()) {
        return $this->request('v2/point/account', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 5));
    }
    public function spot_private_get_v2_account_deposit_address($params = array()) {
        return $this->request('v2/account/deposit/address', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_account_withdraw_quota($params = array()) {
        return $this->request('v2/account/withdraw/quota', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_account_withdraw_address($params = array()) {
        return $this->request('v2/account/withdraw/address', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_reference_currencies($params = array()) {
        return $this->request('v2/reference/currencies', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v1_query_deposit_withdraw($params = array()) {
        return $this->request('v1/query/deposit-withdraw', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v1_query_withdraw_client_order_id($params = array()) {
        return $this->request('v1/query/withdraw/client-order-id', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_user_api_key($params = array()) {
        return $this->request('v2/user/api-key', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_user_uid($params = array()) {
        return $this->request('v2/user/uid', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_sub_user_user_list($params = array()) {
        return $this->request('v2/sub-user/user-list', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_sub_user_user_state($params = array()) {
        return $this->request('v2/sub-user/user-state', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_sub_user_account_list($params = array()) {
        return $this->request('v2/sub-user/account-list', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_sub_user_deposit_address($params = array()) {
        return $this->request('v2/sub-user/deposit-address', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_sub_user_query_deposit($params = array()) {
        return $this->request('v2/sub-user/query-deposit', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v1_subuser_aggregate_balance($params = array()) {
        return $this->request('v1/subuser/aggregate-balance', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 10));
    }
    public function spot_private_get_v1_account_accounts_sub_uid($params = array()) {
        return $this->request('v1/account/accounts/{sub-uid}', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v1_order_openorders($params = array()) {
        return $this->request('v1/order/openOrders', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function spot_private_get_v1_order_orders_order_id($params = array()) {
        return $this->request('v1/order/orders/{order-id}', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function spot_private_get_v1_order_orders_getclientorder($params = array()) {
        return $this->request('v1/order/orders/getClientOrder', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function spot_private_get_v1_order_orders_order_id_matchresult($params = array()) {
        return $this->request('v1/order/orders/{order-id}/matchresult', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function spot_private_get_v1_order_orders_order_id_matchresults($params = array()) {
        return $this->request('v1/order/orders/{order-id}/matchresults', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function spot_private_get_v1_order_orders($params = array()) {
        return $this->request('v1/order/orders', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function spot_private_get_v1_order_history($params = array()) {
        return $this->request('v1/order/history', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v1_order_matchresults($params = array()) {
        return $this->request('v1/order/matchresults', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_reference_transact_fee_rate($params = array()) {
        return $this->request('v2/reference/transact-fee-rate', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_algo_orders_opening($params = array()) {
        return $this->request('v2/algo-orders/opening', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_algo_orders_history($params = array()) {
        return $this->request('v2/algo-orders/history', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_algo_orders_specific($params = array()) {
        return $this->request('v2/algo-orders/specific', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v1_margin_loan_info($params = array()) {
        return $this->request('v1/margin/loan-info', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v1_margin_loan_orders($params = array()) {
        return $this->request('v1/margin/loan-orders', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function spot_private_get_v1_margin_accounts_balance($params = array()) {
        return $this->request('v1/margin/accounts/balance', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function spot_private_get_v1_cross_margin_loan_info($params = array()) {
        return $this->request('v1/cross-margin/loan-info', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v1_cross_margin_loan_orders($params = array()) {
        return $this->request('v1/cross-margin/loan-orders', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v1_cross_margin_accounts_balance($params = array()) {
        return $this->request('v1/cross-margin/accounts/balance', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_account_repayment($params = array()) {
        return $this->request('v2/account/repayment', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 5));
    }
    public function spot_private_get_v1_stable_coin_quote($params = array()) {
        return $this->request('v1/stable-coin/quote', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v1_stable_coin_exchange_rate($params = array()) {
        return $this->request('v1/stable_coin/exchange_rate', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_get_v2_etp_transactions($params = array()) {
        return $this->request('v2/etp/transactions', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 5));
    }
    public function spot_private_get_v2_etp_transaction($params = array()) {
        return $this->request('v2/etp/transaction', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 5));
    }
    public function spot_private_get_v2_etp_limit($params = array()) {
        return $this->request('v2/etp/limit', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v1_account_transfer($params = array()) {
        return $this->request('v1/account/transfer', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v1_futures_transfer($params = array()) {
        return $this->request('v1/futures/transfer', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v2_point_transfer($params = array()) {
        return $this->request('v2/point/transfer', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 5));
    }
    public function spot_private_post_v2_account_transfer($params = array()) {
        return $this->request('v2/account/transfer', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v1_dw_withdraw_api_create($params = array()) {
        return $this->request('v1/dw/withdraw/api/create', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v1_dw_withdraw_virtual_withdraw_id_cancel($params = array()) {
        return $this->request('v1/dw/withdraw-virtual/{withdraw-id}/cancel', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v2_sub_user_deduct_mode($params = array()) {
        return $this->request('v2/sub-user/deduct-mode', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v2_sub_user_creation($params = array()) {
        return $this->request('v2/sub-user/creation', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v2_sub_user_management($params = array()) {
        return $this->request('v2/sub-user/management', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v2_sub_user_tradable_market($params = array()) {
        return $this->request('v2/sub-user/tradable-market', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v2_sub_user_transferability($params = array()) {
        return $this->request('v2/sub-user/transferability', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v2_sub_user_api_key_generation($params = array()) {
        return $this->request('v2/sub-user/api-key-generation', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v2_sub_user_api_key_modification($params = array()) {
        return $this->request('v2/sub-user/api-key-modification', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v2_sub_user_api_key_deletion($params = array()) {
        return $this->request('v2/sub-user/api-key-deletion', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v1_subuser_transfer($params = array()) {
        return $this->request('v1/subuser/transfer', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 10));
    }
    public function spot_private_post_v1_order_orders_place($params = array()) {
        return $this->request('v1/order/orders/place', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function spot_private_post_v1_order_batch_orders($params = array()) {
        return $this->request('v1/order/batch-orders', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function spot_private_post_v1_order_auto_place($params = array()) {
        return $this->request('v1/order/auto/place', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function spot_private_post_v1_order_orders_order_id_submitcancel($params = array()) {
        return $this->request('v1/order/orders/{order-id}/submitcancel', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function spot_private_post_v1_order_orders_submitcancelclientorder($params = array()) {
        return $this->request('v1/order/orders/submitCancelClientOrder', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function spot_private_post_v1_order_orders_batchcancelopenorders($params = array()) {
        return $this->request('v1/order/orders/batchCancelOpenOrders', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function spot_private_post_v1_order_orders_batchcancel($params = array()) {
        return $this->request('v1/order/orders/batchcancel', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function spot_private_post_v2_algo_orders_cancel_all_after($params = array()) {
        return $this->request('v2/algo-orders/cancel-all-after', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v2_algo_orders($params = array()) {
        return $this->request('v2/algo-orders', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v2_algo_orders_cancellation($params = array()) {
        return $this->request('v2/algo-orders/cancellation', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v2_account_repayment($params = array()) {
        return $this->request('v2/account/repayment', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 5));
    }
    public function spot_private_post_v1_dw_transfer_in_margin($params = array()) {
        return $this->request('v1/dw/transfer-in/margin', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 10));
    }
    public function spot_private_post_v1_dw_transfer_out_margin($params = array()) {
        return $this->request('v1/dw/transfer-out/margin', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 10));
    }
    public function spot_private_post_v1_margin_orders($params = array()) {
        return $this->request('v1/margin/orders', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 10));
    }
    public function spot_private_post_v1_margin_orders_order_id_repay($params = array()) {
        return $this->request('v1/margin/orders/{order-id}/repay', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 10));
    }
    public function spot_private_post_v1_cross_margin_transfer_in($params = array()) {
        return $this->request('v1/cross-margin/transfer-in', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v1_cross_margin_transfer_out($params = array()) {
        return $this->request('v1/cross-margin/transfer-out', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v1_cross_margin_orders($params = array()) {
        return $this->request('v1/cross-margin/orders', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v1_cross_margin_orders_order_id_repay($params = array()) {
        return $this->request('v1/cross-margin/orders/{order-id}/repay', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v1_stable_coin_exchange($params = array()) {
        return $this->request('v1/stable-coin/exchange', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spot_private_post_v2_etp_creation($params = array()) {
        return $this->request('v2/etp/creation', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 5));
    }
    public function spot_private_post_v2_etp_redemption($params = array()) {
        return $this->request('v2/etp/redemption', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 5));
    }
    public function spot_private_post_v2_etp_transactid_cancel($params = array()) {
        return $this->request('v2/etp/{transactId}/cancel', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 10));
    }
    public function spot_private_post_v2_etp_batch_cancel($params = array()) {
        return $this->request('v2/etp/batch-cancel', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 50));
    }
    public function contract_public_get_api_v1_timestamp($params = array()) {
        return $this->request('api/v1/timestamp', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_heartbeat($params = array()) {
        return $this->request('heartbeat/', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_contract_info($params = array()) {
        return $this->request('api/v1/contract_contract_info', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_index($params = array()) {
        return $this->request('api/v1/contract_index', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_query_elements($params = array()) {
        return $this->request('api/v1/contract_query_elements', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_price_limit($params = array()) {
        return $this->request('api/v1/contract_price_limit', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_open_interest($params = array()) {
        return $this->request('api/v1/contract_open_interest', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_delivery_price($params = array()) {
        return $this->request('api/v1/contract_delivery_price', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_market_depth($params = array()) {
        return $this->request('market/depth', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_market_bbo($params = array()) {
        return $this->request('market/bbo', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_market_history_kline($params = array()) {
        return $this->request('market/history/kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_index_market_history_mark_price_kline($params = array()) {
        return $this->request('index/market/history/mark_price_kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_market_detail_merged($params = array()) {
        return $this->request('market/detail/merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_market_detail_batch_merged($params = array()) {
        return $this->request('market/detail/batch_merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_v2_market_detail_batch_merged($params = array()) {
        return $this->request('v2/market/detail/batch_merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_market_trade($params = array()) {
        return $this->request('market/trade', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_market_history_trade($params = array()) {
        return $this->request('market/history/trade', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_risk_info($params = array()) {
        return $this->request('api/v1/contract_risk_info', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_insurance_fund($params = array()) {
        return $this->request('api/v1/contract_insurance_fund', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_adjustfactor($params = array()) {
        return $this->request('api/v1/contract_adjustfactor', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_his_open_interest($params = array()) {
        return $this->request('api/v1/contract_his_open_interest', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_ladder_margin($params = array()) {
        return $this->request('api/v1/contract_ladder_margin', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_api_state($params = array()) {
        return $this->request('api/v1/contract_api_state', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_elite_account_ratio($params = array()) {
        return $this->request('api/v1/contract_elite_account_ratio', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_elite_position_ratio($params = array()) {
        return $this->request('api/v1/contract_elite_position_ratio', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_liquidation_orders($params = array()) {
        return $this->request('api/v1/contract_liquidation_orders', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_settlement_records($params = array()) {
        return $this->request('api/v1/contract_settlement_records', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_index_market_history_index($params = array()) {
        return $this->request('index/market/history/index', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_index_market_history_basis($params = array()) {
        return $this->request('index/market/history/basis', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v1_contract_estimated_settlement_price($params = array()) {
        return $this->request('api/v1/contract_estimated_settlement_price', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_api_v3_contract_liquidation_orders($params = array()) {
        return $this->request('api/v3/contract_liquidation_orders', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_contract_info($params = array()) {
        return $this->request('swap-api/v1/swap_contract_info', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_index($params = array()) {
        return $this->request('swap-api/v1/swap_index', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_query_elements($params = array()) {
        return $this->request('swap-api/v1/swap_query_elements', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_price_limit($params = array()) {
        return $this->request('swap-api/v1/swap_price_limit', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_open_interest($params = array()) {
        return $this->request('swap-api/v1/swap_open_interest', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_ex_market_depth($params = array()) {
        return $this->request('swap-ex/market/depth', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_ex_market_bbo($params = array()) {
        return $this->request('swap-ex/market/bbo', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_ex_market_history_kline($params = array()) {
        return $this->request('swap-ex/market/history/kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_index_market_history_swap_mark_price_kline($params = array()) {
        return $this->request('index/market/history/swap_mark_price_kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_ex_market_detail_merged($params = array()) {
        return $this->request('swap-ex/market/detail/merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_v2_swap_ex_market_detail_batch_merged($params = array()) {
        return $this->request('v2/swap-ex/market/detail/batch_merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_index_market_history_swap_premium_index_kline($params = array()) {
        return $this->request('index/market/history/swap_premium_index_kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_ex_market_detail_batch_merged($params = array()) {
        return $this->request('swap-ex/market/detail/batch_merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_ex_market_trade($params = array()) {
        return $this->request('swap-ex/market/trade', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_ex_market_history_trade($params = array()) {
        return $this->request('swap-ex/market/history/trade', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_risk_info($params = array()) {
        return $this->request('swap-api/v1/swap_risk_info', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_insurance_fund($params = array()) {
        return $this->request('swap-api/v1/swap_insurance_fund', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_adjustfactor($params = array()) {
        return $this->request('swap-api/v1/swap_adjustfactor', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_his_open_interest($params = array()) {
        return $this->request('swap-api/v1/swap_his_open_interest', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_ladder_margin($params = array()) {
        return $this->request('swap-api/v1/swap_ladder_margin', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_api_state($params = array()) {
        return $this->request('swap-api/v1/swap_api_state', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_elite_account_ratio($params = array()) {
        return $this->request('swap-api/v1/swap_elite_account_ratio', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_elite_position_ratio($params = array()) {
        return $this->request('swap-api/v1/swap_elite_position_ratio', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_estimated_settlement_price($params = array()) {
        return $this->request('swap-api/v1/swap_estimated_settlement_price', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_liquidation_orders($params = array()) {
        return $this->request('swap-api/v1/swap_liquidation_orders', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_settlement_records($params = array()) {
        return $this->request('swap-api/v1/swap_settlement_records', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_funding_rate($params = array()) {
        return $this->request('swap-api/v1/swap_funding_rate', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_batch_funding_rate($params = array()) {
        return $this->request('swap-api/v1/swap_batch_funding_rate', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_swap_historical_funding_rate($params = array()) {
        return $this->request('swap-api/v1/swap_historical_funding_rate', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v3_swap_liquidation_orders($params = array()) {
        return $this->request('swap-api/v3/swap_liquidation_orders', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_index_market_history_swap_estimated_rate_kline($params = array()) {
        return $this->request('index/market/history/swap_estimated_rate_kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_index_market_history_swap_basis($params = array()) {
        return $this->request('index/market/history/swap_basis', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_contract_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_contract_info', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_index($params = array()) {
        return $this->request('linear-swap-api/v1/swap_index', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_query_elements($params = array()) {
        return $this->request('linear-swap-api/v1/swap_query_elements', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_price_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_price_limit', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_open_interest($params = array()) {
        return $this->request('linear-swap-api/v1/swap_open_interest', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_ex_market_depth($params = array()) {
        return $this->request('linear-swap-ex/market/depth', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_ex_market_bbo($params = array()) {
        return $this->request('linear-swap-ex/market/bbo', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_ex_market_history_kline($params = array()) {
        return $this->request('linear-swap-ex/market/history/kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_index_market_history_linear_swap_mark_price_kline($params = array()) {
        return $this->request('index/market/history/linear_swap_mark_price_kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_ex_market_detail_merged($params = array()) {
        return $this->request('linear-swap-ex/market/detail/merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_ex_market_detail_batch_merged($params = array()) {
        return $this->request('linear-swap-ex/market/detail/batch_merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_v2_linear_swap_ex_market_detail_batch_merged($params = array()) {
        return $this->request('v2/linear-swap-ex/market/detail/batch_merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_ex_market_trade($params = array()) {
        return $this->request('linear-swap-ex/market/trade', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_ex_market_history_trade($params = array()) {
        return $this->request('linear-swap-ex/market/history/trade', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_risk_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_risk_info', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_swap_api_v1_linear_swap_api_v1_swap_insurance_fund($params = array()) {
        return $this->request('swap-api/v1/linear-swap-api/v1/swap_insurance_fund', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_adjustfactor($params = array()) {
        return $this->request('linear-swap-api/v1/swap_adjustfactor', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_cross_adjustfactor($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_adjustfactor', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_his_open_interest($params = array()) {
        return $this->request('linear-swap-api/v1/swap_his_open_interest', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_ladder_margin($params = array()) {
        return $this->request('linear-swap-api/v1/swap_ladder_margin', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_cross_ladder_margin($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_ladder_margin', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_api_state($params = array()) {
        return $this->request('linear-swap-api/v1/swap_api_state', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_cross_transfer_state($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_transfer_state', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_cross_trade_state($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trade_state', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_elite_account_ratio($params = array()) {
        return $this->request('linear-swap-api/v1/swap_elite_account_ratio', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_elite_position_ratio($params = array()) {
        return $this->request('linear-swap-api/v1/swap_elite_position_ratio', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_liquidation_orders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_liquidation_orders', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_settlement_records($params = array()) {
        return $this->request('linear-swap-api/v1/swap_settlement_records', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_funding_rate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_funding_rate', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_batch_funding_rate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_batch_funding_rate', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_historical_funding_rate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_historical_funding_rate', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v3_swap_liquidation_orders($params = array()) {
        return $this->request('linear-swap-api/v3/swap_liquidation_orders', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_index_market_history_linear_swap_premium_index_kline($params = array()) {
        return $this->request('index/market/history/linear_swap_premium_index_kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_index_market_history_linear_swap_estimated_rate_kline($params = array()) {
        return $this->request('index/market/history/linear_swap_estimated_rate_kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_index_market_history_linear_swap_basis($params = array()) {
        return $this->request('index/market/history/linear_swap_basis', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_public_get_linear_swap_api_v1_swap_estimated_settlement_price($params = array()) {
        return $this->request('linear-swap-api/v1/swap_estimated_settlement_price', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_private_get_api_v1_contract_sub_auth_list($params = array()) {
        return $this->request('api/v1/contract_sub_auth_list', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_private_get_api_v1_contract_api_trading_status($params = array()) {
        return $this->request('api/v1/contract_api_trading_status', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_private_get_swap_api_v1_swap_sub_auth_list($params = array()) {
        return $this->request('swap-api/v1/swap_sub_auth_list', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_private_get_swap_api_v1_swap_api_trading_status($params = array()) {
        return $this->request('swap-api/v1/swap_api_trading_status', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_private_get_linear_swap_api_v1_swap_sub_auth_list($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_auth_list', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_private_get_linear_swap_api_v1_swap_api_trading_status($params = array()) {
        return $this->request('linear-swap-api/v1/swap_api_trading_status', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_private_get_linear_swap_api_v1_swap_cross_position_side($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_position_side', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_private_get_linear_swap_api_v1_swap_position_side($params = array()) {
        return $this->request('linear-swap-api/v1/swap_position_side', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_private_get_linear_swap_api_v3_unified_account_info($params = array()) {
        return $this->request('linear-swap-api/v3/unified_account_info', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_private_get_linear_swap_api_v3_fix_position_margin_change_record($params = array()) {
        return $this->request('linear-swap-api/v3/fix_position_margin_change_record', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_private_get_linear_swap_api_v3_swap_unified_account_type($params = array()) {
        return $this->request('linear-swap-api/v3/swap_unified_account_type', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_private_get_linear_swap_api_v3_linear_swap_overview_account_info($params = array()) {
        return $this->request('linear-swap-api/v3/linear_swap_overview_account_info', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_balance_valuation($params = array()) {
        return $this->request('api/v1/contract_balance_valuation', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_account_info($params = array()) {
        return $this->request('api/v1/contract_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_position_info($params = array()) {
        return $this->request('api/v1/contract_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_sub_auth($params = array()) {
        return $this->request('api/v1/contract_sub_auth', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_sub_account_list($params = array()) {
        return $this->request('api/v1/contract_sub_account_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_sub_account_info_list($params = array()) {
        return $this->request('api/v1/contract_sub_account_info_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_sub_account_info($params = array()) {
        return $this->request('api/v1/contract_sub_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_sub_position_info($params = array()) {
        return $this->request('api/v1/contract_sub_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_financial_record($params = array()) {
        return $this->request('api/v1/contract_financial_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_financial_record_exact($params = array()) {
        return $this->request('api/v1/contract_financial_record_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_user_settlement_records($params = array()) {
        return $this->request('api/v1/contract_user_settlement_records', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_order_limit($params = array()) {
        return $this->request('api/v1/contract_order_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_fee($params = array()) {
        return $this->request('api/v1/contract_fee', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_transfer_limit($params = array()) {
        return $this->request('api/v1/contract_transfer_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_position_limit($params = array()) {
        return $this->request('api/v1/contract_position_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_account_position_info($params = array()) {
        return $this->request('api/v1/contract_account_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_master_sub_transfer($params = array()) {
        return $this->request('api/v1/contract_master_sub_transfer', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_master_sub_transfer_record($params = array()) {
        return $this->request('api/v1/contract_master_sub_transfer_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_available_level_rate($params = array()) {
        return $this->request('api/v1/contract_available_level_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v3_contract_financial_record($params = array()) {
        return $this->request('api/v3/contract_financial_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v3_contract_financial_record_exact($params = array()) {
        return $this->request('api/v3/contract_financial_record_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_cancel_after($params = array()) {
        return $this->request('api/v1/contract-cancel-after', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_order($params = array()) {
        return $this->request('api/v1/contract_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_batchorder($params = array()) {
        return $this->request('api/v1/contract_batchorder', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_cancel($params = array()) {
        return $this->request('api/v1/contract_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_cancelall($params = array()) {
        return $this->request('api/v1/contract_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_switch_lever_rate($params = array()) {
        return $this->request('api/v1/contract_switch_lever_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_lightning_close_position($params = array()) {
        return $this->request('api/v1/lightning_close_position', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_order_info($params = array()) {
        return $this->request('api/v1/contract_order_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_order_detail($params = array()) {
        return $this->request('api/v1/contract_order_detail', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_openorders($params = array()) {
        return $this->request('api/v1/contract_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_hisorders($params = array()) {
        return $this->request('api/v1/contract_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_hisorders_exact($params = array()) {
        return $this->request('api/v1/contract_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_matchresults($params = array()) {
        return $this->request('api/v1/contract_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_matchresults_exact($params = array()) {
        return $this->request('api/v1/contract_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v3_contract_hisorders($params = array()) {
        return $this->request('api/v3/contract_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v3_contract_hisorders_exact($params = array()) {
        return $this->request('api/v3/contract_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v3_contract_matchresults($params = array()) {
        return $this->request('api/v3/contract_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v3_contract_matchresults_exact($params = array()) {
        return $this->request('api/v3/contract_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_trigger_order($params = array()) {
        return $this->request('api/v1/contract_trigger_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_trigger_cancel($params = array()) {
        return $this->request('api/v1/contract_trigger_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_trigger_cancelall($params = array()) {
        return $this->request('api/v1/contract_trigger_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_trigger_openorders($params = array()) {
        return $this->request('api/v1/contract_trigger_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_trigger_hisorders($params = array()) {
        return $this->request('api/v1/contract_trigger_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_tpsl_order($params = array()) {
        return $this->request('api/v1/contract_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_tpsl_cancel($params = array()) {
        return $this->request('api/v1/contract_tpsl_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_tpsl_cancelall($params = array()) {
        return $this->request('api/v1/contract_tpsl_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_tpsl_openorders($params = array()) {
        return $this->request('api/v1/contract_tpsl_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_tpsl_hisorders($params = array()) {
        return $this->request('api/v1/contract_tpsl_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_relation_tpsl_order($params = array()) {
        return $this->request('api/v1/contract_relation_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_track_order($params = array()) {
        return $this->request('api/v1/contract_track_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_track_cancel($params = array()) {
        return $this->request('api/v1/contract_track_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_track_cancelall($params = array()) {
        return $this->request('api/v1/contract_track_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_track_openorders($params = array()) {
        return $this->request('api/v1/contract_track_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_api_v1_contract_track_hisorders($params = array()) {
        return $this->request('api/v1/contract_track_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_balance_valuation($params = array()) {
        return $this->request('swap-api/v1/swap_balance_valuation', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_account_info($params = array()) {
        return $this->request('swap-api/v1/swap_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_position_info($params = array()) {
        return $this->request('swap-api/v1/swap_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_account_position_info($params = array()) {
        return $this->request('swap-api/v1/swap_account_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_sub_auth($params = array()) {
        return $this->request('swap-api/v1/swap_sub_auth', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_sub_account_list($params = array()) {
        return $this->request('swap-api/v1/swap_sub_account_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_sub_account_info_list($params = array()) {
        return $this->request('swap-api/v1/swap_sub_account_info_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_sub_account_info($params = array()) {
        return $this->request('swap-api/v1/swap_sub_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_sub_position_info($params = array()) {
        return $this->request('swap-api/v1/swap_sub_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_financial_record($params = array()) {
        return $this->request('swap-api/v1/swap_financial_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_financial_record_exact($params = array()) {
        return $this->request('swap-api/v1/swap_financial_record_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_user_settlement_records($params = array()) {
        return $this->request('swap-api/v1/swap_user_settlement_records', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_available_level_rate($params = array()) {
        return $this->request('swap-api/v1/swap_available_level_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_order_limit($params = array()) {
        return $this->request('swap-api/v1/swap_order_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_fee($params = array()) {
        return $this->request('swap-api/v1/swap_fee', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_transfer_limit($params = array()) {
        return $this->request('swap-api/v1/swap_transfer_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_position_limit($params = array()) {
        return $this->request('swap-api/v1/swap_position_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_master_sub_transfer($params = array()) {
        return $this->request('swap-api/v1/swap_master_sub_transfer', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_master_sub_transfer_record($params = array()) {
        return $this->request('swap-api/v1/swap_master_sub_transfer_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v3_swap_financial_record($params = array()) {
        return $this->request('swap-api/v3/swap_financial_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v3_swap_financial_record_exact($params = array()) {
        return $this->request('swap-api/v3/swap_financial_record_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_cancel_after($params = array()) {
        return $this->request('swap-api/v1/swap-cancel-after', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_order($params = array()) {
        return $this->request('swap-api/v1/swap_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_batchorder($params = array()) {
        return $this->request('swap-api/v1/swap_batchorder', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_cancel($params = array()) {
        return $this->request('swap-api/v1/swap_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_cancelall($params = array()) {
        return $this->request('swap-api/v1/swap_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_lightning_close_position($params = array()) {
        return $this->request('swap-api/v1/swap_lightning_close_position', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_switch_lever_rate($params = array()) {
        return $this->request('swap-api/v1/swap_switch_lever_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_order_info($params = array()) {
        return $this->request('swap-api/v1/swap_order_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_order_detail($params = array()) {
        return $this->request('swap-api/v1/swap_order_detail', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_openorders($params = array()) {
        return $this->request('swap-api/v1/swap_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_hisorders($params = array()) {
        return $this->request('swap-api/v1/swap_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_hisorders_exact($params = array()) {
        return $this->request('swap-api/v1/swap_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_matchresults($params = array()) {
        return $this->request('swap-api/v1/swap_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_matchresults_exact($params = array()) {
        return $this->request('swap-api/v1/swap_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v3_swap_matchresults($params = array()) {
        return $this->request('swap-api/v3/swap_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v3_swap_matchresults_exact($params = array()) {
        return $this->request('swap-api/v3/swap_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v3_swap_hisorders($params = array()) {
        return $this->request('swap-api/v3/swap_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v3_swap_hisorders_exact($params = array()) {
        return $this->request('swap-api/v3/swap_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_trigger_order($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_trigger_cancel($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_trigger_cancelall($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_trigger_openorders($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_trigger_hisorders($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_tpsl_order($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_tpsl_cancel($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_tpsl_cancelall($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_tpsl_openorders($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_tpsl_hisorders($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_relation_tpsl_order($params = array()) {
        return $this->request('swap-api/v1/swap_relation_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_track_order($params = array()) {
        return $this->request('swap-api/v1/swap_track_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_track_cancel($params = array()) {
        return $this->request('swap-api/v1/swap_track_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_track_cancelall($params = array()) {
        return $this->request('swap-api/v1/swap_track_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_track_openorders($params = array()) {
        return $this->request('swap-api/v1/swap_track_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_swap_api_v1_swap_track_hisorders($params = array()) {
        return $this->request('swap-api/v1/swap_track_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_lever_position_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_lever_position_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_lever_position_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_lever_position_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_balance_valuation($params = array()) {
        return $this->request('linear-swap-api/v1/swap_balance_valuation', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_account_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_account_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_position_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_position_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_account_position_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_account_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_account_position_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_account_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_sub_auth($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_auth', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_sub_account_list($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_account_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_sub_account_list($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_sub_account_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_sub_account_info_list($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_account_info_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_sub_account_info_list($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_sub_account_info_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_sub_account_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_sub_account_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_sub_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_sub_position_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_sub_position_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_sub_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_financial_record($params = array()) {
        return $this->request('linear-swap-api/v1/swap_financial_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_financial_record_exact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_financial_record_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_user_settlement_records($params = array()) {
        return $this->request('linear-swap-api/v1/swap_user_settlement_records', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_user_settlement_records($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_user_settlement_records', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_available_level_rate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_available_level_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_available_level_rate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_available_level_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_order_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_order_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_fee($params = array()) {
        return $this->request('linear-swap-api/v1/swap_fee', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_transfer_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_transfer_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_transfer_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_transfer_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_position_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_position_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_position_limit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_position_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_master_sub_transfer($params = array()) {
        return $this->request('linear-swap-api/v1/swap_master_sub_transfer', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_master_sub_transfer_record($params = array()) {
        return $this->request('linear-swap-api/v1/swap_master_sub_transfer_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_transfer_inner($params = array()) {
        return $this->request('linear-swap-api/v1/swap_transfer_inner', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v3_swap_financial_record($params = array()) {
        return $this->request('linear-swap-api/v3/swap_financial_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v3_swap_financial_record_exact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_financial_record_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_batchorder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_batchorder', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_batchorder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_batchorder', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_switch_lever_rate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_switch_lever_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_switch_lever_rate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_switch_lever_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_lightning_close_position($params = array()) {
        return $this->request('linear-swap-api/v1/swap_lightning_close_position', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_lightning_close_position($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_lightning_close_position', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_order_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_order_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_order_info($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_order_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_order_detail($params = array()) {
        return $this->request('linear-swap-api/v1/swap_order_detail', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_order_detail($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_order_detail', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_hisorders_exact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_hisorders_exact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_matchresults($params = array()) {
        return $this->request('linear-swap-api/v1/swap_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_matchresults($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_matchresults_exact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_matchresults_exact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_linear_cancel_after($params = array()) {
        return $this->request('linear-swap-api/v1/linear-cancel-after', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_switch_position_mode($params = array()) {
        return $this->request('linear-swap-api/v1/swap_switch_position_mode', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_switch_position_mode($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_switch_position_mode', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v3_swap_matchresults($params = array()) {
        return $this->request('linear-swap-api/v3/swap_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v3_swap_cross_matchresults($params = array()) {
        return $this->request('linear-swap-api/v3/swap_cross_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v3_swap_matchresults_exact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v3_swap_cross_matchresults_exact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_cross_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v3_swap_hisorders($params = array()) {
        return $this->request('linear-swap-api/v3/swap_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v3_swap_cross_hisorders($params = array()) {
        return $this->request('linear-swap-api/v3/swap_cross_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v3_swap_hisorders_exact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v3_swap_cross_hisorders_exact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_cross_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v3_fix_position_margin_change($params = array()) {
        return $this->request('linear-swap-api/v3/fix_position_margin_change', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v3_swap_switch_account_type($params = array()) {
        return $this->request('linear-swap-api/v3/swap_switch_account_type', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v3_linear_swap_fee_switch($params = array()) {
        return $this->request('linear-swap-api/v3/linear_swap_fee_switch', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_trigger_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_trigger_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_trigger_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_trigger_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_trigger_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_trigger_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_trigger_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_trigger_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_trigger_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_trigger_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_tpsl_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_tpsl_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_tpsl_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_tpsl_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_tpsl_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_tpsl_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_tpsl_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_tpsl_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_tpsl_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_tpsl_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_relation_tpsl_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_relation_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_relation_tpsl_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_relation_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_track_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_track_order($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_track_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_track_cancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_track_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_track_cancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_track_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_track_openorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_track_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contract_private_post_linear_swap_api_v1_swap_cross_track_hisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PublicGetReferenceCurrencies($params = array()) {
        return $this->request('reference/currencies', 'v2Public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PublicGetMarketStatus($params = array()) {
        return $this->request('market-status', 'v2Public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAccountLedger($params = array()) {
        return $this->request('account/ledger', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAccountWithdrawQuota($params = array()) {
        return $this->request('account/withdraw/quota', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAccountWithdrawAddress($params = array()) {
        return $this->request('account/withdraw/address', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAccountDepositAddress($params = array()) {
        return $this->request('account/deposit/address', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAccountRepayment($params = array()) {
        return $this->request('account/repayment', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2PrivateGetReferenceTransactFeeRate($params = array()) {
        return $this->request('reference/transact-fee-rate', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAccountAssetValuation($params = array()) {
        return $this->request('account/asset-valuation', 'v2Private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function v2PrivateGetPointAccount($params = array()) {
        return $this->request('point/account', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2PrivateGetSubUserUserList($params = array()) {
        return $this->request('sub-user/user-list', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetSubUserUserState($params = array()) {
        return $this->request('sub-user/user-state', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetSubUserAccountList($params = array()) {
        return $this->request('sub-user/account-list', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetSubUserDepositAddress($params = array()) {
        return $this->request('sub-user/deposit-address', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetSubUserQueryDeposit($params = array()) {
        return $this->request('sub-user/query-deposit', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetUserApiKey($params = array()) {
        return $this->request('user/api-key', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetUserUid($params = array()) {
        return $this->request('user/uid', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAlgoOrdersOpening($params = array()) {
        return $this->request('algo-orders/opening', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAlgoOrdersHistory($params = array()) {
        return $this->request('algo-orders/history', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetAlgoOrdersSpecific($params = array()) {
        return $this->request('algo-orders/specific', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetC2cOffers($params = array()) {
        return $this->request('c2c/offers', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetC2cOffer($params = array()) {
        return $this->request('c2c/offer', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetC2cTransactions($params = array()) {
        return $this->request('c2c/transactions', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetC2cRepayment($params = array()) {
        return $this->request('c2c/repayment', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetC2cAccount($params = array()) {
        return $this->request('c2c/account', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetEtpReference($params = array()) {
        return $this->request('etp/reference', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetEtpTransactions($params = array()) {
        return $this->request('etp/transactions', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2PrivateGetEtpTransaction($params = array()) {
        return $this->request('etp/transaction', 'v2Private', 'GET', $params, null, null, array("cost" => 5));
    }
    public function v2PrivateGetEtpRebalance($params = array()) {
        return $this->request('etp/rebalance', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivateGetEtpLimit($params = array()) {
        return $this->request('etp/limit', 'v2Private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostAccountTransfer($params = array()) {
        return $this->request('account/transfer', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostAccountRepayment($params = array()) {
        return $this->request('account/repayment', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2PrivatePostPointTransfer($params = array()) {
        return $this->request('point/transfer', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2PrivatePostSubUserManagement($params = array()) {
        return $this->request('sub-user/management', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostSubUserCreation($params = array()) {
        return $this->request('sub-user/creation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostSubUserTradableMarket($params = array()) {
        return $this->request('sub-user/tradable-market', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostSubUserTransferability($params = array()) {
        return $this->request('sub-user/transferability', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostSubUserApiKeyGeneration($params = array()) {
        return $this->request('sub-user/api-key-generation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostSubUserApiKeyModification($params = array()) {
        return $this->request('sub-user/api-key-modification', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostSubUserApiKeyDeletion($params = array()) {
        return $this->request('sub-user/api-key-deletion', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostSubUserDeductMode($params = array()) {
        return $this->request('sub-user/deduct-mode', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostAlgoOrders($params = array()) {
        return $this->request('algo-orders', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostAlgoOrdersCancelAllAfter($params = array()) {
        return $this->request('algo-orders/cancel-all-after', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostAlgoOrdersCancellation($params = array()) {
        return $this->request('algo-orders/cancellation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostC2cOffer($params = array()) {
        return $this->request('c2c/offer', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostC2cCancellation($params = array()) {
        return $this->request('c2c/cancellation', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostC2cCancelAll($params = array()) {
        return $this->request('c2c/cancel-all', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostC2cRepayment($params = array()) {
        return $this->request('c2c/repayment', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostC2cTransfer($params = array()) {
        return $this->request('c2c/transfer', 'v2Private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function v2PrivatePostEtpCreation($params = array()) {
        return $this->request('etp/creation', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2PrivatePostEtpRedemption($params = array()) {
        return $this->request('etp/redemption', 'v2Private', 'POST', $params, null, null, array("cost" => 5));
    }
    public function v2PrivatePostEtpTransactIdCancel($params = array()) {
        return $this->request('etp/{transactId}/cancel', 'v2Private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function v2PrivatePostEtpBatchCancel($params = array()) {
        return $this->request('etp/batch-cancel', 'v2Private', 'POST', $params, null, null, array("cost" => 50));
    }
    public function publicGetCommonSymbols($params = array()) {
        return $this->request('common/symbols', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetCommonCurrencys($params = array()) {
        return $this->request('common/currencys', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetCommonTimestamp($params = array()) {
        return $this->request('common/timestamp', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetCommonExchange($params = array()) {
        return $this->request('common/exchange', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function publicGetSettingsCurrencys($params = array()) {
        return $this->request('settings/currencys', 'public', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetAccountAccounts($params = array()) {
        return $this->request('account/accounts', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function privateGetAccountAccountsIdBalance($params = array()) {
        return $this->request('account/accounts/{id}/balance', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function privateGetAccountAccountsSubUid($params = array()) {
        return $this->request('account/accounts/{sub-uid}', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetAccountHistory($params = array()) {
        return $this->request('account/history', 'private', 'GET', $params, null, null, array("cost" => 4));
    }
    public function privateGetCrossMarginLoanInfo($params = array()) {
        return $this->request('cross-margin/loan-info', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetMarginLoanInfo($params = array()) {
        return $this->request('margin/loan-info', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetFeeFeeRateGet($params = array()) {
        return $this->request('fee/fee-rate/get', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetOrderOpenOrders($params = array()) {
        return $this->request('order/openOrders', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function privateGetOrderOrders($params = array()) {
        return $this->request('order/orders', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function privateGetOrderOrdersId($params = array()) {
        return $this->request('order/orders/{id}', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function privateGetOrderOrdersIdMatchresults($params = array()) {
        return $this->request('order/orders/{id}/matchresults', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function privateGetOrderOrdersGetClientOrder($params = array()) {
        return $this->request('order/orders/getClientOrder', 'private', 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function privateGetOrderHistory($params = array()) {
        return $this->request('order/history', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetOrderMatchresults($params = array()) {
        return $this->request('order/matchresults', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetQueryDepositWithdraw($params = array()) {
        return $this->request('query/deposit-withdraw', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetMarginLoanOrders($params = array()) {
        return $this->request('margin/loan-orders', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function privateGetMarginAccountsBalance($params = array()) {
        return $this->request('margin/accounts/balance', 'private', 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function privateGetCrossMarginLoanOrders($params = array()) {
        return $this->request('cross-margin/loan-orders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetCrossMarginAccountsBalance($params = array()) {
        return $this->request('cross-margin/accounts/balance', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetPointsActions($params = array()) {
        return $this->request('points/actions', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetPointsOrders($params = array()) {
        return $this->request('points/orders', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetSubuserAggregateBalance($params = array()) {
        return $this->request('subuser/aggregate-balance', 'private', 'GET', $params, null, null, array("cost" => 10));
    }
    public function privateGetStableCoinExchangeRate($params = array()) {
        return $this->request('stable-coin/exchange_rate', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privateGetStableCoinQuote($params = array()) {
        return $this->request('stable-coin/quote', 'private', 'GET', $params, null, null, array("cost" => 1));
    }
    public function privatePostAccountTransfer($params = array()) {
        return $this->request('account/transfer', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostFuturesTransfer($params = array()) {
        return $this->request('futures/transfer', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostOrderBatchOrders($params = array()) {
        return $this->request('order/batch-orders', 'private', 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function privatePostOrderOrdersPlace($params = array()) {
        return $this->request('order/orders/place', 'private', 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function privatePostOrderOrdersSubmitCancelClientOrder($params = array()) {
        return $this->request('order/orders/submitCancelClientOrder', 'private', 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function privatePostOrderOrdersBatchCancelOpenOrders($params = array()) {
        return $this->request('order/orders/batchCancelOpenOrders', 'private', 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function privatePostOrderOrdersIdSubmitcancel($params = array()) {
        return $this->request('order/orders/{id}/submitcancel', 'private', 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function privatePostOrderOrdersBatchcancel($params = array()) {
        return $this->request('order/orders/batchcancel', 'private', 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function privatePostDwWithdrawApiCreate($params = array()) {
        return $this->request('dw/withdraw/api/create', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostDwWithdrawVirtualIdCancel($params = array()) {
        return $this->request('dw/withdraw-virtual/{id}/cancel', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostDwTransferInMargin($params = array()) {
        return $this->request('dw/transfer-in/margin', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function privatePostDwTransferOutMargin($params = array()) {
        return $this->request('dw/transfer-out/margin', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function privatePostMarginOrders($params = array()) {
        return $this->request('margin/orders', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function privatePostMarginOrdersIdRepay($params = array()) {
        return $this->request('margin/orders/{id}/repay', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function privatePostCrossMarginTransferIn($params = array()) {
        return $this->request('cross-margin/transfer-in', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostCrossMarginTransferOut($params = array()) {
        return $this->request('cross-margin/transfer-out', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostCrossMarginOrders($params = array()) {
        return $this->request('cross-margin/orders', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostCrossMarginOrdersIdRepay($params = array()) {
        return $this->request('cross-margin/orders/{id}/repay', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostStableCoinExchange($params = array()) {
        return $this->request('stable-coin/exchange', 'private', 'POST', $params, null, null, array("cost" => 1));
    }
    public function privatePostSubuserTransfer($params = array()) {
        return $this->request('subuser/transfer', 'private', 'POST', $params, null, null, array("cost" => 10));
    }
    public function statusPublicSpotGetApiV2SummaryJson($params = array()) {
        return $this->request('api/v2/summary.json', array('status', 'public', 'spot'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function statusPublicFutureInverseGetApiV2SummaryJson($params = array()) {
        return $this->request('api/v2/summary.json', array('status', 'public', 'future', 'inverse'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function statusPublicFutureLinearGetApiV2SummaryJson($params = array()) {
        return $this->request('api/v2/summary.json', array('status', 'public', 'future', 'linear'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function statusPublicSwapInverseGetApiV2SummaryJson($params = array()) {
        return $this->request('api/v2/summary.json', array('status', 'public', 'swap', 'inverse'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function statusPublicSwapLinearGetApiV2SummaryJson($params = array()) {
        return $this->request('api/v2/summary.json', array('status', 'public', 'swap', 'linear'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetV2MarketStatus($params = array()) {
        return $this->request('v2/market-status', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetV1CommonSymbols($params = array()) {
        return $this->request('v1/common/symbols', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetV1CommonCurrencys($params = array()) {
        return $this->request('v1/common/currencys', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetV2SettingsCommonCurrencies($params = array()) {
        return $this->request('v2/settings/common/currencies', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetV2ReferenceCurrencies($params = array()) {
        return $this->request('v2/reference/currencies', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetV1CommonTimestamp($params = array()) {
        return $this->request('v1/common/timestamp', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetV1CommonExchange($params = array()) {
        return $this->request('v1/common/exchange', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetV1SettingsCommonChains($params = array()) {
        return $this->request('v1/settings/common/chains', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetV1SettingsCommonCurrencys($params = array()) {
        return $this->request('v1/settings/common/currencys', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetV1SettingsCommonSymbols($params = array()) {
        return $this->request('v1/settings/common/symbols', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetV2SettingsCommonSymbols($params = array()) {
        return $this->request('v2/settings/common/symbols', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetV1SettingsCommonMarketSymbols($params = array()) {
        return $this->request('v1/settings/common/market-symbols', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetMarketHistoryCandles($params = array()) {
        return $this->request('market/history/candles', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetMarketHistoryKline($params = array()) {
        return $this->request('market/history/kline', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetMarketDetailMerged($params = array()) {
        return $this->request('market/detail/merged', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetMarketTickers($params = array()) {
        return $this->request('market/tickers', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetMarketDetail($params = array()) {
        return $this->request('market/detail', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetMarketDepth($params = array()) {
        return $this->request('market/depth', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetMarketTrade($params = array()) {
        return $this->request('market/trade', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetMarketHistoryTrade($params = array()) {
        return $this->request('market/history/trade', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetMarketEtp($params = array()) {
        return $this->request('market/etp', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetV2EtpReference($params = array()) {
        return $this->request('v2/etp/reference', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPublicGetV2EtpRebalance($params = array()) {
        return $this->request('v2/etp/rebalance', array('spot', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV1AccountAccounts($params = array()) {
        return $this->request('v1/account/accounts', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function spotPrivateGetV1AccountAccountsAccountIdBalance($params = array()) {
        return $this->request('v1/account/accounts/{account-id}/balance', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function spotPrivateGetV2AccountValuation($params = array()) {
        return $this->request('v2/account/valuation', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2AccountAssetValuation($params = array()) {
        return $this->request('v2/account/asset-valuation', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function spotPrivateGetV1AccountHistory($params = array()) {
        return $this->request('v1/account/history', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 4));
    }
    public function spotPrivateGetV2AccountLedger($params = array()) {
        return $this->request('v2/account/ledger', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2PointAccount($params = array()) {
        return $this->request('v2/point/account', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 5));
    }
    public function spotPrivateGetV2AccountDepositAddress($params = array()) {
        return $this->request('v2/account/deposit/address', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2AccountWithdrawQuota($params = array()) {
        return $this->request('v2/account/withdraw/quota', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2AccountWithdrawAddress($params = array()) {
        return $this->request('v2/account/withdraw/address', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2ReferenceCurrencies($params = array()) {
        return $this->request('v2/reference/currencies', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV1QueryDepositWithdraw($params = array()) {
        return $this->request('v1/query/deposit-withdraw', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV1QueryWithdrawClientOrderId($params = array()) {
        return $this->request('v1/query/withdraw/client-order-id', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2UserApiKey($params = array()) {
        return $this->request('v2/user/api-key', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2UserUid($params = array()) {
        return $this->request('v2/user/uid', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2SubUserUserList($params = array()) {
        return $this->request('v2/sub-user/user-list', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2SubUserUserState($params = array()) {
        return $this->request('v2/sub-user/user-state', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2SubUserAccountList($params = array()) {
        return $this->request('v2/sub-user/account-list', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2SubUserDepositAddress($params = array()) {
        return $this->request('v2/sub-user/deposit-address', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2SubUserQueryDeposit($params = array()) {
        return $this->request('v2/sub-user/query-deposit', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV1SubuserAggregateBalance($params = array()) {
        return $this->request('v1/subuser/aggregate-balance', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 10));
    }
    public function spotPrivateGetV1AccountAccountsSubUid($params = array()) {
        return $this->request('v1/account/accounts/{sub-uid}', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV1OrderOpenOrders($params = array()) {
        return $this->request('v1/order/openOrders', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function spotPrivateGetV1OrderOrdersOrderId($params = array()) {
        return $this->request('v1/order/orders/{order-id}', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function spotPrivateGetV1OrderOrdersGetClientOrder($params = array()) {
        return $this->request('v1/order/orders/getClientOrder', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function spotPrivateGetV1OrderOrdersOrderIdMatchresult($params = array()) {
        return $this->request('v1/order/orders/{order-id}/matchresult', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function spotPrivateGetV1OrderOrdersOrderIdMatchresults($params = array()) {
        return $this->request('v1/order/orders/{order-id}/matchresults', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function spotPrivateGetV1OrderOrders($params = array()) {
        return $this->request('v1/order/orders', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.4));
    }
    public function spotPrivateGetV1OrderHistory($params = array()) {
        return $this->request('v1/order/history', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV1OrderMatchresults($params = array()) {
        return $this->request('v1/order/matchresults', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2ReferenceTransactFeeRate($params = array()) {
        return $this->request('v2/reference/transact-fee-rate', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2AlgoOrdersOpening($params = array()) {
        return $this->request('v2/algo-orders/opening', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2AlgoOrdersHistory($params = array()) {
        return $this->request('v2/algo-orders/history', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2AlgoOrdersSpecific($params = array()) {
        return $this->request('v2/algo-orders/specific', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV1MarginLoanInfo($params = array()) {
        return $this->request('v1/margin/loan-info', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV1MarginLoanOrders($params = array()) {
        return $this->request('v1/margin/loan-orders', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function spotPrivateGetV1MarginAccountsBalance($params = array()) {
        return $this->request('v1/margin/accounts/balance', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 0.2));
    }
    public function spotPrivateGetV1CrossMarginLoanInfo($params = array()) {
        return $this->request('v1/cross-margin/loan-info', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV1CrossMarginLoanOrders($params = array()) {
        return $this->request('v1/cross-margin/loan-orders', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV1CrossMarginAccountsBalance($params = array()) {
        return $this->request('v1/cross-margin/accounts/balance', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2AccountRepayment($params = array()) {
        return $this->request('v2/account/repayment', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 5));
    }
    public function spotPrivateGetV1StableCoinQuote($params = array()) {
        return $this->request('v1/stable-coin/quote', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV1StableCoinExchangeRate($params = array()) {
        return $this->request('v1/stable_coin/exchange_rate', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivateGetV2EtpTransactions($params = array()) {
        return $this->request('v2/etp/transactions', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 5));
    }
    public function spotPrivateGetV2EtpTransaction($params = array()) {
        return $this->request('v2/etp/transaction', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 5));
    }
    public function spotPrivateGetV2EtpLimit($params = array()) {
        return $this->request('v2/etp/limit', array('spot', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV1AccountTransfer($params = array()) {
        return $this->request('v1/account/transfer', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV1FuturesTransfer($params = array()) {
        return $this->request('v1/futures/transfer', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV2PointTransfer($params = array()) {
        return $this->request('v2/point/transfer', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 5));
    }
    public function spotPrivatePostV2AccountTransfer($params = array()) {
        return $this->request('v2/account/transfer', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV1DwWithdrawApiCreate($params = array()) {
        return $this->request('v1/dw/withdraw/api/create', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV1DwWithdrawVirtualWithdrawIdCancel($params = array()) {
        return $this->request('v1/dw/withdraw-virtual/{withdraw-id}/cancel', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV2SubUserDeductMode($params = array()) {
        return $this->request('v2/sub-user/deduct-mode', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV2SubUserCreation($params = array()) {
        return $this->request('v2/sub-user/creation', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV2SubUserManagement($params = array()) {
        return $this->request('v2/sub-user/management', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV2SubUserTradableMarket($params = array()) {
        return $this->request('v2/sub-user/tradable-market', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV2SubUserTransferability($params = array()) {
        return $this->request('v2/sub-user/transferability', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV2SubUserApiKeyGeneration($params = array()) {
        return $this->request('v2/sub-user/api-key-generation', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV2SubUserApiKeyModification($params = array()) {
        return $this->request('v2/sub-user/api-key-modification', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV2SubUserApiKeyDeletion($params = array()) {
        return $this->request('v2/sub-user/api-key-deletion', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV1SubuserTransfer($params = array()) {
        return $this->request('v1/subuser/transfer', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 10));
    }
    public function spotPrivatePostV1OrderOrdersPlace($params = array()) {
        return $this->request('v1/order/orders/place', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function spotPrivatePostV1OrderBatchOrders($params = array()) {
        return $this->request('v1/order/batch-orders', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function spotPrivatePostV1OrderAutoPlace($params = array()) {
        return $this->request('v1/order/auto/place', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function spotPrivatePostV1OrderOrdersOrderIdSubmitcancel($params = array()) {
        return $this->request('v1/order/orders/{order-id}/submitcancel', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function spotPrivatePostV1OrderOrdersSubmitCancelClientOrder($params = array()) {
        return $this->request('v1/order/orders/submitCancelClientOrder', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 0.2));
    }
    public function spotPrivatePostV1OrderOrdersBatchCancelOpenOrders($params = array()) {
        return $this->request('v1/order/orders/batchCancelOpenOrders', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function spotPrivatePostV1OrderOrdersBatchcancel($params = array()) {
        return $this->request('v1/order/orders/batchcancel', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 0.4));
    }
    public function spotPrivatePostV2AlgoOrdersCancelAllAfter($params = array()) {
        return $this->request('v2/algo-orders/cancel-all-after', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV2AlgoOrders($params = array()) {
        return $this->request('v2/algo-orders', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV2AlgoOrdersCancellation($params = array()) {
        return $this->request('v2/algo-orders/cancellation', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV2AccountRepayment($params = array()) {
        return $this->request('v2/account/repayment', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 5));
    }
    public function spotPrivatePostV1DwTransferInMargin($params = array()) {
        return $this->request('v1/dw/transfer-in/margin', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 10));
    }
    public function spotPrivatePostV1DwTransferOutMargin($params = array()) {
        return $this->request('v1/dw/transfer-out/margin', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 10));
    }
    public function spotPrivatePostV1MarginOrders($params = array()) {
        return $this->request('v1/margin/orders', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 10));
    }
    public function spotPrivatePostV1MarginOrdersOrderIdRepay($params = array()) {
        return $this->request('v1/margin/orders/{order-id}/repay', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 10));
    }
    public function spotPrivatePostV1CrossMarginTransferIn($params = array()) {
        return $this->request('v1/cross-margin/transfer-in', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV1CrossMarginTransferOut($params = array()) {
        return $this->request('v1/cross-margin/transfer-out', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV1CrossMarginOrders($params = array()) {
        return $this->request('v1/cross-margin/orders', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV1CrossMarginOrdersOrderIdRepay($params = array()) {
        return $this->request('v1/cross-margin/orders/{order-id}/repay', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV1StableCoinExchange($params = array()) {
        return $this->request('v1/stable-coin/exchange', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function spotPrivatePostV2EtpCreation($params = array()) {
        return $this->request('v2/etp/creation', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 5));
    }
    public function spotPrivatePostV2EtpRedemption($params = array()) {
        return $this->request('v2/etp/redemption', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 5));
    }
    public function spotPrivatePostV2EtpTransactIdCancel($params = array()) {
        return $this->request('v2/etp/{transactId}/cancel', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 10));
    }
    public function spotPrivatePostV2EtpBatchCancel($params = array()) {
        return $this->request('v2/etp/batch-cancel', array('spot', 'private'), 'POST', $params, null, null, array("cost" => 50));
    }
    public function contractPublicGetApiV1Timestamp($params = array()) {
        return $this->request('api/v1/timestamp', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetHeartbeat($params = array()) {
        return $this->request('heartbeat/', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractContractInfo($params = array()) {
        return $this->request('api/v1/contract_contract_info', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractIndex($params = array()) {
        return $this->request('api/v1/contract_index', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractQueryElements($params = array()) {
        return $this->request('api/v1/contract_query_elements', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractPriceLimit($params = array()) {
        return $this->request('api/v1/contract_price_limit', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractOpenInterest($params = array()) {
        return $this->request('api/v1/contract_open_interest', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractDeliveryPrice($params = array()) {
        return $this->request('api/v1/contract_delivery_price', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetMarketDepth($params = array()) {
        return $this->request('market/depth', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetMarketBbo($params = array()) {
        return $this->request('market/bbo', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetMarketHistoryKline($params = array()) {
        return $this->request('market/history/kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetIndexMarketHistoryMarkPriceKline($params = array()) {
        return $this->request('index/market/history/mark_price_kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetMarketDetailMerged($params = array()) {
        return $this->request('market/detail/merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetMarketDetailBatchMerged($params = array()) {
        return $this->request('market/detail/batch_merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetV2MarketDetailBatchMerged($params = array()) {
        return $this->request('v2/market/detail/batch_merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetMarketTrade($params = array()) {
        return $this->request('market/trade', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetMarketHistoryTrade($params = array()) {
        return $this->request('market/history/trade', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractRiskInfo($params = array()) {
        return $this->request('api/v1/contract_risk_info', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractInsuranceFund($params = array()) {
        return $this->request('api/v1/contract_insurance_fund', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractAdjustfactor($params = array()) {
        return $this->request('api/v1/contract_adjustfactor', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractHisOpenInterest($params = array()) {
        return $this->request('api/v1/contract_his_open_interest', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractLadderMargin($params = array()) {
        return $this->request('api/v1/contract_ladder_margin', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractApiState($params = array()) {
        return $this->request('api/v1/contract_api_state', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractEliteAccountRatio($params = array()) {
        return $this->request('api/v1/contract_elite_account_ratio', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractElitePositionRatio($params = array()) {
        return $this->request('api/v1/contract_elite_position_ratio', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractLiquidationOrders($params = array()) {
        return $this->request('api/v1/contract_liquidation_orders', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractSettlementRecords($params = array()) {
        return $this->request('api/v1/contract_settlement_records', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetIndexMarketHistoryIndex($params = array()) {
        return $this->request('index/market/history/index', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetIndexMarketHistoryBasis($params = array()) {
        return $this->request('index/market/history/basis', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV1ContractEstimatedSettlementPrice($params = array()) {
        return $this->request('api/v1/contract_estimated_settlement_price', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetApiV3ContractLiquidationOrders($params = array()) {
        return $this->request('api/v3/contract_liquidation_orders', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapContractInfo($params = array()) {
        return $this->request('swap-api/v1/swap_contract_info', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapIndex($params = array()) {
        return $this->request('swap-api/v1/swap_index', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapQueryElements($params = array()) {
        return $this->request('swap-api/v1/swap_query_elements', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapPriceLimit($params = array()) {
        return $this->request('swap-api/v1/swap_price_limit', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapOpenInterest($params = array()) {
        return $this->request('swap-api/v1/swap_open_interest', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapExMarketDepth($params = array()) {
        return $this->request('swap-ex/market/depth', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapExMarketBbo($params = array()) {
        return $this->request('swap-ex/market/bbo', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapExMarketHistoryKline($params = array()) {
        return $this->request('swap-ex/market/history/kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetIndexMarketHistorySwapMarkPriceKline($params = array()) {
        return $this->request('index/market/history/swap_mark_price_kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapExMarketDetailMerged($params = array()) {
        return $this->request('swap-ex/market/detail/merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetV2SwapExMarketDetailBatchMerged($params = array()) {
        return $this->request('v2/swap-ex/market/detail/batch_merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetIndexMarketHistorySwapPremiumIndexKline($params = array()) {
        return $this->request('index/market/history/swap_premium_index_kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapExMarketDetailBatchMerged($params = array()) {
        return $this->request('swap-ex/market/detail/batch_merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapExMarketTrade($params = array()) {
        return $this->request('swap-ex/market/trade', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapExMarketHistoryTrade($params = array()) {
        return $this->request('swap-ex/market/history/trade', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapRiskInfo($params = array()) {
        return $this->request('swap-api/v1/swap_risk_info', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapInsuranceFund($params = array()) {
        return $this->request('swap-api/v1/swap_insurance_fund', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapAdjustfactor($params = array()) {
        return $this->request('swap-api/v1/swap_adjustfactor', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapHisOpenInterest($params = array()) {
        return $this->request('swap-api/v1/swap_his_open_interest', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapLadderMargin($params = array()) {
        return $this->request('swap-api/v1/swap_ladder_margin', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapApiState($params = array()) {
        return $this->request('swap-api/v1/swap_api_state', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapEliteAccountRatio($params = array()) {
        return $this->request('swap-api/v1/swap_elite_account_ratio', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapElitePositionRatio($params = array()) {
        return $this->request('swap-api/v1/swap_elite_position_ratio', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapEstimatedSettlementPrice($params = array()) {
        return $this->request('swap-api/v1/swap_estimated_settlement_price', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapLiquidationOrders($params = array()) {
        return $this->request('swap-api/v1/swap_liquidation_orders', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapSettlementRecords($params = array()) {
        return $this->request('swap-api/v1/swap_settlement_records', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapFundingRate($params = array()) {
        return $this->request('swap-api/v1/swap_funding_rate', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapBatchFundingRate($params = array()) {
        return $this->request('swap-api/v1/swap_batch_funding_rate', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1SwapHistoricalFundingRate($params = array()) {
        return $this->request('swap-api/v1/swap_historical_funding_rate', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV3SwapLiquidationOrders($params = array()) {
        return $this->request('swap-api/v3/swap_liquidation_orders', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetIndexMarketHistorySwapEstimatedRateKline($params = array()) {
        return $this->request('index/market/history/swap_estimated_rate_kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetIndexMarketHistorySwapBasis($params = array()) {
        return $this->request('index/market/history/swap_basis', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapContractInfo($params = array()) {
        return $this->request('linear-swap-api/v1/swap_contract_info', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapIndex($params = array()) {
        return $this->request('linear-swap-api/v1/swap_index', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapQueryElements($params = array()) {
        return $this->request('linear-swap-api/v1/swap_query_elements', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapPriceLimit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_price_limit', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapOpenInterest($params = array()) {
        return $this->request('linear-swap-api/v1/swap_open_interest', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapExMarketDepth($params = array()) {
        return $this->request('linear-swap-ex/market/depth', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapExMarketBbo($params = array()) {
        return $this->request('linear-swap-ex/market/bbo', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapExMarketHistoryKline($params = array()) {
        return $this->request('linear-swap-ex/market/history/kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetIndexMarketHistoryLinearSwapMarkPriceKline($params = array()) {
        return $this->request('index/market/history/linear_swap_mark_price_kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapExMarketDetailMerged($params = array()) {
        return $this->request('linear-swap-ex/market/detail/merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapExMarketDetailBatchMerged($params = array()) {
        return $this->request('linear-swap-ex/market/detail/batch_merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetV2LinearSwapExMarketDetailBatchMerged($params = array()) {
        return $this->request('v2/linear-swap-ex/market/detail/batch_merged', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapExMarketTrade($params = array()) {
        return $this->request('linear-swap-ex/market/trade', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapExMarketHistoryTrade($params = array()) {
        return $this->request('linear-swap-ex/market/history/trade', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapRiskInfo($params = array()) {
        return $this->request('linear-swap-api/v1/swap_risk_info', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetSwapApiV1LinearSwapApiV1SwapInsuranceFund($params = array()) {
        return $this->request('swap-api/v1/linear-swap-api/v1/swap_insurance_fund', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapAdjustfactor($params = array()) {
        return $this->request('linear-swap-api/v1/swap_adjustfactor', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapCrossAdjustfactor($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_adjustfactor', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapHisOpenInterest($params = array()) {
        return $this->request('linear-swap-api/v1/swap_his_open_interest', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapLadderMargin($params = array()) {
        return $this->request('linear-swap-api/v1/swap_ladder_margin', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapCrossLadderMargin($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_ladder_margin', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapApiState($params = array()) {
        return $this->request('linear-swap-api/v1/swap_api_state', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapCrossTransferState($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_transfer_state', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapCrossTradeState($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trade_state', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapEliteAccountRatio($params = array()) {
        return $this->request('linear-swap-api/v1/swap_elite_account_ratio', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapElitePositionRatio($params = array()) {
        return $this->request('linear-swap-api/v1/swap_elite_position_ratio', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapLiquidationOrders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_liquidation_orders', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapSettlementRecords($params = array()) {
        return $this->request('linear-swap-api/v1/swap_settlement_records', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapFundingRate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_funding_rate', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapBatchFundingRate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_batch_funding_rate', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapHistoricalFundingRate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_historical_funding_rate', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV3SwapLiquidationOrders($params = array()) {
        return $this->request('linear-swap-api/v3/swap_liquidation_orders', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetIndexMarketHistoryLinearSwapPremiumIndexKline($params = array()) {
        return $this->request('index/market/history/linear_swap_premium_index_kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetIndexMarketHistoryLinearSwapEstimatedRateKline($params = array()) {
        return $this->request('index/market/history/linear_swap_estimated_rate_kline', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetIndexMarketHistoryLinearSwapBasis($params = array()) {
        return $this->request('index/market/history/linear_swap_basis', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPublicGetLinearSwapApiV1SwapEstimatedSettlementPrice($params = array()) {
        return $this->request('linear-swap-api/v1/swap_estimated_settlement_price', array('contract', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPrivateGetApiV1ContractSubAuthList($params = array()) {
        return $this->request('api/v1/contract_sub_auth_list', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPrivateGetApiV1ContractApiTradingStatus($params = array()) {
        return $this->request('api/v1/contract_api_trading_status', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPrivateGetSwapApiV1SwapSubAuthList($params = array()) {
        return $this->request('swap-api/v1/swap_sub_auth_list', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPrivateGetSwapApiV1SwapApiTradingStatus($params = array()) {
        return $this->request('swap-api/v1/swap_api_trading_status', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPrivateGetLinearSwapApiV1SwapSubAuthList($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_auth_list', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPrivateGetLinearSwapApiV1SwapApiTradingStatus($params = array()) {
        return $this->request('linear-swap-api/v1/swap_api_trading_status', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPrivateGetLinearSwapApiV1SwapCrossPositionSide($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_position_side', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPrivateGetLinearSwapApiV1SwapPositionSide($params = array()) {
        return $this->request('linear-swap-api/v1/swap_position_side', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPrivateGetLinearSwapApiV3UnifiedAccountInfo($params = array()) {
        return $this->request('linear-swap-api/v3/unified_account_info', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPrivateGetLinearSwapApiV3FixPositionMarginChangeRecord($params = array()) {
        return $this->request('linear-swap-api/v3/fix_position_margin_change_record', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPrivateGetLinearSwapApiV3SwapUnifiedAccountType($params = array()) {
        return $this->request('linear-swap-api/v3/swap_unified_account_type', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPrivateGetLinearSwapApiV3LinearSwapOverviewAccountInfo($params = array()) {
        return $this->request('linear-swap-api/v3/linear_swap_overview_account_info', array('contract', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractBalanceValuation($params = array()) {
        return $this->request('api/v1/contract_balance_valuation', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractAccountInfo($params = array()) {
        return $this->request('api/v1/contract_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractPositionInfo($params = array()) {
        return $this->request('api/v1/contract_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractSubAuth($params = array()) {
        return $this->request('api/v1/contract_sub_auth', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractSubAccountList($params = array()) {
        return $this->request('api/v1/contract_sub_account_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractSubAccountInfoList($params = array()) {
        return $this->request('api/v1/contract_sub_account_info_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractSubAccountInfo($params = array()) {
        return $this->request('api/v1/contract_sub_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractSubPositionInfo($params = array()) {
        return $this->request('api/v1/contract_sub_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractFinancialRecord($params = array()) {
        return $this->request('api/v1/contract_financial_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractFinancialRecordExact($params = array()) {
        return $this->request('api/v1/contract_financial_record_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractUserSettlementRecords($params = array()) {
        return $this->request('api/v1/contract_user_settlement_records', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractOrderLimit($params = array()) {
        return $this->request('api/v1/contract_order_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractFee($params = array()) {
        return $this->request('api/v1/contract_fee', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTransferLimit($params = array()) {
        return $this->request('api/v1/contract_transfer_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractPositionLimit($params = array()) {
        return $this->request('api/v1/contract_position_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractAccountPositionInfo($params = array()) {
        return $this->request('api/v1/contract_account_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractMasterSubTransfer($params = array()) {
        return $this->request('api/v1/contract_master_sub_transfer', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractMasterSubTransferRecord($params = array()) {
        return $this->request('api/v1/contract_master_sub_transfer_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractAvailableLevelRate($params = array()) {
        return $this->request('api/v1/contract_available_level_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV3ContractFinancialRecord($params = array()) {
        return $this->request('api/v3/contract_financial_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV3ContractFinancialRecordExact($params = array()) {
        return $this->request('api/v3/contract_financial_record_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractCancelAfter($params = array()) {
        return $this->request('api/v1/contract-cancel-after', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractOrder($params = array()) {
        return $this->request('api/v1/contract_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractBatchorder($params = array()) {
        return $this->request('api/v1/contract_batchorder', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractCancel($params = array()) {
        return $this->request('api/v1/contract_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractCancelall($params = array()) {
        return $this->request('api/v1/contract_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractSwitchLeverRate($params = array()) {
        return $this->request('api/v1/contract_switch_lever_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1LightningClosePosition($params = array()) {
        return $this->request('api/v1/lightning_close_position', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractOrderInfo($params = array()) {
        return $this->request('api/v1/contract_order_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractOrderDetail($params = array()) {
        return $this->request('api/v1/contract_order_detail', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractOpenorders($params = array()) {
        return $this->request('api/v1/contract_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractHisorders($params = array()) {
        return $this->request('api/v1/contract_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractHisordersExact($params = array()) {
        return $this->request('api/v1/contract_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractMatchresults($params = array()) {
        return $this->request('api/v1/contract_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractMatchresultsExact($params = array()) {
        return $this->request('api/v1/contract_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV3ContractHisorders($params = array()) {
        return $this->request('api/v3/contract_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV3ContractHisordersExact($params = array()) {
        return $this->request('api/v3/contract_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV3ContractMatchresults($params = array()) {
        return $this->request('api/v3/contract_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV3ContractMatchresultsExact($params = array()) {
        return $this->request('api/v3/contract_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTriggerOrder($params = array()) {
        return $this->request('api/v1/contract_trigger_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTriggerCancel($params = array()) {
        return $this->request('api/v1/contract_trigger_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTriggerCancelall($params = array()) {
        return $this->request('api/v1/contract_trigger_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTriggerOpenorders($params = array()) {
        return $this->request('api/v1/contract_trigger_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTriggerHisorders($params = array()) {
        return $this->request('api/v1/contract_trigger_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTpslOrder($params = array()) {
        return $this->request('api/v1/contract_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTpslCancel($params = array()) {
        return $this->request('api/v1/contract_tpsl_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTpslCancelall($params = array()) {
        return $this->request('api/v1/contract_tpsl_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTpslOpenorders($params = array()) {
        return $this->request('api/v1/contract_tpsl_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTpslHisorders($params = array()) {
        return $this->request('api/v1/contract_tpsl_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractRelationTpslOrder($params = array()) {
        return $this->request('api/v1/contract_relation_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTrackOrder($params = array()) {
        return $this->request('api/v1/contract_track_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTrackCancel($params = array()) {
        return $this->request('api/v1/contract_track_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTrackCancelall($params = array()) {
        return $this->request('api/v1/contract_track_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTrackOpenorders($params = array()) {
        return $this->request('api/v1/contract_track_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostApiV1ContractTrackHisorders($params = array()) {
        return $this->request('api/v1/contract_track_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapBalanceValuation($params = array()) {
        return $this->request('swap-api/v1/swap_balance_valuation', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapAccountInfo($params = array()) {
        return $this->request('swap-api/v1/swap_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapPositionInfo($params = array()) {
        return $this->request('swap-api/v1/swap_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapAccountPositionInfo($params = array()) {
        return $this->request('swap-api/v1/swap_account_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapSubAuth($params = array()) {
        return $this->request('swap-api/v1/swap_sub_auth', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapSubAccountList($params = array()) {
        return $this->request('swap-api/v1/swap_sub_account_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapSubAccountInfoList($params = array()) {
        return $this->request('swap-api/v1/swap_sub_account_info_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapSubAccountInfo($params = array()) {
        return $this->request('swap-api/v1/swap_sub_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapSubPositionInfo($params = array()) {
        return $this->request('swap-api/v1/swap_sub_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapFinancialRecord($params = array()) {
        return $this->request('swap-api/v1/swap_financial_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapFinancialRecordExact($params = array()) {
        return $this->request('swap-api/v1/swap_financial_record_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapUserSettlementRecords($params = array()) {
        return $this->request('swap-api/v1/swap_user_settlement_records', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapAvailableLevelRate($params = array()) {
        return $this->request('swap-api/v1/swap_available_level_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapOrderLimit($params = array()) {
        return $this->request('swap-api/v1/swap_order_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapFee($params = array()) {
        return $this->request('swap-api/v1/swap_fee', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTransferLimit($params = array()) {
        return $this->request('swap-api/v1/swap_transfer_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapPositionLimit($params = array()) {
        return $this->request('swap-api/v1/swap_position_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapMasterSubTransfer($params = array()) {
        return $this->request('swap-api/v1/swap_master_sub_transfer', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapMasterSubTransferRecord($params = array()) {
        return $this->request('swap-api/v1/swap_master_sub_transfer_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV3SwapFinancialRecord($params = array()) {
        return $this->request('swap-api/v3/swap_financial_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV3SwapFinancialRecordExact($params = array()) {
        return $this->request('swap-api/v3/swap_financial_record_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapCancelAfter($params = array()) {
        return $this->request('swap-api/v1/swap-cancel-after', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapOrder($params = array()) {
        return $this->request('swap-api/v1/swap_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapBatchorder($params = array()) {
        return $this->request('swap-api/v1/swap_batchorder', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapCancel($params = array()) {
        return $this->request('swap-api/v1/swap_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapCancelall($params = array()) {
        return $this->request('swap-api/v1/swap_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapLightningClosePosition($params = array()) {
        return $this->request('swap-api/v1/swap_lightning_close_position', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapSwitchLeverRate($params = array()) {
        return $this->request('swap-api/v1/swap_switch_lever_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapOrderInfo($params = array()) {
        return $this->request('swap-api/v1/swap_order_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapOrderDetail($params = array()) {
        return $this->request('swap-api/v1/swap_order_detail', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapOpenorders($params = array()) {
        return $this->request('swap-api/v1/swap_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapHisorders($params = array()) {
        return $this->request('swap-api/v1/swap_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapHisordersExact($params = array()) {
        return $this->request('swap-api/v1/swap_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapMatchresults($params = array()) {
        return $this->request('swap-api/v1/swap_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapMatchresultsExact($params = array()) {
        return $this->request('swap-api/v1/swap_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV3SwapMatchresults($params = array()) {
        return $this->request('swap-api/v3/swap_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV3SwapMatchresultsExact($params = array()) {
        return $this->request('swap-api/v3/swap_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV3SwapHisorders($params = array()) {
        return $this->request('swap-api/v3/swap_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV3SwapHisordersExact($params = array()) {
        return $this->request('swap-api/v3/swap_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTriggerOrder($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTriggerCancel($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTriggerCancelall($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTriggerOpenorders($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTriggerHisorders($params = array()) {
        return $this->request('swap-api/v1/swap_trigger_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTpslOrder($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTpslCancel($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTpslCancelall($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTpslOpenorders($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTpslHisorders($params = array()) {
        return $this->request('swap-api/v1/swap_tpsl_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapRelationTpslOrder($params = array()) {
        return $this->request('swap-api/v1/swap_relation_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTrackOrder($params = array()) {
        return $this->request('swap-api/v1/swap_track_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTrackCancel($params = array()) {
        return $this->request('swap-api/v1/swap_track_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTrackCancelall($params = array()) {
        return $this->request('swap-api/v1/swap_track_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTrackOpenorders($params = array()) {
        return $this->request('swap-api/v1/swap_track_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostSwapApiV1SwapTrackHisorders($params = array()) {
        return $this->request('swap-api/v1/swap_track_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapLeverPositionLimit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_lever_position_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossLeverPositionLimit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_lever_position_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapBalanceValuation($params = array()) {
        return $this->request('linear-swap-api/v1/swap_balance_valuation', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapAccountInfo($params = array()) {
        return $this->request('linear-swap-api/v1/swap_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossAccountInfo($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapPositionInfo($params = array()) {
        return $this->request('linear-swap-api/v1/swap_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossPositionInfo($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapAccountPositionInfo($params = array()) {
        return $this->request('linear-swap-api/v1/swap_account_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossAccountPositionInfo($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_account_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapSubAuth($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_auth', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapSubAccountList($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_account_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossSubAccountList($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_sub_account_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapSubAccountInfoList($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_account_info_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossSubAccountInfoList($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_sub_account_info_list', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapSubAccountInfo($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossSubAccountInfo($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_sub_account_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapSubPositionInfo($params = array()) {
        return $this->request('linear-swap-api/v1/swap_sub_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossSubPositionInfo($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_sub_position_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapFinancialRecord($params = array()) {
        return $this->request('linear-swap-api/v1/swap_financial_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapFinancialRecordExact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_financial_record_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapUserSettlementRecords($params = array()) {
        return $this->request('linear-swap-api/v1/swap_user_settlement_records', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossUserSettlementRecords($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_user_settlement_records', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapAvailableLevelRate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_available_level_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossAvailableLevelRate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_available_level_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapOrderLimit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_order_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapFee($params = array()) {
        return $this->request('linear-swap-api/v1/swap_fee', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTransferLimit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_transfer_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTransferLimit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_transfer_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapPositionLimit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_position_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossPositionLimit($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_position_limit', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapMasterSubTransfer($params = array()) {
        return $this->request('linear-swap-api/v1/swap_master_sub_transfer', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapMasterSubTransferRecord($params = array()) {
        return $this->request('linear-swap-api/v1/swap_master_sub_transfer_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTransferInner($params = array()) {
        return $this->request('linear-swap-api/v1/swap_transfer_inner', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV3SwapFinancialRecord($params = array()) {
        return $this->request('linear-swap-api/v3/swap_financial_record', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV3SwapFinancialRecordExact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_financial_record_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapOrder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossOrder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapBatchorder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_batchorder', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossBatchorder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_batchorder', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossCancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossCancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapSwitchLeverRate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_switch_lever_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossSwitchLeverRate($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_switch_lever_rate', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapLightningClosePosition($params = array()) {
        return $this->request('linear-swap-api/v1/swap_lightning_close_position', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossLightningClosePosition($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_lightning_close_position', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapOrderInfo($params = array()) {
        return $this->request('linear-swap-api/v1/swap_order_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossOrderInfo($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_order_info', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapOrderDetail($params = array()) {
        return $this->request('linear-swap-api/v1/swap_order_detail', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossOrderDetail($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_order_detail', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapOpenorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossOpenorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapHisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossHisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapHisordersExact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossHisordersExact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapMatchresults($params = array()) {
        return $this->request('linear-swap-api/v1/swap_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossMatchresults($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapMatchresultsExact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossMatchresultsExact($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1LinearCancelAfter($params = array()) {
        return $this->request('linear-swap-api/v1/linear-cancel-after', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapSwitchPositionMode($params = array()) {
        return $this->request('linear-swap-api/v1/swap_switch_position_mode', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossSwitchPositionMode($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_switch_position_mode', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV3SwapMatchresults($params = array()) {
        return $this->request('linear-swap-api/v3/swap_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV3SwapCrossMatchresults($params = array()) {
        return $this->request('linear-swap-api/v3/swap_cross_matchresults', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV3SwapMatchresultsExact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV3SwapCrossMatchresultsExact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_cross_matchresults_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV3SwapHisorders($params = array()) {
        return $this->request('linear-swap-api/v3/swap_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV3SwapCrossHisorders($params = array()) {
        return $this->request('linear-swap-api/v3/swap_cross_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV3SwapHisordersExact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV3SwapCrossHisordersExact($params = array()) {
        return $this->request('linear-swap-api/v3/swap_cross_hisorders_exact', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV3FixPositionMarginChange($params = array()) {
        return $this->request('linear-swap-api/v3/fix_position_margin_change', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV3SwapSwitchAccountType($params = array()) {
        return $this->request('linear-swap-api/v3/swap_switch_account_type', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV3LinearSwapFeeSwitch($params = array()) {
        return $this->request('linear-swap-api/v3/linear_swap_fee_switch', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTriggerOrder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTriggerOrder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTriggerCancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTriggerCancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTriggerCancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTriggerCancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTriggerOpenorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTriggerOpenorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTriggerHisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_trigger_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTriggerHisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_trigger_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTpslOrder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTpslOrder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTpslCancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTpslCancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTpslCancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTpslCancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTpslOpenorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTpslOpenorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTpslHisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_tpsl_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTpslHisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_tpsl_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapRelationTpslOrder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_relation_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossRelationTpslOrder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_relation_tpsl_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTrackOrder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTrackOrder($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_order', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTrackCancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTrackCancel($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_cancel', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTrackCancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTrackCancelall($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_cancelall', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTrackOpenorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTrackOpenorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_openorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapTrackHisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_track_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function contractPrivatePostLinearSwapApiV1SwapCrossTrackHisorders($params = array()) {
        return $this->request('linear-swap-api/v1/swap_cross_track_hisorders', array('contract', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
}
