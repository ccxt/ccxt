<?php

namespace ccxt\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class bit2c extends \ccxt\Exchange {
    public function public_get_exchanges_pair_ticker($params = array()) {
        return $this->request('Exchanges/{pair}/Ticker', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_exchanges_pair_orderbook($params = array()) {
        return $this->request('Exchanges/{pair}/orderbook', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_exchanges_pair_trades($params = array()) {
        return $this->request('Exchanges/{pair}/trades', 'public', 'GET', $params, null, null, array());
    }
    public function public_get_exchanges_pair_lasttrades($params = array()) {
        return $this->request('Exchanges/{pair}/lasttrades', 'public', 'GET', $params, null, null, array());
    }
    public function private_post_merchant_createcheckout($params = array()) {
        return $this->request('Merchant/CreateCheckout', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_funds_addcoinfundsrequest($params = array()) {
        return $this->request('Funds/AddCoinFundsRequest', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_addfund($params = array()) {
        return $this->request('Order/AddFund', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_addorder($params = array()) {
        return $this->request('Order/AddOrder', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_getbyid($params = array()) {
        return $this->request('Order/GetById', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_addordermarketpricebuy($params = array()) {
        return $this->request('Order/AddOrderMarketPriceBuy', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_addordermarketpricesell($params = array()) {
        return $this->request('Order/AddOrderMarketPriceSell', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_cancelorder($params = array()) {
        return $this->request('Order/CancelOrder', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_addcoinfundsrequest($params = array()) {
        return $this->request('Order/AddCoinFundsRequest', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_order_addstoporder($params = array()) {
        return $this->request('Order/AddStopOrder', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_payment_getmyid($params = array()) {
        return $this->request('Payment/GetMyId', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_payment_send($params = array()) {
        return $this->request('Payment/Send', 'private', 'POST', $params, null, null, array());
    }
    public function private_post_payment_pay($params = array()) {
        return $this->request('Payment/Pay', 'private', 'POST', $params, null, null, array());
    }
    public function private_get_account_balance($params = array()) {
        return $this->request('Account/Balance', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_account_balance_v2($params = array()) {
        return $this->request('Account/Balance/v2', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_order_myorders($params = array()) {
        return $this->request('Order/MyOrders', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_order_getbyid($params = array()) {
        return $this->request('Order/GetById', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_order_accounthistory($params = array()) {
        return $this->request('Order/AccountHistory', 'private', 'GET', $params, null, null, array());
    }
    public function private_get_order_orderhistory($params = array()) {
        return $this->request('Order/OrderHistory', 'private', 'GET', $params, null, null, array());
    }
    public function publicGetExchangesPairTicker($params = array()) {
        return $this->request('Exchanges/{pair}/Ticker', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetExchangesPairOrderbook($params = array()) {
        return $this->request('Exchanges/{pair}/orderbook', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetExchangesPairTrades($params = array()) {
        return $this->request('Exchanges/{pair}/trades', 'public', 'GET', $params, null, null, array());
    }
    public function publicGetExchangesPairLasttrades($params = array()) {
        return $this->request('Exchanges/{pair}/lasttrades', 'public', 'GET', $params, null, null, array());
    }
    public function privatePostMerchantCreateCheckout($params = array()) {
        return $this->request('Merchant/CreateCheckout', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostFundsAddCoinFundsRequest($params = array()) {
        return $this->request('Funds/AddCoinFundsRequest', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderAddFund($params = array()) {
        return $this->request('Order/AddFund', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderAddOrder($params = array()) {
        return $this->request('Order/AddOrder', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderGetById($params = array()) {
        return $this->request('Order/GetById', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderAddOrderMarketPriceBuy($params = array()) {
        return $this->request('Order/AddOrderMarketPriceBuy', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderAddOrderMarketPriceSell($params = array()) {
        return $this->request('Order/AddOrderMarketPriceSell', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderCancelOrder($params = array()) {
        return $this->request('Order/CancelOrder', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderAddCoinFundsRequest($params = array()) {
        return $this->request('Order/AddCoinFundsRequest', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostOrderAddStopOrder($params = array()) {
        return $this->request('Order/AddStopOrder', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostPaymentGetMyId($params = array()) {
        return $this->request('Payment/GetMyId', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostPaymentSend($params = array()) {
        return $this->request('Payment/Send', 'private', 'POST', $params, null, null, array());
    }
    public function privatePostPaymentPay($params = array()) {
        return $this->request('Payment/Pay', 'private', 'POST', $params, null, null, array());
    }
    public function privateGetAccountBalance($params = array()) {
        return $this->request('Account/Balance', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetAccountBalanceV2($params = array()) {
        return $this->request('Account/Balance/v2', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetOrderMyOrders($params = array()) {
        return $this->request('Order/MyOrders', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetOrderGetById($params = array()) {
        return $this->request('Order/GetById', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetOrderAccountHistory($params = array()) {
        return $this->request('Order/AccountHistory', 'private', 'GET', $params, null, null, array());
    }
    public function privateGetOrderOrderHistory($params = array()) {
        return $this->request('Order/OrderHistory', 'private', 'GET', $params, null, null, array());
    }
}
