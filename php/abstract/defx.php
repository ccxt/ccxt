<?php

namespace ccxt\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class defx extends \ccxt\Exchange {
    public function v1_public_get_healthcheck_ping($params = array()) {
        return $this->request('healthcheck/ping', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_symbols_symbol_ohlc($params = array()) {
        return $this->request('symbols/{symbol}/ohlc', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_symbols_symbol_trades($params = array()) {
        return $this->request('symbols/{symbol}/trades', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_symbols_symbol_prices($params = array()) {
        return $this->request('symbols/{symbol}/prices', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_symbols_symbol_ticker_24hr($params = array()) {
        return $this->request('symbols/{symbol}/ticker/24hr', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_symbols_symbol_depth_level_slab($params = array()) {
        return $this->request('symbols/{symbol}/depth/{level}/{slab}', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_ticker_24hragg($params = array()) {
        return $this->request('ticker/24HrAgg', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_c_markets($params = array()) {
        return $this->request('c/markets', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_c_markets_metadata($params = array()) {
        return $this->request('c/markets/metadata', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_analytics_market_stats_newusers($params = array()) {
        return $this->request('analytics/market/stats/newUsers', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_analytics_market_stats_tvl($params = array()) {
        return $this->request('analytics/market/stats/tvl', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_analytics_market_stats_volumebyinstrument($params = array()) {
        return $this->request('analytics/market/stats/volumeByInstrument', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_analytics_market_stats_liquidation($params = array()) {
        return $this->request('analytics/market/stats/liquidation', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_analytics_market_stats_totalvolume($params = array()) {
        return $this->request('analytics/market/stats/totalVolume', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_analytics_market_stats_openinterest($params = array()) {
        return $this->request('analytics/market/stats/openInterest', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_analytics_market_stats_totaltrades($params = array()) {
        return $this->request('analytics/market/stats/totalTrades', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_analytics_market_stats_basis($params = array()) {
        return $this->request('analytics/market/stats/basis', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_analytics_market_stats_insurancefund($params = array()) {
        return $this->request('analytics/market/stats/insuranceFund', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_analytics_market_stats_longandshortratio($params = array()) {
        return $this->request('analytics/market/stats/longAndShortRatio', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_analytics_market_stats_fundingrate($params = array()) {
        return $this->request('analytics/market/stats/fundingRate', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_analytics_market_overview($params = array()) {
        return $this->request('analytics/market/overview', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_explorer_search($params = array()) {
        return $this->request('explorer/search', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_explorer_transactions($params = array()) {
        return $this->request('explorer/transactions', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_public_get_explorer_blocks($params = array()) {
        return $this->request('explorer/blocks', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_order_orderid($params = array()) {
        return $this->request('api/order/{orderId}', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_orders($params = array()) {
        return $this->request('api/orders', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_orders_oco_parentorderid($params = array()) {
        return $this->request('api/orders/oco/{parentOrderId}', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_trades($params = array()) {
        return $this->request('api/trades', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_position_active($params = array()) {
        return $this->request('api/position/active', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_users_metadata_leverage($params = array()) {
        return $this->request('api/users/metadata/leverage', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_users_metadata_feemultiplier($params = array()) {
        return $this->request('api/users/metadata/feeMultiplier', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_users_metadata_slippage($params = array()) {
        return $this->request('api/users/metadata/slippage', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_users_referral($params = array()) {
        return $this->request('api/users/referral', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_users_apikeys($params = array()) {
        return $this->request('api/users/apikeys', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_connection_signature_message_evm($params = array()) {
        return $this->request('connection-signature-message/evm', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_users_profile_wallets($params = array()) {
        return $this->request('api/users/profile/wallets', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_notifications($params = array()) {
        return $this->request('api/notifications', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_wallet_balance($params = array()) {
        return $this->request('api/wallet/balance', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_wallet_transactions($params = array()) {
        return $this->request('api/wallet/transactions', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_analytics_user_overview($params = array()) {
        return $this->request('api/analytics/user/overview', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_analytics_user_pnl($params = array()) {
        return $this->request('api/analytics/user/pnl', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_analytics_points_overview($params = array()) {
        return $this->request('api/analytics/points/overview', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_get_api_analytics_points_history($params = array()) {
        return $this->request('api/analytics/points/history', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1_private_post_api_order($params = array()) {
        return $this->request('api/order', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1_private_post_api_position_oco($params = array()) {
        return $this->request('api/position/oco', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1_private_post_api_users_socket_listenkeys($params = array()) {
        return $this->request('api/users/socket/listenKeys', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1_private_post_api_users_metadata_leverage($params = array()) {
        return $this->request('api/users/metadata/leverage', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1_private_post_api_users_metadata_feemultiplier($params = array()) {
        return $this->request('api/users/metadata/feeMultiplier', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1_private_post_api_users_metadata_slippage($params = array()) {
        return $this->request('api/users/metadata/slippage', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1_private_post_api_users_referral_recordreferralsignup($params = array()) {
        return $this->request('api/users/referral/recordReferralSignup', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1_private_post_api_users_apikeys($params = array()) {
        return $this->request('api/users/apikeys', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1_private_post_api_users_profile_wallets($params = array()) {
        return $this->request('api/users/profile/wallets', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1_private_post_api_transfers_withdrawal($params = array()) {
        return $this->request('api/transfers/withdrawal', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1_private_post_api_transfers_bridge_withdrawal($params = array()) {
        return $this->request('api/transfers/bridge/withdrawal', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1_private_put_api_position_updatepositionmargin($params = array()) {
        return $this->request('api/position/updatePositionMargin', array('v1', 'private'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v1_private_put_api_users_socket_listenkeys_listenkey($params = array()) {
        return $this->request('api/users/socket/listenKeys/{listenKey}', array('v1', 'private'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v1_private_put_api_users_apikeys_accesskey_status($params = array()) {
        return $this->request('api/users/apikeys/{accessKey}/status', array('v1', 'private'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v1_private_put_api_users_referral($params = array()) {
        return $this->request('api/users/referral', array('v1', 'private'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v1_private_patch_api_users_apikeys_accesskey($params = array()) {
        return $this->request('api/users/apikeys/{accessKey}', array('v1', 'private'), 'PATCH', $params, null, null, array("cost" => 1));
    }
    public function v1_private_delete_api_orders_allopen($params = array()) {
        return $this->request('api/orders/allOpen', array('v1', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v1_private_delete_api_order_orderid($params = array()) {
        return $this->request('api/order/{orderId}', array('v1', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v1_private_delete_api_position_positionid($params = array()) {
        return $this->request('api/position/{positionId}', array('v1', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v1_private_delete_api_position_all($params = array()) {
        return $this->request('api/position/all', array('v1', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v1_private_delete_api_users_socket_listenkeys_listenkey($params = array()) {
        return $this->request('api/users/socket/listenKeys/{listenKey}', array('v1', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v1_private_delete_api_users_apikeys_accesskey($params = array()) {
        return $this->request('api/users/apikeys/{accessKey}', array('v1', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetHealthcheckPing($params = array()) {
        return $this->request('healthcheck/ping', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetSymbolsSymbolOhlc($params = array()) {
        return $this->request('symbols/{symbol}/ohlc', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetSymbolsSymbolTrades($params = array()) {
        return $this->request('symbols/{symbol}/trades', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetSymbolsSymbolPrices($params = array()) {
        return $this->request('symbols/{symbol}/prices', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetSymbolsSymbolTicker24hr($params = array()) {
        return $this->request('symbols/{symbol}/ticker/24hr', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetSymbolsSymbolDepthLevelSlab($params = array()) {
        return $this->request('symbols/{symbol}/depth/{level}/{slab}', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetTicker24HrAgg($params = array()) {
        return $this->request('ticker/24HrAgg', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetCMarkets($params = array()) {
        return $this->request('c/markets', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetCMarketsMetadata($params = array()) {
        return $this->request('c/markets/metadata', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetAnalyticsMarketStatsNewUsers($params = array()) {
        return $this->request('analytics/market/stats/newUsers', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetAnalyticsMarketStatsTvl($params = array()) {
        return $this->request('analytics/market/stats/tvl', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetAnalyticsMarketStatsVolumeByInstrument($params = array()) {
        return $this->request('analytics/market/stats/volumeByInstrument', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetAnalyticsMarketStatsLiquidation($params = array()) {
        return $this->request('analytics/market/stats/liquidation', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetAnalyticsMarketStatsTotalVolume($params = array()) {
        return $this->request('analytics/market/stats/totalVolume', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetAnalyticsMarketStatsOpenInterest($params = array()) {
        return $this->request('analytics/market/stats/openInterest', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetAnalyticsMarketStatsTotalTrades($params = array()) {
        return $this->request('analytics/market/stats/totalTrades', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetAnalyticsMarketStatsBasis($params = array()) {
        return $this->request('analytics/market/stats/basis', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetAnalyticsMarketStatsInsuranceFund($params = array()) {
        return $this->request('analytics/market/stats/insuranceFund', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetAnalyticsMarketStatsLongAndShortRatio($params = array()) {
        return $this->request('analytics/market/stats/longAndShortRatio', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetAnalyticsMarketStatsFundingRate($params = array()) {
        return $this->request('analytics/market/stats/fundingRate', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetAnalyticsMarketOverview($params = array()) {
        return $this->request('analytics/market/overview', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetExplorerSearch($params = array()) {
        return $this->request('explorer/search', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetExplorerTransactions($params = array()) {
        return $this->request('explorer/transactions', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PublicGetExplorerBlocks($params = array()) {
        return $this->request('explorer/blocks', array('v1', 'public'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiOrderOrderId($params = array()) {
        return $this->request('api/order/{orderId}', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiOrders($params = array()) {
        return $this->request('api/orders', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiOrdersOcoParentOrderId($params = array()) {
        return $this->request('api/orders/oco/{parentOrderId}', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiTrades($params = array()) {
        return $this->request('api/trades', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiPositionActive($params = array()) {
        return $this->request('api/position/active', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiUsersMetadataLeverage($params = array()) {
        return $this->request('api/users/metadata/leverage', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiUsersMetadataFeeMultiplier($params = array()) {
        return $this->request('api/users/metadata/feeMultiplier', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiUsersMetadataSlippage($params = array()) {
        return $this->request('api/users/metadata/slippage', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiUsersReferral($params = array()) {
        return $this->request('api/users/referral', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiUsersApikeys($params = array()) {
        return $this->request('api/users/apikeys', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetConnectionSignatureMessageEvm($params = array()) {
        return $this->request('connection-signature-message/evm', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiUsersProfileWallets($params = array()) {
        return $this->request('api/users/profile/wallets', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiNotifications($params = array()) {
        return $this->request('api/notifications', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiWalletBalance($params = array()) {
        return $this->request('api/wallet/balance', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiWalletTransactions($params = array()) {
        return $this->request('api/wallet/transactions', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiAnalyticsUserOverview($params = array()) {
        return $this->request('api/analytics/user/overview', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiAnalyticsUserPnl($params = array()) {
        return $this->request('api/analytics/user/pnl', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiAnalyticsPointsOverview($params = array()) {
        return $this->request('api/analytics/points/overview', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateGetApiAnalyticsPointsHistory($params = array()) {
        return $this->request('api/analytics/points/history', array('v1', 'private'), 'GET', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePostApiOrder($params = array()) {
        return $this->request('api/order', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePostApiPositionOco($params = array()) {
        return $this->request('api/position/oco', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePostApiUsersSocketListenKeys($params = array()) {
        return $this->request('api/users/socket/listenKeys', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePostApiUsersMetadataLeverage($params = array()) {
        return $this->request('api/users/metadata/leverage', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePostApiUsersMetadataFeeMultiplier($params = array()) {
        return $this->request('api/users/metadata/feeMultiplier', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePostApiUsersMetadataSlippage($params = array()) {
        return $this->request('api/users/metadata/slippage', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePostApiUsersReferralRecordReferralSignup($params = array()) {
        return $this->request('api/users/referral/recordReferralSignup', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePostApiUsersApikeys($params = array()) {
        return $this->request('api/users/apikeys', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePostApiUsersProfileWallets($params = array()) {
        return $this->request('api/users/profile/wallets', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePostApiTransfersWithdrawal($params = array()) {
        return $this->request('api/transfers/withdrawal', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePostApiTransfersBridgeWithdrawal($params = array()) {
        return $this->request('api/transfers/bridge/withdrawal', array('v1', 'private'), 'POST', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePutApiPositionUpdatePositionMargin($params = array()) {
        return $this->request('api/position/updatePositionMargin', array('v1', 'private'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePutApiUsersSocketListenKeysListenKey($params = array()) {
        return $this->request('api/users/socket/listenKeys/{listenKey}', array('v1', 'private'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePutApiUsersApikeysAccessKeyStatus($params = array()) {
        return $this->request('api/users/apikeys/{accessKey}/status', array('v1', 'private'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePutApiUsersReferral($params = array()) {
        return $this->request('api/users/referral', array('v1', 'private'), 'PUT', $params, null, null, array("cost" => 1));
    }
    public function v1PrivatePatchApiUsersApikeysAccessKey($params = array()) {
        return $this->request('api/users/apikeys/{accessKey}', array('v1', 'private'), 'PATCH', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateDeleteApiOrdersAllOpen($params = array()) {
        return $this->request('api/orders/allOpen', array('v1', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateDeleteApiOrderOrderId($params = array()) {
        return $this->request('api/order/{orderId}', array('v1', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateDeleteApiPositionPositionId($params = array()) {
        return $this->request('api/position/{positionId}', array('v1', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateDeleteApiPositionAll($params = array()) {
        return $this->request('api/position/all', array('v1', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateDeleteApiUsersSocketListenKeysListenKey($params = array()) {
        return $this->request('api/users/socket/listenKeys/{listenKey}', array('v1', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
    public function v1PrivateDeleteApiUsersApikeysAccessKey($params = array()) {
        return $this->request('api/users/apikeys/{accessKey}', array('v1', 'private'), 'DELETE', $params, null, null, array("cost" => 1));
    }
}
