import React, { useState } from 'react';

const App = () => {
  const [activeTab, setActiveTab] = useState('problem');
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);

  return (
    <div className="min-h-screen bg-gray-900 text-white">
      {/* Header */}
      <header className="bg-gray-800 shadow-md sticky top-0 z-50">
        <div className="container mx-auto px-4 py-4 flex items-center justify-between">
          <div className="flex items-center space-x-2">
            <svg className="w-8 h-8 text-blue-500" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M12 2L2 7L12 12L22 7L12 2Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
              <path d="M2 17L12 22L22 17" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
              <path d="M2 12L12 17L22 12" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
            </svg>
            <h1 className="text-xl font-bold">CCXT Exchange Unification</h1>
          </div>
          
          {/* Desktop Navigation */}
          <nav className="hidden md:flex space-x-8">
            <a href="#problem" className="hover:text-blue-400 transition-colors" onClick={() => setActiveTab('problem')}>Problem</a>
            <a href="#solution" className="hover:text-blue-400 transition-colors" onClick={() => setActiveTab('solution')}>Solution</a>
            <a href="#steps" className="hover:text-blue-400 transition-colors" onClick={() => setActiveTab('steps')}>Steps</a>
            <a href="#contribute" className="hover:text-blue-400 transition-colors" onClick={() => setActiveTab('contribute')}>Contribute</a>
          </nav>
          
          {/* Mobile Menu Button */}
          <button 
            className="md:hidden text-white focus:outline-none"
            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
          >
            <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d={mobileMenuOpen ? "M6 18L18 6M6 6l12 12" : "M4 6h16M4 12h16M4 18h16"} />
            </svg>
          </button>
        </div>
        
        {/* Mobile Menu */}
        {mobileMenuOpen && (
          <div className="md:hidden bg-gray-700">
            <div className="px-2 pt-2 pb-3 space-y-1 sm:px-3">
              <a href="#problem" className="block px-3 py-2 rounded-md text-white hover:bg-gray-600" onClick={() => setMobileMenuOpen(false)}>Problem</a>
              <a href="#solution" className="block px-3 py-2 rounded-md text-white hover:bg-gray-600" onClick={() => setMobileMenuOpen(false)}>Solution</a>
              <a href="#steps" className="block px-3 py-2 rounded-md text-white hover:bg-gray-600" onClick={() => setMobileMenuOpen(false)}>Steps</a>
              <a href="#contribute" className="block px-3 py-2 rounded-md text-white hover:bg-gray-600" onClick={() => setMobileMenuOpen(false)}>Contribute</a>
            </div>
          </div>
        )}
      </header>

      {/* Hero Section */}
      <section className="py-16 px-4 bg-gradient-to-b from-gray-900 to-gray-800">
        <div className="container mx-auto max-w-4xl text-center">
          <h2 className="text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-blue-400 to-green-400 text-transparent bg-clip-text">
            Unifying Exchange Methods for gate.io, Bitfinex, and MEXC
          </h2>
          <p className="text-xl text-gray-300 mb-8">
            Standardizing API methods across cryptocurrency exchanges to improve developer experience and maintainability
          </p>
          <a 
            href="#problem" 
            className="inline-block px-6 py-3 bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors text-white font-medium transform hover:scale-105"
          >
            Learn More
          </a>
        </div>
      </section>

      {/* Problem Section */}
      <section id="problem" className="py-16 bg-gray-800">
        <div className="container mx-auto px-4 max-w-5xl">
          <h3 className="text-3xl font-bold mb-6 text-center">The Problem</h3>
          
          <div className="grid md:grid-cols-3 gap-6 mb-12">
            <div className="bg-gray-700 p-6 rounded-lg shadow-lg text-center transform transition-transform hover:scale-105">
              <div className="w-16 h-16 mx-auto mb-4 bg-blue-600 rounded-full flex items-center justify-center">
                <svg className="w-8 h-8" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M10 14H6V10H10V14Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                  <path d="M18 14H14V10H18V14Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                  <path d="M6 18H18C19.1 18 20 17.1 20 16V8C20 6.9 19.1 6 18 6H6C4.9 6 4 6.9 4 8V16C4 17.1 4.9 18 6 18Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                </svg>
              </div>
              <h4 className="text-xl font-semibold mb-2">Inconsistent Interfaces</h4>
              <p className="text-gray-300">
                gate.io, Bitfinex, and MEXC have different implementations for similar API endpoints
              </p>
            </div>
            
            <div className="bg-gray-700 p-6 rounded-lg shadow-lg text-center transform transition-transform hover:scale-105">
              <div className="w-16 h-16 mx-auto mb-4 bg-blue-600 rounded-full flex items-center justify-center">
                <svg className="w-8 h-8" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                  <path d="M12 8V12L15 15" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                </svg>
              </div>
              <h4 className="text-xl font-semibold mb-2">Maintenance Challenges</h4>
              <p className="text-gray-300">
                Maintaining separate implementations increases complexity and risk of bugs
              </p>
            </div>
            
            <div className="bg-gray-700 p-6 rounded-lg shadow-lg text-center transform transition-transform hover:scale-105">
              <div className="w-16 h-16 mx-auto mb-4 bg-blue-600 rounded-full flex items-center justify-center">
                <svg className="w-8 h-8" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M16 4H8C6.89543 4 6 4.89543 6 6V18C6 19.1046 6.89543 20 8 20H16C17.1046 20 18 19.1046 18 18V6C18 4.89543 17.1046 4 16 4Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                  <path d="M10 10H14" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                  <path d="M10 14H14" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round" />
                </svg>
              </div>
              <h4 className="text-xl font-semibold mb-2">Developer Experience</h4>
              <p className="text-gray-300">
                Inconsistent APIs make it harder for developers to work with multiple exchanges
              </p>
            </div>
          </div>
          
          <div className="bg-gray-700 p-6 rounded-lg shadow-lg">
            <h4 className="text-2xl font-semibold mb-4">Current State of Implementation</h4>
            <ul className="space-y-3 text-gray-300">
              <li className="flex items-start">
                <svg className="w-5 h-5 text-green-500 mr-2 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
                Separate implementations for gate.io, Bitfinex, and MEXC
              </li>
              <li className="flex items-start">
                <svg className="w-5 h-5 text-green-500 mr-2 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
                Similar functionality implemented differently across exchanges
              </li>
              <li className="flex items-start">
                <svg className="w-5 h-5 text-red-500 mr-2 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clipRule="evenodd" />
                </svg>
                No standardized approach for common operations
              </li>
              <li className="flex items-start">
                <svg className="w-5 h-5 text-red-500 mr-2 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clipRule="evenodd" />
                </svg>
                Increased maintenance burden due to duplication
              </li>
            </ul>
          </div>
        </div>
      </section>

      {/* Solution Section */}
      <section id="solution" className="py-16">
        <div className="container mx-auto px-4 max-w-5xl">
          <h3 className="text-3xl font-bold mb-6 text-center">The Solution</h3>
          
          <div className="bg-gray-800 p-6 rounded-lg shadow-lg mb-8">
            <h4 className="text-2xl font-semibold mb-4">Unified Method Implementation</h4>
            <p className="text-gray-300 mb-6">
              We propose creating a standardized interface that will unify the common functionality across gate.io, Bitfinex, and MEXC exchanges.
            </p>
            
            <div className="grid md:grid-cols-2 gap-6">
              <div className="bg-gray-700 p-4 rounded-lg">
                <h5 className="text-xl font-semibold mb-3">Benefits</h5>
                <ul className="space-y-2 text-gray-300">
                  <li className="flex items-start">
                    <svg className="w-5 h-5 text-green-500 mr-2 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                      <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                    </svg>
                    Simplified API for developers
                  </li>
                  <li className="flex items-start">
                    <svg className="w-5 h-5 text-green-500 mr-2 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                      <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                    </svg>
                    Reduced maintenance overhead
                  </li>
                  <li className="flex items-start">
                    <svg className="w-5 h-5 text-green-500 mr-2 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                      <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                    </svg>
                    Consistent error handling
                  </li>
                  <li className="flex items-start">
                    <svg className="w-5 h-5 text-green-500 mr-2 mt-0.5" viewBox="0 0 20 20" fill="currentColor">
                      <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                    </svg>
                    Improved test coverage
                  </li>
                </ul>
              </div>
              
              <div className="bg-gray-700 p-4 rounded-lg">
                <h5 className="text-xl font-semibold mb-3">Technical Approach</h5>
                <ol className="space-y-3 text-gray-300 list-decimal pl-5">
                  <li>Define common interface based on shared functionality</li>
                  <li>Implement adapter pattern for exchange-specific code</li>
                  <li>Create abstraction layer for common operations</li>
                  <li>Ensure backward compatibility where possible</li>
                </ol>
              </div>
            </div>
          </div>
          
          <div className="bg-gray-800 p-6 rounded-lg shadow-lg">
            <h4 className="text-2xl font-semibold mb-4">Targeted Exchanges</h4>
            
            <div className="grid md:grid-cols-3 gap-6">
              <div className="bg-gray-700 p-4 rounded-lg text-center transform transition-transform hover:scale-105">
                <img src="https://placehold.co/150x50/2563eb/ffffff?text=Gate.io " alt="Gate.io" className="mx-auto mb-3" />
                <p className="text-gray-300">One of the largest cryptocurrency exchanges by trading volume</p>
              </div>
              
              <div className="bg-gray-700 p-4 rounded-lg text-center transform transition-transform hover:scale-105">
                <img src="https://placehold.co/150x50/2563eb/ffffff?text=Bitfinex " alt="Bitfinex" className="mx-auto mb-3" />
                <p className="text-gray-300">Established exchange with sophisticated trading tools</p>
              </div>
              
              <div className="bg-gray-700 p-4 rounded-lg text-center transform transition-transform hover:scale-105">
                <img src="https://placehold.co/150x50/2563eb/ffffff?text=MEXC " alt="MEXC" className="mx-auto mb-3" />
                <p className="text-gray-300">High-performance exchange with global user base</p>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Implementation Steps Section */}
      <section id="steps" className="py-16 bg-gray-800">
        <div className="container mx-auto px-4 max-w-5xl">
          <h3 className="text-3xl font-bold mb-6 text-center">Implementation Steps</h3>
          
          <div className="space-y-8">
            <div className="bg-gray-700 rounded-lg overflow-hidden shadow-lg transform transition-transform hover:scale-102">
              <div className="bg-blue-600 px-6 py-4">
                <div className="flex items-center">
                  <div className="w-10 h-10 rounded-full bg-white text-blue-600 flex items-center justify-center font-bold mr-4">1</div>
                  <h4 className="text-xl font-semibold text-white">Define Method Signature</h4>
                </div>
              </div>
              <div className="p-6">
                <p className="text-gray-300 mb-4">
                  Create a standardized method signature that works for all three exchanges. This will involve:
                </p>
                <ul className="space-y-2 text-gray-300 ml-6 list-disc">
                  <li>Identifying common parameters and return types</li>
                  <li>Mapping exchange-specific parameters to the common interface</li>
                  <li>Defining error cases that apply to all exchanges</li>
                </ul>
                <p className="text-gray-300 mt-4">
                  The signature must be verified against the CCXT issue #9240 and discussed in the CCXT Discord community.
                </p>
              </div>
            </div>
            
            <div className="bg-gray-700 rounded-lg overflow-hidden shadow-lg transform transition-transform hover:scale-102">
              <div className="bg-blue-600 px-6 py-4">
                <div className="flex items-center">
                  <div className="w-10 h-10 rounded-full bg-white text-blue-600 flex items-center justify-center font-bold mr-4">2</div>
                  <h4 className="text-xl font-semibold text-white">Documentation Update</h4>
                </div>
              </div>
              <div className="p-6">
                <p className="text-gray-300 mb-4">
                  Create comprehensive documentation for the new unified method:
                </p>
                <ul className="space-y-2 text-gray-300 ml-6 list-disc">
                  <li>Update the CCXT documentation with method details</li>
                  <li>Create usage examples for different scenarios</li>
                  <li>Document parameter requirements and validation</li>
                  <li>Explain error handling and recovery approaches</li>
                </ul>
                <p className="text-gray-300 mt-4">
                  The documentation must be merged into the main CCXT repository before implementation proceeds.
                </p>
              </div>
            </div>
            
            <div className="bg-gray-700 rounded-lg overflow-hidden shadow-lg transform transition-transform hover:scale-102">
              <div className="bg-blue-600 px-6 py-4">
                <div className="flex items-center">
                  <div className="w-10 h-10 rounded-full bg-white text-blue-600 flex items-center justify-center font-bold mr-4">3</div>
                  <h4 className="text-xl font-semibold text-white">Test Planning</h4>
                </div>
              </div>
              <div className="p-6">
                <p className="text-gray-300 mb-4">
                  Collaborate with the community to define comprehensive test cases:
                </p>
                <ul className="space-y-2 text-gray-300 ml-6 list-disc">
                  <li>Positive tests for successful API calls</li>
                  <li>Negative tests for error scenarios</li>
                  <li>Edge case testing for boundary conditions</li>
                  <li>Performance testing under load</li>
                </ul>
                <p className="text-gray-300 mt-4">
                  Tests should cover all three exchanges and be designed to catch regressions in functionality.
                </p>
              </div>
            </div>
            
            <div className="bg-gray-700 rounded-lg overflow-hidden shadow-lg transform transition-transform hover:scale-102">
              <div className="bg-blue-600 px-6 py-4">
                <div className="flex items-center">
                  <div className="w-10 h-10 rounded-full bg-white text-blue-600 flex items-center justify-center font-bold mr-4">4</div>
                  <h4 className="text-xl font-semibold text-white">Submit to CCXT</h4>
                </div>
              </div>
              <div className="p-6">
                <p className="text-gray-300 mb-4">
                  Prepare and submit a pull request to the CCXT repository:
                </p>
                <ul className="space-y-2 text-gray-300 ml-6 list-disc">
                  <li>Ensure code follows CCXT style guidelines</li>
                  <li>Include all required documentation updates</li>
                  <li>Provide test results and coverage metrics</li>
                  <li>Address any code r
