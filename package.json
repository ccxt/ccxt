{
  "name": "ccxt",
  "version": "4.4.34",
  "description": "A JavaScript / TypeScript / Python / C# / PHP cryptocurrency trading library with support for 100+ exchanges",
  "unpkg": "dist/ccxt.browser.min.js",
  "type": "module",
  "exports": {
    ".": {
      "import": "./js/ccxt.js",
      "require": "./dist/ccxt.cjs"
    }
  },
  "bin": {
    "ccxt": "examples/js/cli.js"
  },
  "engines": {
    "node": ">=15.0.0"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ccxt/ccxt.git"
  },
  "readme": "README.md",
  "scripts": {
    "benchmark": "tsx examples/ts/benchmark.ts",
    "build": "npm run pre-transpile && npm run transpile && npm run post-transpile && npm run update-badges && npm run build-docs",
    "build-docs": "node jsdoc2md.js && node examples2md.js",
    "buildCS": "dotnet build cs/ccxt.sln",
    "buildCSRelease": "dotnet build cs --configuration Release",
    "bundle": "npm run bundle-cjs && npm run bundle-browser",
    "bundle-browser": "webpack build -c webpack.config.js && webpack build -c webpack.config.js --optimization-minimize --output-filename ccxt.browser.min.js",
    "bundle-cjs": "rollup -c rollup.config.js",
    "capabilities": "node ./examples/js/exchange-capabilities.js",
    "check-js-syntax": "node -e \"console.log(process.cwd())\" && eslint --version && npm run lint",
    "check-php-syntax": "npm run check-rest-php-syntax && npm run check-ws-php-syntax",
    "check-python-syntax": "cd python && tox -e qa && cd ..",
    "check-python-types": "cd python && tox -e type && cd ..",
    "check-rest-php-syntax": "php -f php/test/custom/syntax.php",
    "check-syntax": "npm run transpile && npm run check-js-syntax && npm run check-python-syntax && npm run check-php-syntax",
    "check-ws-php-syntax": "php -f php/pro/test/custom/syntax.php",
    "cli.cs": "dotnet run --project \"./cs/cli/cli.csproj\"",
    "cli.js": "node ./examples/js/cli.js",
    "cli.php": "php ./examples/php/cli.php",
    "cli.py": "python3 ./examples/py/cli.py",
    "cli.ts": "tsx examples/ts/cli.ts",
    "commonjs-test": "node ./utils/test-commonjs.cjs",
    "copy-python-files": "npm run copy-python-package && npm run copy-python-license && npm run copy-python-keys && npm run copy-python-readme",
    "copy-python-keys": "node build/copy keys.json python/keys.json",
    "copy-python-license": "node build/copy LICENSE.txt python/LICENSE.txt",
    "copy-python-package": "node build/copy package.json python/package.json",
    "copy-python-readme": "node build/copy README.md python/README.md",
    "coverage-js": "npm run instrument && npm run nyc-coverage && rm -rf jsInstrumented",
    "csharp": "npm run transpileCS && npm run transpileCSWs && npm run buildCS",
    "dev-force-transpile": "npm run fast-force-transpileRest && npm run fast-force-transpileWs",
    "docker": "docker-compose run --rm ccxt",
    "emitAPI": "node build/generateImplicitAPI.js",
    "eslint": "eslint",
    "export-exchanges": "node build/export-exchanges",
    "fast-force-transpileRest": "node build/transpile.js --multiprocess --force",
    "fast-force-transpileWs": "node build/transpileWS.js --multiprocess --force",
    "fixTSBug": "node build/fixTSBug",
    "force-build": "npm run pre-transpile && npm run force-transpile-fast && npm run csharp && npm run post-transpile && npm run update-badges",
    "force-build-slow": "npm run pre-transpile && npm run force-transpile && npm run post-transpile && npm run update-badges",
    "force-transpile": "npm run force-transpileRest && npm run force-transpileWs",
    "force-transpile-fast": "npm run dev-force-transpile",
    "force-transpileRest": "node build/transpile --force",
    "force-transpileWs": "node build/transpileWS --force",
    "git-ignore-generated-files": "node build/git-ignore-generated-files.cjs",
    "git-unignore-generated-files": "node build/git-ignore-generated-files.cjs --unignore",
    "id-tests":             "npm run id-tests-js && npm run id-tests-py && npm run id-tests-php && npm run id-tests-cs",
    "id-tests-cs":          "npm run ti-cs  -- --idTests",
    "id-tests-js":          "npm run ti-js  -- --idTests",
    "id-tests-php":         "npm run ti-php -- --idTests",
    "id-tests-py":          "npm run ti-py  -- --idTests",
    "instrument": "nyc instrument js/ jsInstrumented/",
    "lint": "eslint \"ts/src/*.ts\" \"ts/src/base/Exchange.ts\" \"ts/src/pro/*.ts\" --cache --cache-location .cache/eslintcache --cache-strategy metadata",
    "live-tests": "node run-tests --useProxy",
    "live-tests-rest":       "npm run live-tests",
    "live-tests-rest-csharp":"npm run live-tests -- --csharp",
    "live-tests-rest-js":    "npm run live-tests -- --js",
    "live-tests-rest-php":   "npm run live-tests -- --php",
    "live-tests-rest-py":    "npm run live-tests -- --python",
    "live-tests-rest-ts":    "npm run live-tests -- --ts",
    "live-tests-ws":         "npm run live-tests -- --ws",
    "live-tests-ws-csharp":  "npm run live-tests -- --csharp --ws",
    "live-tests-ws-js":      "npm run live-tests -- --js     --ws",
    "live-tests-ws-php":     "npm run live-tests -- --php    --ws",
    "live-tests-ws-py":      "npm run live-tests -- --python --ws",
    "live-tests-ws-ts":      "npm run live-tests -- --ts     --ws",
    "nyc-coverage": "nyc --reporter=html --reporter=lcov --exclude='js/src/pro/**' --exclude='js/src/base/**' --exclude='js/src/test/**' --exclude='js/src/abstract/**' --exclude='js/src/static_dependencies' node jsInstrumented/src/test/tests.init.js --requestTests --responseTests",
    "package-test": "./utils/package-test.sh",
    "post-transpile": "npm run check-python-syntax && npm run check-php-syntax",
    "postinstall": "node postinstall.js",
    "pre-transpile": "npm run export-exchanges && npm run vss && npm run tsBuild && npm run emitAPI && npm run validate-types && npm run tsBuildExamples && npm run copy-python-files && npm run check-js-syntax && npm run bundle",
    "pre-transpile-pr": "npm run export-exchanges && npm run tsBuild && npm run emitAPI && npm run check-js-syntax",
    "request-cs":           "npm run ti-cs  -- --requestTests",
    "request-js":           "npm run ti-js  -- --requestTests",
    "request-php":          "npm run request-php-sync && npm run request-php-async",
    "request-php-async":    "npm run ti-php -- --requestTests",
    "request-php-sync":     "npm run ti-php -- --requestTests --sync",
    "request-py":           "npm run request-py-sync && npm run request-py-async",
    "request-py-async":     "npm run ti-py  -- --requestTests",
    "request-py-sync":      "npm run ti-py  -- --requestTests --sync",
    "request-tests":        "npm run request-js && npm run request-py && npm run request-php && npm run request-cs",
    "request-ts":           "npm run ti-ts  -- --requestTests",
    "response-cs":          "npm run ti-cs  -- --responseTests",
    "response-js":          "npm run ti-js  -- --responseTests",
    "response-php":         "npm run response-php-sync && npm run response-php-async",
    "response-php-async":   "npm run ti-php -- --responseTests",
    "response-php-sync":    "npm run ti-php -- --responseTests --sync",
    "response-py":          "npm run response-py-sync && npm run response-py-async",
    "response-py-async": "npm run ti-py  -- --responseTests",
    "response-py-sync": "npm run ti-py  -- --responseTests --sync",
    "response-tests":       "npm run response-js && npm run response-py && npm run response-php && npm run response-cs",
    "response-ts":          "npm run ti-ts  -- --responseTests",
    "runtests": "node run-tests",
    "serve-docs": "docsify serve ./wiki",
    "static-updater": "node ./utils/update-static-tests-data --update",
    "test":                 "npm run build && npm run commonjs-test && npm run id-tests && npm run request-tests && npm run response-tests && npm run live-tests",
    "test-base-rest":       "npm run test-base-rest-js && npm run test-base-rest-py && npm run test-base-rest-php && npm run test-base-rest-cs",
    "test-base-rest-cs":    "npm run ti-cs  -- --baseTests",
    "test-base-rest-js":    "npm run ti-js  -- --baseTests",
    "test-base-rest-php":   "npm run ti-php -- --baseTests",
    "test-base-rest-py":    "npm run ti-py  -- --baseTests",
    "test-base-rest-ts":    "npm run ti-ts  -- --baseTests",
    "test-base-ws":         "npm run test-base-ws-js   && npm run test-base-ws-py   && npm run test-base-ws-php   && npm run test-base-ws-cs",
    "test-base-ws-cs":      "npm run ti-cs  -- --baseTests --ws",
    "test-base-ws-js":      "npm run ti-js  -- --baseTests --ws",
    "test-base-ws-php":     "npm run ti-php -- --baseTests --ws",
    "test-base-ws-py":      "npm run ti-py  -- --baseTests --ws",
    "test-base-ws-ts":      "npm run ti-ts  -- --baseTests --ws",
    "test-freshness": "tsx ./utils/test-freshness.ts",
    "ti-cs": "dotnet run --project cs/tests/tests.csproj",
    "ti-js": "node js/src/test/tests.init.js",
    "ti-php": "php php/test/tests_init.php",
    "ti-py": "python3 python/ccxt/test/tests_init.py",
    "ti-ts": "tsx ts/src/test/tests.init.ts",
    "transpile": "npm run transpileRest && npm run transpileWs",
    "transpileCS": "tsx build/csharpTranspiler.ts --multi",
    "transpileCsSingle": "tsx build/csharpTranspiler.ts",
    "transpileCSWs": "tsx build/csharpTranspiler.ts --ws",
    "transpileRest": "node build/transpile",
    "transpileWs": "node build/transpileWS",
    "tsBuild": "tsc || echo \"\"",
    "tsBuildExamples": "tsc -p ./examples/tsconfig.json",
    "tsBuildFile": "tsc --skipLibCheck --strictNullChecks false --strict --noImplicitAny false --esModuleInterop --isolatedModules false --forceConsistentCasingInFileNames --removeComments false --target ES2020 --declaration --allowJs --checkJs false --moduleResolution Node --module ES2022 --outDir ./js/src --lib ES2020.BigInt --lib dom ",
    "update-badges": "node build/update-badges",
    "update-links": "node build/update-links",
    "validate-types": "tsx build/validate-types.ts",
    "vss": "node build/vss"
  },
  "types": "./js/ccxt.d.ts",
  "devDependencies": {
    "@rollup/plugin-commonjs": "^21.0.3",
    "@rollup/plugin-json": "^4.1.0",
    "@rollup/plugin-node-resolve": "^15.2.3",
    "@types/node": "^18.15.11",
    "@typescript-eslint/eslint-plugin": "^5.30.5",
    "@typescript-eslint/parser": "^5.30.5",
    "ansicolor": "1.1.81",
    "as-table": "1.0.37",
    "asciichart": "^1.5.25",
    "assert": "^2.0.0",
    "ast-transpiler": "^0.0.60",
    "docsify": "^4.11.4",
    "eslint": "8.22.0",
    "eslint-config-airbnb-base": "15.0.0",
    "eslint-plugin-import": "2.25.4",
    "eslint-plugin-jsdoc": "^46.9.0",
    "esmify": "^2.1.1",
    "https-proxy-agent": "^5.0.1",
    "jsdoc-to-markdown": "^8.0.0",
    "ololog": "1.1.155",
    "piscina": "^3.2.0",
    "replace-in-file": "^6.3.5",
    "rollup": "^2.70.1",
    "rollup-plugin-execute": "1.1.1",
    "terser-webpack-plugin": "^5.3.9",
    "ts-loader": "^9.4.2",
    "tsx": "^4.7.2",
    "typescript": "4.7.4",
    "webpack": "^5.76.2",
    "webpack-cli": "^5.0.1"
  },
  "author": {
    "name": "Igor Kroitor",
    "email": "igor.kroitor@gmail.com",
    "url": "https://github.com/kroitor"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/ccxt/ccxt/issues"
  },
  "homepage": "https://ccxt.com",
  "keywords": [
    "algorithmic",
    "algotrading",
    "altcoin",
    "altcoins",
    "api",
    "arbitrage",
    "real-time",
    "realtime",
    "backtest",
    "backtesting",
    "bitcoin",
    "bot",
    "btc",
    "cny",
    "coin",
    "coins",
    "crypto",
    "cryptocurrency",
    "crypto currency",
    "crypto market",
    "currency",
    "currencies",
    "darkcoin",
    "dash",
    "digital currency",
    "doge",
    "dogecoin",
    "e-commerce",
    "etc",
    "eth",
    "ether",
    "ethereum",
    "exchange",
    "exchanges",
    "eur",
    "framework",
    "invest",
    "investing",
    "investor",
    "library",
    "light",
    "litecoin",
    "ltc",
    "market",
    "market data",
    "markets",
    "merchandise",
    "merchant",
    "minimal",
    "ohlcv",
    "order",
    "orderbook",
    "order book",
    "price",
    "price data",
    "pricefeed",
    "private",
    "public",
    "ripple",
    "strategy",
    "ticker",
    "tickers",
    "toolkit",
    "trade",
    "trader",
    "trading",
    "usd",
    "volume",
    "websocket",
    "websockets",
    "web socket",
    "web sockets",
    "ws",
    "xbt",
    "xrp",
    "zec",
    "zerocoin"
  ],
  "collective": {
    "type": "opencollective",
    "url": "https://opencollective.com/ccxt",
    "logo": "https://opencollective.com/ccxt/logo.txt"
  },
  "ethereum": "0x26a3CB49578F07000575405a57888681249c35Fd",
  "dependencies": {
    "ws": "^8.8.1"
  }
}
