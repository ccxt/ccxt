# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from v4_proto.dydxprotocol.revshare import query_pb2 as dydxprotocol_dot_revshare_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MarketMapperRevenueShareParams = channel.unary_unary(
                '/dydxprotocol.revshare.Query/MarketMapperRevenueShareParams',
                request_serializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryMarketMapperRevenueShareParams.SerializeToString,
                response_deserializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryMarketMapperRevenueShareParamsResponse.FromString,
                )
        self.MarketMapperRevShareDetails = channel.unary_unary(
                '/dydxprotocol.revshare.Query/MarketMapperRevShareDetails',
                request_serializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryMarketMapperRevShareDetails.SerializeToString,
                response_deserializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryMarketMapperRevShareDetailsResponse.FromString,
                )
        self.UnconditionalRevShareConfig = channel.unary_unary(
                '/dydxprotocol.revshare.Query/UnconditionalRevShareConfig',
                request_serializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryUnconditionalRevShareConfig.SerializeToString,
                response_deserializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryUnconditionalRevShareConfigResponse.FromString,
                )
        self.OrderRouterRevShare = channel.unary_unary(
                '/dydxprotocol.revshare.Query/OrderRouterRevShare',
                request_serializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryOrderRouterRevShare.SerializeToString,
                response_deserializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryOrderRouterRevShareResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def MarketMapperRevenueShareParams(self, request, context):
        """MarketMapperRevenueShareParams queries the revenue share params for the
        market mapper
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarketMapperRevShareDetails(self, request, context):
        """Queries market mapper revenue share details for a specific market
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnconditionalRevShareConfig(self, request, context):
        """Queries unconditional revenue share config
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OrderRouterRevShare(self, request, context):
        """Queries order router rev share
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MarketMapperRevenueShareParams': grpc.unary_unary_rpc_method_handler(
                    servicer.MarketMapperRevenueShareParams,
                    request_deserializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryMarketMapperRevenueShareParams.FromString,
                    response_serializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryMarketMapperRevenueShareParamsResponse.SerializeToString,
            ),
            'MarketMapperRevShareDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.MarketMapperRevShareDetails,
                    request_deserializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryMarketMapperRevShareDetails.FromString,
                    response_serializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryMarketMapperRevShareDetailsResponse.SerializeToString,
            ),
            'UnconditionalRevShareConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UnconditionalRevShareConfig,
                    request_deserializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryUnconditionalRevShareConfig.FromString,
                    response_serializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryUnconditionalRevShareConfigResponse.SerializeToString,
            ),
            'OrderRouterRevShare': grpc.unary_unary_rpc_method_handler(
                    servicer.OrderRouterRevShare,
                    request_deserializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryOrderRouterRevShare.FromString,
                    response_serializer=dydxprotocol_dot_revshare_dot_query__pb2.QueryOrderRouterRevShareResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dydxprotocol.revshare.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def MarketMapperRevenueShareParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.revshare.Query/MarketMapperRevenueShareParams',
            dydxprotocol_dot_revshare_dot_query__pb2.QueryMarketMapperRevenueShareParams.SerializeToString,
            dydxprotocol_dot_revshare_dot_query__pb2.QueryMarketMapperRevenueShareParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarketMapperRevShareDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.revshare.Query/MarketMapperRevShareDetails',
            dydxprotocol_dot_revshare_dot_query__pb2.QueryMarketMapperRevShareDetails.SerializeToString,
            dydxprotocol_dot_revshare_dot_query__pb2.QueryMarketMapperRevShareDetailsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnconditionalRevShareConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.revshare.Query/UnconditionalRevShareConfig',
            dydxprotocol_dot_revshare_dot_query__pb2.QueryUnconditionalRevShareConfig.SerializeToString,
            dydxprotocol_dot_revshare_dot_query__pb2.QueryUnconditionalRevShareConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OrderRouterRevShare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.revshare.Query/OrderRouterRevShare',
            dydxprotocol_dot_revshare_dot_query__pb2.QueryOrderRouterRevShare.SerializeToString,
            dydxprotocol_dot_revshare_dot_query__pb2.QueryOrderRouterRevShareResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
