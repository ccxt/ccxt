# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from v4_proto.dydxprotocol.revshare import tx_pb2 as dydxprotocol_dot_revshare_dot_tx__pb2


class MsgStub(object):
    """Msg defines the Msg service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SetMarketMapperRevenueShare = channel.unary_unary(
                '/dydxprotocol.revshare.Msg/SetMarketMapperRevenueShare',
                request_serializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetMarketMapperRevenueShare.SerializeToString,
                response_deserializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetMarketMapperRevenueShareResponse.FromString,
                )
        self.SetMarketMapperRevShareDetailsForMarket = channel.unary_unary(
                '/dydxprotocol.revshare.Msg/SetMarketMapperRevShareDetailsForMarket',
                request_serializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetMarketMapperRevShareDetailsForMarket.SerializeToString,
                response_deserializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetMarketMapperRevShareDetailsForMarketResponse.FromString,
                )
        self.UpdateUnconditionalRevShareConfig = channel.unary_unary(
                '/dydxprotocol.revshare.Msg/UpdateUnconditionalRevShareConfig',
                request_serializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgUpdateUnconditionalRevShareConfig.SerializeToString,
                response_deserializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgUpdateUnconditionalRevShareConfigResponse.FromString,
                )
        self.SetOrderRouterRevShare = channel.unary_unary(
                '/dydxprotocol.revshare.Msg/SetOrderRouterRevShare',
                request_serializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetOrderRouterRevShare.SerializeToString,
                response_deserializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetOrderRouterRevShareResponse.FromString,
                )


class MsgServicer(object):
    """Msg defines the Msg service.
    """

    def SetMarketMapperRevenueShare(self, request, context):
        """SetMarketMapperRevenueShare sets the revenue share for a market
        mapper.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMarketMapperRevShareDetailsForMarket(self, request, context):
        """SetMarketMapperRevenueShareDetails sets the revenue share details for a
        market mapper.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUnconditionalRevShareConfig(self, request, context):
        """UpdateUnconditionalRevShareConfig sets the unconditional revshare config
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetOrderRouterRevShare(self, request, context):
        """SetOrderRouterRevShare sets the revenue share for an order router.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MsgServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SetMarketMapperRevenueShare': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMarketMapperRevenueShare,
                    request_deserializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetMarketMapperRevenueShare.FromString,
                    response_serializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetMarketMapperRevenueShareResponse.SerializeToString,
            ),
            'SetMarketMapperRevShareDetailsForMarket': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMarketMapperRevShareDetailsForMarket,
                    request_deserializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetMarketMapperRevShareDetailsForMarket.FromString,
                    response_serializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetMarketMapperRevShareDetailsForMarketResponse.SerializeToString,
            ),
            'UpdateUnconditionalRevShareConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUnconditionalRevShareConfig,
                    request_deserializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgUpdateUnconditionalRevShareConfig.FromString,
                    response_serializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgUpdateUnconditionalRevShareConfigResponse.SerializeToString,
            ),
            'SetOrderRouterRevShare': grpc.unary_unary_rpc_method_handler(
                    servicer.SetOrderRouterRevShare,
                    request_deserializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetOrderRouterRevShare.FromString,
                    response_serializer=dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetOrderRouterRevShareResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dydxprotocol.revshare.Msg', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Msg(object):
    """Msg defines the Msg service.
    """

    @staticmethod
    def SetMarketMapperRevenueShare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.revshare.Msg/SetMarketMapperRevenueShare',
            dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetMarketMapperRevenueShare.SerializeToString,
            dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetMarketMapperRevenueShareResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetMarketMapperRevShareDetailsForMarket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.revshare.Msg/SetMarketMapperRevShareDetailsForMarket',
            dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetMarketMapperRevShareDetailsForMarket.SerializeToString,
            dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetMarketMapperRevShareDetailsForMarketResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUnconditionalRevShareConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.revshare.Msg/UpdateUnconditionalRevShareConfig',
            dydxprotocol_dot_revshare_dot_tx__pb2.MsgUpdateUnconditionalRevShareConfig.SerializeToString,
            dydxprotocol_dot_revshare_dot_tx__pb2.MsgUpdateUnconditionalRevShareConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetOrderRouterRevShare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.revshare.Msg/SetOrderRouterRevShare',
            dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetOrderRouterRevShare.SerializeToString,
            dydxprotocol_dot_revshare_dot_tx__pb2.MsgSetOrderRouterRevShareResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
