# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from v4_proto.dydxprotocol.listing import query_pb2 as dydxprotocol_dot_listing_dot_query__pb2


class QueryStub(object):
    """Query defines the gRPC querier service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MarketsHardCap = channel.unary_unary(
                '/dydxprotocol.listing.Query/MarketsHardCap',
                request_serializer=dydxprotocol_dot_listing_dot_query__pb2.QueryMarketsHardCap.SerializeToString,
                response_deserializer=dydxprotocol_dot_listing_dot_query__pb2.QueryMarketsHardCapResponse.FromString,
                )
        self.ListingVaultDepositParams = channel.unary_unary(
                '/dydxprotocol.listing.Query/ListingVaultDepositParams',
                request_serializer=dydxprotocol_dot_listing_dot_query__pb2.QueryListingVaultDepositParams.SerializeToString,
                response_deserializer=dydxprotocol_dot_listing_dot_query__pb2.QueryListingVaultDepositParamsResponse.FromString,
                )


class QueryServicer(object):
    """Query defines the gRPC querier service.
    """

    def MarketsHardCap(self, request, context):
        """Queries for the hard cap number of listed markets
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListingVaultDepositParams(self, request, context):
        """Queries the listing vault deposit params
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QueryServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MarketsHardCap': grpc.unary_unary_rpc_method_handler(
                    servicer.MarketsHardCap,
                    request_deserializer=dydxprotocol_dot_listing_dot_query__pb2.QueryMarketsHardCap.FromString,
                    response_serializer=dydxprotocol_dot_listing_dot_query__pb2.QueryMarketsHardCapResponse.SerializeToString,
            ),
            'ListingVaultDepositParams': grpc.unary_unary_rpc_method_handler(
                    servicer.ListingVaultDepositParams,
                    request_deserializer=dydxprotocol_dot_listing_dot_query__pb2.QueryListingVaultDepositParams.FromString,
                    response_serializer=dydxprotocol_dot_listing_dot_query__pb2.QueryListingVaultDepositParamsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dydxprotocol.listing.Query', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Query(object):
    """Query defines the gRPC querier service.
    """

    @staticmethod
    def MarketsHardCap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.listing.Query/MarketsHardCap',
            dydxprotocol_dot_listing_dot_query__pb2.QueryMarketsHardCap.SerializeToString,
            dydxprotocol_dot_listing_dot_query__pb2.QueryMarketsHardCapResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListingVaultDepositParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dydxprotocol.listing.Query/ListingVaultDepositParams',
            dydxprotocol_dot_listing_dot_query__pb2.QueryListingVaultDepositParams.SerializeToString,
            dydxprotocol_dot_listing_dot_query__pb2.QueryListingVaultDepositParamsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
