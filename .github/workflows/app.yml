name: Test application

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - name: Install npm dependencies
      run: npm ci --include=dev
    - name: Determine modified files
      run: ./utils/init_actions.sh
    - name: Debug output
      run: |
        echo "Important files modified: ${{ env.important_modified }}"
        echo "REST files: ${{ env.rest_files }}"
        echo "WS files: ${{ env.ws_files }}"
    - name: Pre-transpile and transpile TS
      if: env.important_modified == 'true'
      run: npm run pre-transpile-js
    - name: Pre-transpile and transpile TS (Simplified)
      if: env.important_modified == 'false'
      run: npm run pre-transpile-js-simple
    - name: Run Base Tests
      if: env.important_modified == 'true'
      run: npm run test-base-rest-js
    - name: Run Base Ws Tests
      if: env.important_modified == 'true'
      run: npm run test-base-ws-js
    - name: Run Id Tests
      if: env.important_modified == 'true'
      run: npm run id-tests-js
    - name: Request tests
      if: env.important_modified == 'true'
      run: nnpm run request-js
    - name: Request tests (specific)
      if: env.important_modified == 'false'
      run: |
        cleaned_rest_files=$(echo ${{ env.rest_files }} | tr -s ' ')
        for exchange in $cleaned_rest_files; do
          npm run request-js -- $exchange
        done
    - name: Response tests
      if: env.important_modified == 'true'
      run: npm run response-js
    - name: Response tests (specific)
      if: env.important_modified == 'false'
      run: |
        cleaned_rest_files=$(echo ${{ env.rest_files }} | tr -s ' ')
        for exchange in $cleaned_rest_files; do
          npm run response-js -- $exchange
        done