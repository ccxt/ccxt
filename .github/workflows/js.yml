name: Js

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, '[Automated changes]') && !contains(github.event.head_commit.message, 'Merge branch ''master'' of https://github.com/ccxt/ccxt') }}
    steps:
    - name: Print vars
      run: |
        echo "GitHub Actor: $GITHUB_ACTOR"
        echo "Repository: $GITHUB_REPOSITORY"
        echo "Event Name: $GITHUB_EVENT_NAME"
        echo "Workflow Name: $GITHUB_WORKFLOW"
        echo "Run ID: $GITHUB_RUN_ID"
        echo "Run Number: $GITHUB_RUN_NUMBER"
        echo "Job Name: $GITHUB_JOB"
        echo "Ref: $GITHUB_REF"
        echo "SHA: $GITHUB_SHA"
        echo "Head Commit: ${{ github.event.head_commit.message }}"
        echo "Branch Name: ${GITHUB_REF##*/}"  # Extract the branch name from GITHUB_REF
    - name: Check if secret is available if not prod
        run: |
          if [ -z "${{ secrets.NUGET_PROD }}" ]; then
            echo "❌ DEPLOY_KEY is NOT defined in this environment."
            exit 1
          else
            echo "✅ DEPLOY_KEY is available."
          fi

  live-tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download shared_env
        uses: actions/download-artifact@v4
        with:
          name: shared_env
      - name: Download JS Files
        uses: actions/download-artifact@v4
        with:
          name: js-files
          path: js/
      - name: Restore shared_env
        run: ./utils/restore_shared_env.sh
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install npm dependencies
        run: npm ci --include=dev
      - name: Export exchanges
        run: npm run export-exchanges
      - name: Live tests
        if: env.important_modified == 'true'
        run: ./run-tests-simul.sh --js
      - name: Live tests (specific)
        if: env.important_modified == 'false'
        run: ./run-tests-simul.sh --js "${{ env.rest_files }}" "${{ env.ws_files }}"