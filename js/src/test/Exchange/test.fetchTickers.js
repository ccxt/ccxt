// ----------------------------------------------------------------------------

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code
// EDIT THE CORRESPONDENT .ts FILE INSTEAD

import assert from 'assert';
import testTicker from './base/test.ticker.js';
import testSharedMethods from './base/test.sharedMethods.js';
async function testFetchTickers(exchange, skippedProperties, symbol) {
    // const withoutSymbol = testFetchTickersHelper (exchange, skippedProperties, undefined);
    // const withSymbol = testFetchTickersHelper (exchange, skippedProperties, [ symbol ]);
    await Promise.all([testFetchTickersHelper(exchange, skippedProperties, undefined), testFetchTickersHelper(exchange, skippedProperties, [symbol])]);
}
async function testFetchTickersHelper(exchange, skippedProperties, argSymbols, argParams = {}) {
    const method = 'fetchTickers';
    const response = await exchange.fetchTickers(argSymbols, argParams);
    assert(typeof response === 'object', exchange.id + ' ' + method + ' ' + exchange.json(argSymbols) + ' must return an object. ' + exchange.json(response));
    const values = Object.values(response);
    let checkedSymbol = undefined;
    if (argSymbols !== undefined && argSymbols.length === 1) {
        checkedSymbol = argSymbols[0];
    }
    testSharedMethods.assertNonEmtpyArray(exchange, skippedProperties, method, values, checkedSymbol);
    for (let i = 0; i < values.length; i++) {
        // todo: symbol check here
        const ticker = values[i];
        testTicker(exchange, skippedProperties, method, ticker, checkedSymbol);
    }
}
export default testFetchTickers;
