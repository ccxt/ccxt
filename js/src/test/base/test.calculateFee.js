// ----------------------------------------------------------------------------

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code
// EDIT THE CORRESPONDENT .ts FILE INSTEAD

// @ts-nocheck
import { strictEqual, deepEqual } from 'assert';
import { Exchange, functions } from '../../../ccxt.js';
const { index, aggregate, unCamelCase } = functions;
const equal = strictEqual;
function testCalculateFee() {
    const price = 100.00;
    const amount = 10.00;
    const taker = 0.0025;
    const maker = 0.0010;
    const fees = { taker, maker };
    const market = {
        'id': 'foobar',
        'symbol': 'FOO/BAR',
        'base': 'FOO',
        'quote': 'BAR',
        'taker': taker,
        'maker': maker,
        'spot': true,
        'precision': {
            'amount': 0.00000001,
            'price': 0.00000001,
        },
    };
    const exchange = new Exchange({
        'id': 'mock',
        'markets': {
            'FOO/BAR': market,
        },
    });
    Object.keys(fees).forEach((takerOrMaker) => {
        const result = exchange.calculateFee(market['symbol'], 'limit', 'sell', amount, price, takerOrMaker, {});
        deepEqual(result, {
            'type': takerOrMaker,
            'currency': 'BAR',
            'rate': fees[takerOrMaker],
            'cost': fees[takerOrMaker] * amount * price,
        });
    });
}
export default testCalculateFee;
